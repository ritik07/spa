{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport MaskBase from './base';\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nvar PathMask = /** @class */function (_super) {\n  __extends(PathMask, _super);\n  function PathMask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  // 生成 mask 的路径\n  PathMask.prototype.getMaskPath = function () {\n    var points = this.points;\n    var path = [];\n    if (points.length) {\n      each(points, function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n    return path;\n  };\n  PathMask.prototype.getMaskAttrs = function () {\n    return {\n      path: this.getMaskPath()\n    };\n  };\n  /**\n   * 添加一个点\n   */\n  PathMask.prototype.addPoint = function () {\n    this.resize();\n  };\n  return PathMask;\n}(MaskBase);\nexport default PathMask;","map":{"version":3,"sources":["../../../../src/interaction/action/mask/path.ts"],"names":[],"mappings":";AAAA,SAAS,IAAI,QAAQ,YAAY;AACjC,OAAO,QAAQ,MAAM,QAAQ;AAE7B;;;AAGG;AACH,IAAA,QAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAuB,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;EAAvB,SAAA,QAAA,GAAA;;EA8BA;EA7BE;EACU,QAAA,CAAA,SAAA,CAAA,WAAW,GAArB,YAAA;IACE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM;IAC1B,IAAM,IAAI,GAAG,EAAE;IACf,IAAI,MAAM,CAAC,MAAM,EAAE;MACjB,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,KAAK,EAAA;QACxB,IAAI,KAAK,KAAK,CAAC,EAAE;UACf,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;SACnC,MAAM;UACL,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QACnC;MACH,CAAC,CAAC;MACF,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C;IACD,OAAO,IAAI;EACb,CAAC;EAES,QAAA,CAAA,SAAA,CAAA,YAAY,GAAtB,YAAA;IACE,OAAO;MACL,IAAI,EAAE,IAAI,CAAC,WAAW;KACvB;EACH,CAAC;EAED;;AAEG;EACI,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAf,YAAA;IACE,IAAI,CAAC,MAAM,EAAE;EACf,CAAC;EACH,OAAA,QAAC;AAAD,CAAC,CA9BsB,QAAQ,CAAA;AAgC/B,eAAe,QAAQ","sourcesContent":["import { each } from '@antv/util';\nimport MaskBase from './base';\n\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nclass PathMask extends MaskBase {\n  // 生成 mask 的路径\n  protected getMaskPath() {\n    const points = this.points;\n    const path = [];\n    if (points.length) {\n      each(points, (point, index) => {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n    return path;\n  }\n\n  protected getMaskAttrs() {\n    return {\n      path: this.getMaskPath(),\n    };\n  }\n\n  /**\n   * 添加一个点\n   */\n  public addPoint() {\n    this.resize();\n  }\n}\n\nexport default PathMask;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}