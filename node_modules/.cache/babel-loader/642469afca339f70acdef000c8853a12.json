{"ast":null,"code":"import { __values } from \"tslib\";\nimport { isObject, each, get, groupBy, isNil, filter } from '@antv/util';\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { antiCollision } from './util';\n/** label text和line距离 4px */\nvar MARGIN = 4;\n/**\n * 配置 labelline\n * @param item PolarLabelItem\n */\nfunction drawLabelline(item /** PolarLabelItem */, coordinate) {\n  /** 坐标圆心 */\n  var center = coordinate.getCenter();\n  /** 圆半径 */\n  var radius = coordinate.getRadius();\n  if (item && item.labelLine) {\n    var angle = item.angle,\n      labelOffset = item.offset;\n    // 贴近圆周\n    var startPoint = polarToCartesian(center.x, center.y, radius, angle);\n    var itemX = item.x + get(item, 'offsetX', 0) * (Math.cos(angle) > 0 ? 1 : -1);\n    var itemY = item.y + get(item, 'offsetY', 0) * (Math.sin(angle) > 0 ? 1 : -1);\n    var endPoint = {\n      x: itemX - Math.cos(angle) * MARGIN,\n      y: itemY - Math.sin(angle) * MARGIN\n    };\n    var smoothConnector = item.labelLine.smooth;\n    var path = [];\n    var dx = endPoint.x - center.x;\n    var dy = endPoint.y - center.y;\n    var endAngle = Math.atan(dy / dx);\n    // 第三象限 & 第四象限\n    if (dx < 0) {\n      endAngle += Math.PI;\n    }\n    // 默认 smooth, undefined 也为 smooth\n    if (smoothConnector === false) {\n      if (!isObject(item.labelLine)) {\n        // labelLine: true\n        item.labelLine = {};\n      }\n      // 表示弧线的方向，0 表示从起点到终点沿逆时针画弧, 1 表示顺时针\n      var sweepFlag = 0;\n      // 第一象限\n      if (angle < 0 && angle > -Math.PI / 2 || angle > Math.PI * 1.5) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n      // 第二象限\n      if (angle >= 0 && angle < Math.PI / 2) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n      // 第三象限\n      if (angle >= Math.PI / 2 && angle < Math.PI) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n      // 第四象限\n      if (angle < -Math.PI / 2 || angle >= Math.PI && angle < Math.PI * 1.5) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n      var distance = labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0);\n      var breakPoint = polarToCartesian(center.x, center.y, radius + distance, angle);\n      // 圆弧的结束点\n      var breakPoint3 = polarToCartesian(center.x, center.y, radius + labelOffset / 2, endAngle);\n      /**\n       * @example\n       * M 100 100 L100 90 A 50 50 0 0 0 150 50\n       * 移动至 (100, 100), 连接到 (100, 90), 以 (50, 50) 为圆心，绘制圆弧至 (150, 50);\n       * A 命令的第 4 个参数 large-arc-flag, 决定弧线是大于还是小于 180 度: 0 表示小角度弧，1 表示大角\n       * 第 5 个参数: 是否顺时针绘制\n       */\n      // 默认小弧\n      var largeArcFlag = 0;\n      // step1: 移动至起点\n      path.push(\"M \".concat(startPoint.x, \" \").concat(startPoint.y));\n      // step2: 连接拐点\n      path.push(\"L \".concat(breakPoint.x, \" \").concat(breakPoint.y));\n      // step3: 绘制圆弧 至 结束点\n      path.push(\"A \".concat(center.x, \" \").concat(center.y, \" 0 \").concat(largeArcFlag, \" \").concat(sweepFlag, \" \").concat(breakPoint3.x, \" \").concat(breakPoint3.y));\n      // step4: 连接结束点\n      path.push(\"L \".concat(endPoint.x, \" \").concat(endPoint.y));\n    } else {\n      var breakPoint = polarToCartesian(center.x, center.y, radius + (labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0)), angle);\n      // G2 旧的拉线\n      // path.push('Q', `${breakPoint.x}`, `${breakPoint.y}`, `${endPoint.x}`, `${endPoint.y}`);\n      var xSign = startPoint.x < center.x ? 1 : -1;\n      // step1: 连接结束点\n      path.push(\"M \".concat(endPoint.x, \" \").concat(endPoint.y));\n      var slope1 = (startPoint.y - center.y) / (startPoint.x - center.x);\n      var slope2 = (endPoint.y - center.y) / (endPoint.x - center.x);\n      if (Math.abs(slope1 - slope2) > Math.pow(Math.E, -16)) {\n        // step2: 绘制 curve line (起点 & 结合点与圆心的斜率不等时, 由于存在误差, 使用近似处理)\n        path.push.apply(path, ['C', endPoint.x + xSign * 4, endPoint.y, 2 * breakPoint.x - startPoint.x, 2 * breakPoint.y - startPoint.y, startPoint.x, startPoint.y]);\n      }\n      // step3: 连接至起点\n      path.push(\"L \".concat(startPoint.x, \" \").concat(startPoint.y));\n    }\n    item.labelLine.path = path.join(' ');\n  }\n}\n/**\n * 饼图 outer-label 布局, 适用于 type = pie 且 label offset > 0 的标签\n */\nexport function pieOuterLabelLayout(originalItems, labels, shapes, region) {\n  var e_1, _a;\n  var items = filter(originalItems, function (item) {\n    return !isNil(item);\n  });\n  /** 坐标系 */\n  var coordinate = labels[0] && labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n  /** 坐标圆心 */\n  var center = coordinate.getCenter();\n  /** 圆半径 */\n  var radius = coordinate.getRadius();\n  /** label shapes */\n  var labelsMap = {};\n  try {\n    for (var labels_1 = __values(labels), labels_1_1 = labels_1.next(); !labels_1_1.done; labels_1_1 = labels_1.next()) {\n      var labelShape = labels_1_1.value;\n      labelsMap[labelShape.get('id')] = labelShape;\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (labels_1_1 && !labels_1_1.done && (_a = labels_1.return)) _a.call(labels_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  // note labelHeight 可以控制 label 的行高\n  var labelHeight = get(items[0], 'labelHeight', 14);\n  var labelOffset = get(items[0], 'offset', 0);\n  if (labelOffset <= 0) {\n    return;\n  }\n  var LEFT_HALF_KEY = 'left';\n  var RIGHT_HALF_KEY = 'right';\n  // step 1: separate labels\n  var separateLabels = groupBy(items, function (item) {\n    return item.x < center.x ? LEFT_HALF_KEY : RIGHT_HALF_KEY;\n  });\n  var start = coordinate.start,\n    end = coordinate.end;\n  // step2: calculate totalHeight\n  var totalHeight = Math.min((radius + labelOffset + labelHeight) * 2, coordinate.getHeight());\n  var totalR = totalHeight / 2;\n  /** labels 容器的范围(后续根据组件的布局设计进行调整) */\n  var labelsContainerRange = {\n    minX: start.x,\n    maxX: end.x,\n    minY: center.y - totalR,\n    maxY: center.y + totalR\n  };\n  // step 3: antiCollision\n  each(separateLabels, function (half, key) {\n    var maxLabelsCountForOneSide = Math.floor(totalHeight / labelHeight);\n    if (half.length > maxLabelsCountForOneSide) {\n      half.sort(function (a, b) {\n        // sort by percentage DESC\n        return b.percent - a.percent;\n      });\n      each(half, function (labelItem, idx) {\n        if (idx + 1 > maxLabelsCountForOneSide) {\n          labelsMap[labelItem.id].set('visible', false);\n          labelItem.invisible = true;\n        }\n      });\n    }\n    antiCollision(half, labelHeight, labelsContainerRange);\n  });\n  each(separateLabels, function (half, key) {\n    each(half, function (item) {\n      var isRight = key === RIGHT_HALF_KEY;\n      var labelShape = labelsMap[item.id];\n      // because group could not effect content-shape, should set content-shape position manually\n      var content = labelShape.getChildByIndex(0);\n      // textShape 发生过调整\n      if (content) {\n        var r = radius + labelOffset;\n        // (x - cx)^2 + (y - cy)^2 = totalR^2\n        var dy = item.y - center.y;\n        var rPow2 = Math.pow(r, 2);\n        var dyPow2 = Math.pow(dy, 2);\n        var dxPow2 = rPow2 - dyPow2 > 0 ? rPow2 - dyPow2 : 0;\n        var dx = Math.sqrt(dxPow2);\n        var dx_offset = Math.abs(Math.cos(item.angle) * r);\n        if (!isRight) {\n          // left\n          item.x = center.x - Math.max(dx, dx_offset);\n        } else {\n          // right\n          item.x = center.x + Math.max(dx, dx_offset);\n        }\n      }\n      // adjust labelShape\n      if (content) {\n        content.attr('y', item.y);\n        content.attr('x', item.x);\n      }\n      drawLabelline(item, coordinate);\n    });\n  });\n}","map":{"version":3,"sources":["../../../../../src/geometry/label/layout/pie/outer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { BBox, IGroup, IShape, IElement } from '@antv/g-base';\nimport { isObject, each, get, groupBy, isNil, filter } from '@antv/util';\nimport { polarToCartesian } from '../../../../util/graphics';\nimport { PolarLabelItem } from '../../interface';\nimport { antiCollision } from './util';\n\n/** label text和line距离 4px */\nconst MARGIN = 4;\n\n/**\n * 配置 labelline\n * @param item PolarLabelItem\n */\nfunction drawLabelline(item: any /** PolarLabelItem */, coordinate: Coordinate) {\n  /** 坐标圆心 */\n  const center = coordinate.getCenter();\n  /** 圆半径 */\n  const radius = coordinate.getRadius();\n\n  if (item && item.labelLine) {\n    const { angle, offset: labelOffset } = item;\n    // 贴近圆周\n    const startPoint = polarToCartesian(center.x, center.y, radius, angle);\n    const itemX = item.x + get(item, 'offsetX', 0) * (Math.cos(angle) > 0 ? 1 : -1);\n    const itemY = item.y + get(item, 'offsetY', 0) * (Math.sin(angle) > 0 ? 1 : -1);\n\n    const endPoint = {\n      x: itemX - Math.cos(angle) * MARGIN,\n      y: itemY - Math.sin(angle) * MARGIN,\n    };\n\n    const smoothConnector = item.labelLine.smooth;\n    const path = [];\n    const dx = endPoint.x - center.x;\n    const dy = endPoint.y - center.y;\n    let endAngle = Math.atan(dy / dx);\n    // 第三象限 & 第四象限\n    if (dx < 0) {\n      endAngle += Math.PI;\n    }\n\n    // 默认 smooth, undefined 也为 smooth\n    if (smoothConnector === false) {\n      if (!isObject(item.labelLine)) {\n        // labelLine: true\n        item.labelLine = {};\n      }\n\n      // 表示弧线的方向，0 表示从起点到终点沿逆时针画弧, 1 表示顺时针\n      let sweepFlag = 0;\n\n      // 第一象限\n      if ((angle < 0 && angle > -Math.PI / 2) || angle > Math.PI * 1.5) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      // 第二象限\n      if (angle >= 0 && angle < Math.PI / 2) {\n        if (endPoint.y > startPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      // 第三象限\n      if (angle >= Math.PI / 2 && angle < Math.PI) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      // 第四象限\n      if (angle < -Math.PI / 2 || (angle >= Math.PI && angle < Math.PI * 1.5)) {\n        if (startPoint.y > endPoint.y) {\n          sweepFlag = 1;\n        }\n      }\n\n      const distance = labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0);\n      const breakPoint = polarToCartesian(center.x, center.y, radius + distance, angle);\n      // 圆弧的结束点\n      const breakPoint3 = polarToCartesian(center.x, center.y, radius + labelOffset / 2, endAngle);\n\n      /**\n       * @example\n       * M 100 100 L100 90 A 50 50 0 0 0 150 50\n       * 移动至 (100, 100), 连接到 (100, 90), 以 (50, 50) 为圆心，绘制圆弧至 (150, 50);\n       * A 命令的第 4 个参数 large-arc-flag, 决定弧线是大于还是小于 180 度: 0 表示小角度弧，1 表示大角\n       * 第 5 个参数: 是否顺时针绘制\n       */\n      // 默认小弧\n      const largeArcFlag = 0;\n      // step1: 移动至起点\n      path.push(`M ${startPoint.x} ${startPoint.y}`);\n      // step2: 连接拐点\n      path.push(`L ${breakPoint.x} ${breakPoint.y}`);\n      // step3: 绘制圆弧 至 结束点\n      path.push(`A ${center.x} ${center.y} 0 ${largeArcFlag} ${sweepFlag} ${breakPoint3.x} ${breakPoint3.y}`);\n      // step4: 连接结束点\n      path.push(`L ${endPoint.x} ${endPoint.y}`);\n    } else {\n      const breakPoint = polarToCartesian(\n        center.x,\n        center.y,\n        radius + (labelOffset / 2 > 4 ? 4 : Math.max(labelOffset / 2 - 1, 0)),\n        angle\n      );\n      // G2 旧的拉线\n      // path.push('Q', `${breakPoint.x}`, `${breakPoint.y}`, `${endPoint.x}`, `${endPoint.y}`);\n      const xSign = startPoint.x < center.x ? 1 : -1;\n      // step1: 连接结束点\n      path.push(`M ${endPoint.x} ${endPoint.y}`);\n      const slope1 = (startPoint.y - center.y) / (startPoint.x - center.x);\n      const slope2 = (endPoint.y - center.y) / (endPoint.x - center.x);\n      if (Math.abs(slope1 - slope2) > Math.pow(Math.E, -16)) {\n        // step2: 绘制 curve line (起点 & 结合点与圆心的斜率不等时, 由于存在误差, 使用近似处理)\n        path.push(\n          ...[\n            'C',\n            endPoint.x + xSign * 4,\n            endPoint.y,\n            2 * breakPoint.x - startPoint.x,\n            2 * breakPoint.y - startPoint.y,\n            startPoint.x,\n            startPoint.y,\n          ]\n        );\n      }\n      // step3: 连接至起点\n      path.push(`L ${startPoint.x} ${startPoint.y}`);\n    }\n    item.labelLine.path = path.join(' ');\n  }\n}\n\n/**\n * 饼图 outer-label 布局, 适用于 type = pie 且 label offset > 0 的标签\n */\nexport function pieOuterLabelLayout(\n  originalItems: PolarLabelItem[],\n  labels: IGroup[],\n  shapes: IShape[] | IGroup[],\n  region: BBox\n) {\n  const items = filter(originalItems, (item) => !isNil(item));\n  /** 坐标系 */\n  const coordinate = labels[0] && labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n\n  /** 坐标圆心 */\n  const center = coordinate.getCenter();\n  /** 圆半径 */\n  const radius = coordinate.getRadius();\n  /** label shapes */\n  const labelsMap: Record<string /** id */, IGroup> = {};\n  for (const labelShape of labels) {\n    labelsMap[labelShape.get('id')] = labelShape;\n  }\n\n  // note labelHeight 可以控制 label 的行高\n  const labelHeight: number = get(items[0], 'labelHeight', 14);\n  const labelOffset: number = get(items[0], 'offset', 0);\n\n  if (labelOffset <= 0) {\n    return;\n  }\n\n  const LEFT_HALF_KEY = 'left';\n  const RIGHT_HALF_KEY = 'right';\n  // step 1: separate labels\n  const separateLabels = groupBy(items, (item) => (item.x < center.x ? LEFT_HALF_KEY : RIGHT_HALF_KEY));\n\n  const { start, end } = coordinate;\n  // step2: calculate totalHeight\n  const totalHeight = Math.min((radius + labelOffset + labelHeight) * 2, coordinate.getHeight());\n  const totalR = totalHeight / 2;\n\n  /** labels 容器的范围(后续根据组件的布局设计进行调整) */\n  const labelsContainerRange = {\n    minX: start.x,\n    maxX: end.x,\n    minY: center.y - totalR,\n    maxY: center.y + totalR,\n  };\n\n  // step 3: antiCollision\n  each(separateLabels, (half, key) => {\n    const maxLabelsCountForOneSide = Math.floor(totalHeight / labelHeight);\n    if (half.length > maxLabelsCountForOneSide) {\n      half.sort((a, b) => {\n        // sort by percentage DESC\n        return b.percent - a.percent;\n      });\n\n      each(half, (labelItem: PolarLabelItem, idx) => {\n        if (idx + 1 > maxLabelsCountForOneSide) {\n          labelsMap[labelItem.id].set('visible', false);\n          labelItem.invisible = true;\n        }\n      });\n    }\n    antiCollision(half, labelHeight, labelsContainerRange);\n  });\n\n  each(separateLabels, (half: PolarLabelItem[], key: string) => {\n    each(half, (item: PolarLabelItem) => {\n      const isRight = key === RIGHT_HALF_KEY;\n      const labelShape = labelsMap[item.id];\n\n      // because group could not effect content-shape, should set content-shape position manually\n      const content = labelShape.getChildByIndex(0) as IElement;\n\n      // textShape 发生过调整\n      if (content) {\n        const r = radius + labelOffset;\n        // (x - cx)^2 + (y - cy)^2 = totalR^2\n        const dy = item.y - center.y;\n\n        const rPow2 = Math.pow(r, 2);\n        const dyPow2 = Math.pow(dy, 2);\n        const dxPow2 = rPow2 - dyPow2 > 0 ? rPow2 - dyPow2 : 0;\n        const dx = Math.sqrt(dxPow2);\n\n        const dx_offset = Math.abs(Math.cos(item.angle) * r);\n        if (!isRight) {\n          // left\n          item.x = center.x - Math.max(dx, dx_offset);\n        } else {\n          // right\n          item.x = center.x + Math.max(dx, dx_offset);\n        }\n      }\n\n      // adjust labelShape\n      if (content) {\n        content.attr('y', item.y);\n        content.attr('x', item.x);\n      }\n\n      drawLabelline(item, coordinate);\n    });\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}