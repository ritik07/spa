{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport ListState from './list-state';\nimport { isEqual } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { HtmlTooltip } from '../../../dependents';\nvar STATUS_SHOW = 'showRadio';\nvar TIP_ID = 'legend-radio-tip';\nvar ListRadio = /** @class */function (_super) {\n  __extends(ListRadio, _super);\n  function ListRadio() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeStamp = 0;\n    return _this;\n  }\n  ListRadio.prototype.show = function () {\n    var triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo === null || triggerInfo === void 0 ? void 0 : triggerInfo.item) {\n      var list = triggerInfo.list,\n        item = triggerInfo.item;\n      list.setItemState(item, STATUS_SHOW, true);\n    }\n  };\n  ListRadio.prototype.hide = function () {\n    var triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo === null || triggerInfo === void 0 ? void 0 : triggerInfo.item) {\n      var list = triggerInfo.list,\n        item = triggerInfo.item;\n      list.setItemState(item, STATUS_SHOW, false);\n    }\n  };\n  ListRadio.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.tooltip && this.tooltip.destroy();\n  };\n  /**\n   * 显示 Tooltip (展示在上方)\n   * @returns\n   */\n  ListRadio.prototype.showTip = function () {\n    var context = this.context;\n    var ev = context.event;\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n    var target = this.context.event.target;\n    if (timeStamp - lastTimeStamp > 16 && target.get('name') === 'legend-item-radio') {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  ListRadio.prototype.hideTip = function () {\n    this.hideTooltip();\n    this.location = null;\n  };\n  ListRadio.prototype.showTooltip = function (curLoc) {\n    var context = this.context;\n    var ev = context.event;\n    var target = ev.target;\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n      // 展示 tooltip\n      var _a = context.view.getCanvas().get('el').getBoundingClientRect(),\n        offsetX = _a.x,\n        offsetY = _a.y;\n      this.tooltip.update(__assign(__assign({\n        title: target.get('tip')\n      }, curLoc), {\n        x: curLoc.x + offsetX,\n        y: curLoc.y + offsetY\n      }));\n      this.tooltip.show();\n    }\n  };\n  ListRadio.prototype.hideTooltip = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n  ListRadio.prototype.renderTooltip = function () {\n    var _a;\n    var tooltipStyles = (_a = {}, _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n      padding: '6px 8px',\n      transform: 'translate(-50%, -80%)',\n      background: 'rgba(0,0,0,0.75)',\n      color: '#fff',\n      'border-radius': '2px',\n      // 避免遮挡，如果还不够的话，再考虑开放用户配置\n      'z-index': 100\n    }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n      'font-size': '12px',\n      'line-height': '14px',\n      'margin-bottom': 0,\n      'word-break': 'break-all'\n    }, _a);\n    if (document.getElementById(TIP_ID)) {\n      document.body.removeChild(document.getElementById(TIP_ID));\n    }\n    var tooltip = new HtmlTooltip({\n      parent: document.body,\n      // tooltip 限制的区域\n      region: null,\n      visible: false,\n      crosshairs: null,\n      domStyles: tooltipStyles,\n      containerId: TIP_ID\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  };\n  return ListRadio;\n}(ListState);\nexport default ListRadio;","map":{"version":3,"sources":["../../../../src/interaction/action/component/list-radio.ts"],"names":[],"mappings":"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","sourcesContent":["import ListState from './list-state';\nimport { isEqual } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { HtmlTooltip } from '../../../dependents';\nimport { Point } from '../../../interface';\n\nconst STATUS_SHOW = 'showRadio';\nconst TIP_ID = 'legend-radio-tip';\n\nclass ListRadio extends ListState {\n  public show() {\n    const triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo?.item) {\n      const { list, item } = triggerInfo;\n      list.setItemState(item, STATUS_SHOW, true);\n    }\n  }\n\n  public hide() {\n    const triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo?.item) {\n      const { list, item } = triggerInfo;\n      list.setItemState(item, STATUS_SHOW, false);\n    }\n  }\n\n  private timeStamp: number = 0;\n  private location: Point;\n  private tooltip;\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  /**\n   * 显示 Tooltip (展示在上方)\n   * @returns\n   */\n  public showTip() {\n    const context = this.context;\n    const ev = context.event;\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    const target = this.context.event.target;\n    if (timeStamp - lastTimeStamp > 16 && target.get('name') === 'legend-item-radio') {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      this.timeStamp = timeStamp;\n      this.location = curLoc;      \n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hideTip() {\n    this.hideTooltip();\n    this.location = null;\n  }\n\n  protected showTooltip(curLoc: Point) {\n    const context = this.context;\n    const ev = context.event;\n    const target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n      // 展示 tooltip\n      const { x: offsetX, y: offsetY } = context.view.getCanvas().get('el').getBoundingClientRect();\n      this.tooltip.update({\n        title: target.get('tip'),\n        ...curLoc,\n        x: curLoc.x + offsetX,\n        y: curLoc.y + offsetY,\n      });\n      this.tooltip.show();\n    }\n  }\n\n  protected hideTooltip() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  private renderTooltip() {\n    const tooltipStyles = {\n      [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: {\n        padding: '6px 8px',\n        transform: 'translate(-50%, -80%)',\n        background: 'rgba(0,0,0,0.75)',\n        color: '#fff',\n        'border-radius': '2px',\n        // 避免遮挡，如果还不够的话，再考虑开放用户配置\n        'z-index': 100,\n      },\n      [TOOLTIP_CSS_CONST.TITLE_CLASS]: {\n        'font-size': '12px',\n        'line-height': '14px',\n        'margin-bottom': 0,\n        'word-break': 'break-all',\n      }\n    };\n    if (document.getElementById(TIP_ID)) {\n      document.body.removeChild(document.getElementById(TIP_ID));\n    }\n    const tooltip = new HtmlTooltip({\n      parent: document.body,\n      // tooltip 限制的区域\n      region: null,\n      visible: false,\n      crosshairs: null,\n      domStyles: tooltipStyles,\n      containerId: TIP_ID,\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  }\n}\n\nexport default ListRadio;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}