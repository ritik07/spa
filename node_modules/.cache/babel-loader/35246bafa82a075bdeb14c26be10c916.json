{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport { isNil, isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * 分类度量\n * @class\n */\nvar Category = /** @class */function (_super) {\n  __extends(Category, _super);\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'cat';\n    _this.isCategory = true;\n    return _this;\n  }\n  Category.prototype.buildIndexMap = function () {\n    if (!this.translateIndexMap) {\n      this.translateIndexMap = new Map();\n      // 重新构建缓存\n      for (var i = 0; i < this.values.length; i++) {\n        this.translateIndexMap.set(this.values[i], i);\n      }\n    }\n  };\n  Category.prototype.translate = function (value) {\n    // 按需构建 map\n    this.buildIndexMap();\n    // 找得到\n    var idx = this.translateIndexMap.get(value);\n    if (idx === undefined) {\n      idx = isNumber(value) ? value : NaN;\n    }\n    return idx;\n  };\n  Category.prototype.scale = function (value) {\n    var order = this.translate(value);\n    // 分类数据允许 0.5 范围内调整\n    // if (order < this.min - 0.5 || order > this.max + 0.5) {\n    //   return NaN;\n    // }\n    var percent = this.calcPercent(order, this.min, this.max);\n    return this.calcValue(percent, this.rangeMin(), this.rangeMax());\n  };\n  Category.prototype.invert = function (scaledValue) {\n    var domainRange = this.max - this.min;\n    var percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\n    var idx = Math.round(domainRange * percent) + this.min;\n    if (idx < this.min || idx > this.max) {\n      return NaN;\n    }\n    return this.values[idx];\n  };\n  Category.prototype.getText = function (value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var v = value;\n    // value为index\n    if (isNumber(value) && !this.values.includes(value)) {\n      v = this.values[v];\n    }\n    return _super.prototype.getText.apply(this, __spreadArrays([v], args));\n  };\n  // 复写属性\n  Category.prototype.initCfg = function () {\n    this.tickMethod = 'cat';\n  };\n  // 设置 min, max\n  Category.prototype.setDomain = function () {\n    // 用户有可能设置 min\n    if (isNil(this.getConfig('min'))) {\n      this.min = 0;\n    }\n    if (isNil(this.getConfig('max'))) {\n      var size = this.values.length;\n      this.max = size > 1 ? size - 1 : size;\n    }\n    // scale.init 的时候清除缓存\n    if (this.translateIndexMap) {\n      this.translateIndexMap = undefined;\n    }\n  };\n  return Category;\n}(Base);\nexport default Category;","map":{"version":3,"sources":["../../src/category/base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends, __spreadArrays } from \"tslib\";\nimport { isNil, isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * 分类度量\n * @class\n */\nvar Category = /** @class */ (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'cat';\n        _this.isCategory = true;\n        return _this;\n    }\n    Category.prototype.buildIndexMap = function () {\n        if (!this.translateIndexMap) {\n            this.translateIndexMap = new Map();\n            // 重新构建缓存\n            for (var i = 0; i < this.values.length; i++) {\n                this.translateIndexMap.set(this.values[i], i);\n            }\n        }\n    };\n    Category.prototype.translate = function (value) {\n        // 按需构建 map\n        this.buildIndexMap();\n        // 找得到\n        var idx = this.translateIndexMap.get(value);\n        if (idx === undefined) {\n            idx = isNumber(value) ? value : NaN;\n        }\n        return idx;\n    };\n    Category.prototype.scale = function (value) {\n        var order = this.translate(value);\n        // 分类数据允许 0.5 范围内调整\n        // if (order < this.min - 0.5 || order > this.max + 0.5) {\n        //   return NaN;\n        // }\n        var percent = this.calcPercent(order, this.min, this.max);\n        return this.calcValue(percent, this.rangeMin(), this.rangeMax());\n    };\n    Category.prototype.invert = function (scaledValue) {\n        var domainRange = this.max - this.min;\n        var percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\n        var idx = Math.round(domainRange * percent) + this.min;\n        if (idx < this.min || idx > this.max) {\n            return NaN;\n        }\n        return this.values[idx];\n    };\n    Category.prototype.getText = function (value) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var v = value;\n        // value为index\n        if (isNumber(value) && !this.values.includes(value)) {\n            v = this.values[v];\n        }\n        return _super.prototype.getText.apply(this, __spreadArrays([v], args));\n    };\n    // 复写属性\n    Category.prototype.initCfg = function () {\n        this.tickMethod = 'cat';\n    };\n    // 设置 min, max\n    Category.prototype.setDomain = function () {\n        // 用户有可能设置 min\n        if (isNil(this.getConfig('min'))) {\n            this.min = 0;\n        }\n        if (isNil(this.getConfig('max'))) {\n            var size = this.values.length;\n            this.max = size > 1 ? size - 1 : size;\n        }\n        // scale.init 的时候清除缓存\n        if (this.translateIndexMap) {\n            this.translateIndexMap = undefined;\n        }\n    };\n    return Category;\n}(Base));\nexport default Category;\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}