{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nvar AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\nvar AxisDescription = /** @class */function (_super) {\n  __extends(AxisDescription, _super);\n  function AxisDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisDescription.prototype.show = function () {\n    var context = this.context;\n    var axis = getDelegationObject(context).axis;\n    var _a = axis.cfg.title,\n      description = _a.description,\n      text = _a.text,\n      descriptionTooltipStyle = _a.descriptionTooltipStyle;\n    var _b = context.event,\n      x = _b.x,\n      y = _b.y;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: function () {\n        return \"\\n          <div class=\\\"\".concat(TOOLTIP_CSS_CONST.CONTAINER_CLASS, \"\\\" style={\").concat(descriptionTooltipStyle, \"}>\\n            <div class=\\\"\").concat(TOOLTIP_CSS_CONST.TITLE_CLASS, \"\\\">\\n              \\u5B57\\u6BB5\\u8BF4\\u660E\\uFF1A\").concat(description, \"\\n            </div>\\n          </div>\\n        \");\n      },\n      x: x,\n      y: y\n    });\n    this.tooltip.show();\n  };\n  AxisDescription.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.tooltip && this.tooltip.destroy();\n  };\n  AxisDescription.prototype.hide = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n  AxisDescription.prototype.renderTooltip = function () {\n    var _a;\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: __assign({}, deepMix({}, (_a = {},\n      // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%',\n        padding: '10px',\n        'line-height': '15px',\n        'font-size': '12px',\n        color: 'rgba(0, 0, 0, .65)'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all',\n        'margin-bottom': '3px'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  };\n  return AxisDescription;\n}(Action);\nexport default AxisDescription;","map":{"version":3,"sources":["../../../../../src/interaction/action/component/axis/axis-description.ts"],"names":[],"mappings":"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","sourcesContent":["import { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nimport cx from 'classnames';\n\nconst AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\n\nclass AxisDescription extends Action {\n  private tooltip;\n\n  public show() {\n    const context = this.context;\n    const { axis } = getDelegationObject(context);\n    const { description, text, descriptionTooltipStyle } = axis.cfg.title;\n    const { x, y } = context.event;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: () => {\n        return `\n          <div class=\"${TOOLTIP_CSS_CONST.CONTAINER_CLASS}\" style={${descriptionTooltipStyle}}>\n            <div class=\"${TOOLTIP_CSS_CONST.TITLE_CLASS}\">\n              字段说明：${description}\n            </div>\n          </div>\n        `;\n      },\n      x,\n      y,\n    });\n    this.tooltip.show();\n  }\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  public hide() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  public renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: {\n        ...deepMix(\n          {},\n          {\n            // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n            [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: {\n              'max-width': '50%',\n              padding: '10px',\n              'line-height': '15px',\n              'font-size': '12px',\n              color: 'rgba(0, 0, 0, .65)',\n            },\n            [TOOLTIP_CSS_CONST.TITLE_CLASS]: {\n              'word-break': 'break-all',\n              'margin-bottom': '3px',\n            },\n          }\n        ),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  }\n}\nexport default AxisDescription;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}