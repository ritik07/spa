{"ast":null,"code":"import { isString, each, isArray } from './util';\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\nfunction addStop(steps, gradient) {\n  var arr = steps.match(regexColorStop);\n  each(arr, function (item) {\n    var itemArr = item.split(':');\n    gradient.addColorStop(itemArr[0], itemArr[1]);\n  });\n}\n/**\n * 将边和填充设置的颜色转换成线性渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\nexport function parseLineGradient(context, element, gradientStr) {\n  var arr = regexLG.exec(gradientStr);\n  var angle = parseFloat(arr[1]) % 360 * (Math.PI / 180);\n  var steps = arr[2];\n  var box = element.getBBox();\n  var start;\n  var end;\n  if (angle >= 0 && angle < 1 / 2 * Math.PI) {\n    start = {\n      x: box.minX,\n      y: box.minY\n    };\n    end = {\n      x: box.maxX,\n      y: box.maxY\n    };\n  } else if (1 / 2 * Math.PI <= angle && angle < Math.PI) {\n    start = {\n      x: box.maxX,\n      y: box.minY\n    };\n    end = {\n      x: box.minX,\n      y: box.maxY\n    };\n  } else if (Math.PI <= angle && angle < 3 / 2 * Math.PI) {\n    start = {\n      x: box.maxX,\n      y: box.maxY\n    };\n    end = {\n      x: box.minX,\n      y: box.minY\n    };\n  } else {\n    start = {\n      x: box.minX,\n      y: box.maxY\n    };\n    end = {\n      x: box.maxX,\n      y: box.minY\n    };\n  }\n  var tanTheta = Math.tan(angle);\n  var tanTheta2 = tanTheta * tanTheta;\n  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\n  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;\n  var gradient = context.createLinearGradient(start.x, start.y, x, y);\n  addStop(steps, gradient);\n  return gradient;\n}\n/**\n * 将边和填充设置的颜色转换成圆形渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\nexport function parseRadialGradient(context, element, gradientStr) {\n  var arr = regexRG.exec(gradientStr);\n  var fx = parseFloat(arr[1]);\n  var fy = parseFloat(arr[2]);\n  var fr = parseFloat(arr[3]);\n  var steps = arr[4];\n  // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色\n  if (fr === 0) {\n    var colors = steps.match(regexColorStop);\n    return colors[colors.length - 1].split(':')[1];\n  }\n  var box = element.getBBox();\n  var width = box.maxX - box.minX;\n  var height = box.maxY - box.minY;\n  var r = Math.sqrt(width * width + height * height) / 2;\n  var gradient = context.createRadialGradient(box.minX + width * fx, box.minY + height * fy, 0, box.minX + width / 2, box.minY + height / 2, fr * r);\n  addStop(steps, gradient);\n  return gradient;\n}\n/**\n * 边和填充设置的颜色转换成 pattern\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   patternStr   生成 pattern 的字符串\n */\nexport function parsePattern(context, element, patternStr) {\n  // 在转换过程中进行了缓存\n  if (element.get('patternSource') && element.get('patternSource') === patternStr) {\n    return element.get('pattern');\n  }\n  var pattern;\n  var img;\n  var arr = regexPR.exec(patternStr);\n  var repeat = arr[1];\n  var source = arr[2];\n  // Function to be called when pattern loads\n  function onload() {\n    // Create pattern\n    pattern = context.createPattern(img, repeat);\n    element.set('pattern', pattern); // be a cache\n    element.set('patternSource', patternStr);\n  }\n  switch (repeat) {\n    case 'a':\n      repeat = 'repeat';\n      break;\n    case 'x':\n      repeat = 'repeat-x';\n      break;\n    case 'y':\n      repeat = 'repeat-y';\n      break;\n    case 'n':\n      repeat = 'no-repeat';\n      break;\n    default:\n      repeat = 'no-repeat';\n  }\n  img = new Image();\n  // If source URL is not a data URL\n  if (!source.match(/^data:/i)) {\n    // Set crossOrigin for this image\n    img.crossOrigin = 'Anonymous';\n  }\n  img.src = source;\n  if (img.complete) {\n    onload();\n  } else {\n    img.onload = onload;\n    // Fix onload() bug in IE9\n    img.src = img.src;\n  }\n  return pattern;\n}\nexport function parseStyle(context, element, color) {\n  var bbox = element.getBBox();\n  if (isNaN(bbox.x) || isNaN(bbox.y) || isNaN(bbox.width) || isNaN(bbox.height)) {\n    return color;\n  }\n  if (isString(color)) {\n    if (color[1] === '(' || color[2] === '(') {\n      if (color[0] === 'l') {\n        // regexLG.test(color)\n        return parseLineGradient(context, element, color);\n      }\n      if (color[0] === 'r') {\n        // regexRG.test(color)\n        return parseRadialGradient(context, element, color);\n      }\n      if (color[0] === 'p') {\n        // regexPR.test(color)\n        return parsePattern(context, element, color);\n      }\n    }\n    return color;\n  }\n  if (color instanceof CanvasPattern) {\n    return color;\n  }\n}\nexport function parseRadius(radius) {\n  var r1 = 0;\n  var r2 = 0;\n  var r3 = 0;\n  var r4 = 0;\n  if (isArray(radius)) {\n    if (radius.length === 1) {\n      r1 = r2 = r3 = r4 = radius[0];\n    } else if (radius.length === 2) {\n      r1 = r3 = radius[0];\n      r2 = r4 = radius[1];\n    } else if (radius.length === 3) {\n      r1 = radius[0];\n      r2 = r4 = radius[1];\n      r3 = radius[2];\n    } else {\n      r1 = radius[0];\n      r2 = radius[1];\n      r3 = radius[2];\n      r4 = radius[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = radius;\n  }\n  return [r1, r2, r3, r4];\n}","map":{"version":3,"sources":["../../src/util/parse.ts"],"names":[],"mappings":"AACA,SAAS,QAAQ,EAAE,IAAI,EAAE,OAAO,QAAQ,QAAQ;AAEhD,IAAM,OAAO,GAAG,iCAAiC;AACjD,IAAM,OAAO,GAAG,+DAA+D;AAC/E,IAAM,OAAO,GAAG,iCAAiC;AACjD,IAAM,cAAc,GAAG,6BAA6B;AAEpD,SAAS,OAAO,CAAC,KAAK,EAAE,QAAQ,EAAA;EAC9B,IAAM,GAAG,GAAa,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC;EACjD,IAAI,CAAC,GAAG,EAAE,UAAC,IAAI,EAAA;IACb,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC/B,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC;AACJ;AACA;;;;;;AAMG;AACH,OAAM,SAAU,iBAAiB,CAAC,OAAiC,EAAE,OAAiB,EAAE,WAAmB,EAAA;EACzG,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;EACrC,IAAM,KAAK,GAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAK,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;EAC1D,IAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;EACpB,IAAM,GAAG,GAAG,OAAO,CAAC,OAAO,EAAE;EAC7B,IAAI,KAAK;EACT,IAAI,GAAG;EAEP,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAI,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC,EAAE,EAAE;IAC3C,KAAK,GAAG;MACN,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;IACD,GAAG,GAAG;MACJ,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;GACF,MAAM,IAAK,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE;IACxD,KAAK,GAAG;MACN,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;IACD,GAAG,GAAG;MACJ,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;GACF,MAAM,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,KAAK,GAAI,CAAC,GAAG,CAAC,GAAI,IAAI,CAAC,EAAE,EAAE;IACxD,KAAK,GAAG;MACN,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;IACD,GAAG,GAAG;MACJ,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;GACF,MAAM;IACL,KAAK,GAAG;MACN,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;IACD,GAAG,GAAG;MACJ,CAAC,EAAE,GAAG,CAAC,IAAI;MACX,CAAC,EAAE,GAAG,CAAC;KACR;EACF;EAED,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;EAChC,IAAM,SAAS,GAAG,QAAQ,GAAG,QAAQ;EAErC,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,QAAQ,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;EACtF,IAAM,CAAC,GAAI,QAAQ,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,QAAQ,IAAI,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAK,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;EACnG,IAAM,QAAQ,GAAG,OAAO,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrE,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;EACxB,OAAO,QAAQ;AACjB;AAEA;;;;;;AAMG;AACH,OAAM,SAAU,mBAAmB,CAAC,OAAiC,EAAE,OAAiB,EAAE,WAAmB,EAAA;EAC3G,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;EACrC,IAAM,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAM,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAM,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,IAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;EACpB;EACA,IAAI,EAAE,KAAK,CAAC,EAAE;IACZ,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC;IAC1C,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/C;EACD,IAAM,GAAG,GAAG,OAAO,CAAC,OAAO,EAAE;EAC7B,IAAM,KAAK,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;EACjC,IAAM,MAAM,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;EAClC,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;EACxD,IAAM,QAAQ,GAAG,OAAO,CAAC,oBAAoB,CAC3C,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,EAAE,EACrB,GAAG,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE,EACtB,CAAC,EACD,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,EACpB,GAAG,CAAC,IAAI,GAAG,MAAM,GAAG,CAAC,EACrB,EAAE,GAAG,CAAC,CACP;EACD,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;EACxB,OAAO,QAAQ;AACjB;AAEA;;;;;AAKG;AACH,OAAM,SAAU,YAAY,CAAC,OAAiC,EAAE,OAAiB,EAAE,UAAkB,EAAA;EACnG;EACA,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,UAAU,EAAE;IAC/E,OAAO,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;EAC9B;EACD,IAAI,OAAO;EACX,IAAI,GAAG;EACP,IAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;EACpC,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;EACnB,IAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;EAErB;EACA,SAAS,MAAM,GAAA;IACb;IACA,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC;IAC5C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;IACjC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC;EAC1C;EAEA,QAAQ,MAAM;IACZ,KAAK,GAAG;MACN,MAAM,GAAG,QAAQ;MACjB;IACF,KAAK,GAAG;MACN,MAAM,GAAG,UAAU;MACnB;IACF,KAAK,GAAG;MACN,MAAM,GAAG,UAAU;MACnB;IACF,KAAK,GAAG;MACN,MAAM,GAAG,WAAW;MACpB;IACF;MACE,MAAM,GAAG,WAAW;EAAC;EAGzB,GAAG,GAAG,IAAI,KAAK,EAAE;EACjB;EACA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;IAC5B;IACA,GAAG,CAAC,WAAW,GAAG,WAAW;EAC9B;EACD,GAAG,CAAC,GAAG,GAAG,MAAM;EAEhB,IAAI,GAAG,CAAC,QAAQ,EAAE;IAChB,MAAM,EAAE;GACT,MAAM;IACL,GAAG,CAAC,MAAM,GAAG,MAAM;IACnB;IACA,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG;EAClB;EAED,OAAO,OAAO;AAChB;AAEA,OAAM,SAAU,UAAU,CAAC,OAAiC,EAAE,OAAiB,EAAE,KAA6B,EAAA;EAC5G,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,EAAE;EAC9B,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;IAC7E,OAAO,KAAK;EACb;EAED,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;IACnB,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACxC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACpB;QACA,OAAO,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;MAClD;MACD,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACpB;QACA,OAAO,mBAAmB,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;MACpD;MACD,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACpB;QACA,OAAO,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;MAC7C;IACF;IACD,OAAO,KAAK;EACb;EAED,IAAI,KAAK,YAAY,aAAa,EAAE;IAClC,OAAO,KAAK;EACb;AACH;AAEA,OAAM,SAAU,WAAW,CAAC,MAAM,EAAA;EAChC,IAAI,EAAE,GAAG,CAAC;EACV,IAAI,EAAE,GAAG,CAAC;EACV,IAAI,EAAE,GAAG,CAAC;EACV,IAAI,EAAE,GAAG,CAAC;EACV,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;IACnB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MACvB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;KAC9B,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MAC9B,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;MACnB,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;KACpB,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MAC9B,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;MACd,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;MACnB,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;KACf,MAAM;MACL,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;MACd,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;MACd,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;MACd,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;IACf;GACF,MAAM;IACL,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,MAAM;EAC3B;EACD,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACzB","sourceRoot":"","sourcesContent":["import { isString, each, isArray } from './util';\nvar regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\nfunction addStop(steps, gradient) {\n    var arr = steps.match(regexColorStop);\n    each(arr, function (item) {\n        var itemArr = item.split(':');\n        gradient.addColorStop(itemArr[0], itemArr[1]);\n    });\n}\n/**\n * 将边和填充设置的颜色转换成线性渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\nexport function parseLineGradient(context, element, gradientStr) {\n    var arr = regexLG.exec(gradientStr);\n    var angle = (parseFloat(arr[1]) % 360) * (Math.PI / 180);\n    var steps = arr[2];\n    var box = element.getBBox();\n    var start;\n    var end;\n    if (angle >= 0 && angle < (1 / 2) * Math.PI) {\n        start = {\n            x: box.minX,\n            y: box.minY,\n        };\n        end = {\n            x: box.maxX,\n            y: box.maxY,\n        };\n    }\n    else if ((1 / 2) * Math.PI <= angle && angle < Math.PI) {\n        start = {\n            x: box.maxX,\n            y: box.minY,\n        };\n        end = {\n            x: box.minX,\n            y: box.maxY,\n        };\n    }\n    else if (Math.PI <= angle && angle < (3 / 2) * Math.PI) {\n        start = {\n            x: box.maxX,\n            y: box.maxY,\n        };\n        end = {\n            x: box.minX,\n            y: box.minY,\n        };\n    }\n    else {\n        start = {\n            x: box.minX,\n            y: box.maxY,\n        };\n        end = {\n            x: box.maxX,\n            y: box.minY,\n        };\n    }\n    var tanTheta = Math.tan(angle);\n    var tanTheta2 = tanTheta * tanTheta;\n    var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\n    var y = (tanTheta * (end.x - start.x + tanTheta * (end.y - start.y))) / (tanTheta2 + 1) + start.y;\n    var gradient = context.createLinearGradient(start.x, start.y, x, y);\n    addStop(steps, gradient);\n    return gradient;\n}\n/**\n * 将边和填充设置的颜色转换成圆形渐变对象\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   gradientStr   颜色\n * @returns {any} 渐变对象\n */\nexport function parseRadialGradient(context, element, gradientStr) {\n    var arr = regexRG.exec(gradientStr);\n    var fx = parseFloat(arr[1]);\n    var fy = parseFloat(arr[2]);\n    var fr = parseFloat(arr[3]);\n    var steps = arr[4];\n    // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色\n    if (fr === 0) {\n        var colors = steps.match(regexColorStop);\n        return colors[colors.length - 1].split(':')[1];\n    }\n    var box = element.getBBox();\n    var width = box.maxX - box.minX;\n    var height = box.maxY - box.minY;\n    var r = Math.sqrt(width * width + height * height) / 2;\n    var gradient = context.createRadialGradient(box.minX + width * fx, box.minY + height * fy, 0, box.minX + width / 2, box.minY + height / 2, fr * r);\n    addStop(steps, gradient);\n    return gradient;\n}\n/**\n * 边和填充设置的颜色转换成 pattern\n * @param {CanvasRenderingContext2D} context canvas 上下文\n * @param {IElement}                 element  图形元素\n * @param {string}                   patternStr   生成 pattern 的字符串\n */\nexport function parsePattern(context, element, patternStr) {\n    // 在转换过程中进行了缓存\n    if (element.get('patternSource') && element.get('patternSource') === patternStr) {\n        return element.get('pattern');\n    }\n    var pattern;\n    var img;\n    var arr = regexPR.exec(patternStr);\n    var repeat = arr[1];\n    var source = arr[2];\n    // Function to be called when pattern loads\n    function onload() {\n        // Create pattern\n        pattern = context.createPattern(img, repeat);\n        element.set('pattern', pattern); // be a cache\n        element.set('patternSource', patternStr);\n    }\n    switch (repeat) {\n        case 'a':\n            repeat = 'repeat';\n            break;\n        case 'x':\n            repeat = 'repeat-x';\n            break;\n        case 'y':\n            repeat = 'repeat-y';\n            break;\n        case 'n':\n            repeat = 'no-repeat';\n            break;\n        default:\n            repeat = 'no-repeat';\n    }\n    img = new Image();\n    // If source URL is not a data URL\n    if (!source.match(/^data:/i)) {\n        // Set crossOrigin for this image\n        img.crossOrigin = 'Anonymous';\n    }\n    img.src = source;\n    if (img.complete) {\n        onload();\n    }\n    else {\n        img.onload = onload;\n        // Fix onload() bug in IE9\n        img.src = img.src;\n    }\n    return pattern;\n}\nexport function parseStyle(context, element, color) {\n    var bbox = element.getBBox();\n    if (isNaN(bbox.x) || isNaN(bbox.y) || isNaN(bbox.width) || isNaN(bbox.height)) {\n        return color;\n    }\n    if (isString(color)) {\n        if (color[1] === '(' || color[2] === '(') {\n            if (color[0] === 'l') {\n                // regexLG.test(color)\n                return parseLineGradient(context, element, color);\n            }\n            if (color[0] === 'r') {\n                // regexRG.test(color)\n                return parseRadialGradient(context, element, color);\n            }\n            if (color[0] === 'p') {\n                // regexPR.test(color)\n                return parsePattern(context, element, color);\n            }\n        }\n        return color;\n    }\n    if (color instanceof CanvasPattern) {\n        return color;\n    }\n}\nexport function parseRadius(radius) {\n    var r1 = 0;\n    var r2 = 0;\n    var r3 = 0;\n    var r4 = 0;\n    if (isArray(radius)) {\n        if (radius.length === 1) {\n            r1 = r2 = r3 = r4 = radius[0];\n        }\n        else if (radius.length === 2) {\n            r1 = r3 = radius[0];\n            r2 = r4 = radius[1];\n        }\n        else if (radius.length === 3) {\n            r1 = radius[0];\n            r2 = r4 = radius[1];\n            r3 = radius[2];\n        }\n        else {\n            r1 = radius[0];\n            r2 = radius[1];\n            r3 = radius[2];\n            r4 = radius[3];\n        }\n    }\n    else {\n        r1 = r2 = r3 = r4 = radius;\n    }\n    return [r1, r2, r3, r4];\n}\n//# sourceMappingURL=parse.js.map"]},"metadata":{},"sourceType":"module"}