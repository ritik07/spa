{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { filter, getRange, head, isNil, last } from '@antv/util';\nimport Base from '../base';\n/**\n * 连续度量的基类\n * @class\n */\nvar Continuous = /** @class */function (_super) {\n  __extends(Continuous, _super);\n  function Continuous() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.isContinuous = true;\n    return _this;\n  }\n  Continuous.prototype.scale = function (value) {\n    if (isNil(value)) {\n      return NaN;\n    }\n    var rangeMin = this.rangeMin();\n    var rangeMax = this.rangeMax();\n    var max = this.max;\n    var min = this.min;\n    if (max === min) {\n      return rangeMin;\n    }\n    var percent = this.getScalePercent(value);\n    return rangeMin + percent * (rangeMax - rangeMin);\n  };\n  Continuous.prototype.init = function () {\n    _super.prototype.init.call(this);\n    // init 完成后保证 min, max 包含 ticks 的范围\n    var ticks = this.ticks;\n    var firstTick = head(ticks);\n    var lastTick = last(ticks);\n    if (firstTick < this.min) {\n      this.min = firstTick;\n    }\n    if (lastTick > this.max) {\n      this.max = lastTick;\n    }\n    // strict-limit 方式\n    if (!isNil(this.minLimit)) {\n      this.min = firstTick;\n    }\n    if (!isNil(this.maxLimit)) {\n      this.max = lastTick;\n    }\n  };\n  Continuous.prototype.setDomain = function () {\n    var _a = getRange(this.values),\n      min = _a.min,\n      max = _a.max;\n    if (isNil(this.min)) {\n      this.min = min;\n    }\n    if (isNil(this.max)) {\n      this.max = max;\n    }\n    if (this.min > this.max) {\n      this.min = min;\n      this.max = max;\n    }\n  };\n  Continuous.prototype.calculateTicks = function () {\n    var _this = this;\n    var ticks = _super.prototype.calculateTicks.call(this);\n    if (!this.nice) {\n      ticks = filter(ticks, function (tick) {\n        return tick >= _this.min && tick <= _this.max;\n      });\n    }\n    return ticks;\n  };\n  // 计算原始值值占的百分比\n  Continuous.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n    return (value - min) / (max - min);\n  };\n  Continuous.prototype.getInvertPercent = function (value) {\n    return (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\n  };\n  return Continuous;\n}(Base);\nexport default Continuous;","map":{"version":3,"sources":["../../src/continuous/base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { filter, getRange, head, isNil, last } from '@antv/util';\nimport Base from '../base';\n/**\n * 连续度量的基类\n * @class\n */\nvar Continuous = /** @class */ (function (_super) {\n    __extends(Continuous, _super);\n    function Continuous() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isContinuous = true;\n        return _this;\n    }\n    Continuous.prototype.scale = function (value) {\n        if (isNil(value)) {\n            return NaN;\n        }\n        var rangeMin = this.rangeMin();\n        var rangeMax = this.rangeMax();\n        var max = this.max;\n        var min = this.min;\n        if (max === min) {\n            return rangeMin;\n        }\n        var percent = this.getScalePercent(value);\n        return rangeMin + percent * (rangeMax - rangeMin);\n    };\n    Continuous.prototype.init = function () {\n        _super.prototype.init.call(this);\n        // init 完成后保证 min, max 包含 ticks 的范围\n        var ticks = this.ticks;\n        var firstTick = head(ticks);\n        var lastTick = last(ticks);\n        if (firstTick < this.min) {\n            this.min = firstTick;\n        }\n        if (lastTick > this.max) {\n            this.max = lastTick;\n        }\n        // strict-limit 方式\n        if (!isNil(this.minLimit)) {\n            this.min = firstTick;\n        }\n        if (!isNil(this.maxLimit)) {\n            this.max = lastTick;\n        }\n    };\n    Continuous.prototype.setDomain = function () {\n        var _a = getRange(this.values), min = _a.min, max = _a.max;\n        if (isNil(this.min)) {\n            this.min = min;\n        }\n        if (isNil(this.max)) {\n            this.max = max;\n        }\n        if (this.min > this.max) {\n            this.min = min;\n            this.max = max;\n        }\n    };\n    Continuous.prototype.calculateTicks = function () {\n        var _this = this;\n        var ticks = _super.prototype.calculateTicks.call(this);\n        if (!this.nice) {\n            ticks = filter(ticks, function (tick) {\n                return tick >= _this.min && tick <= _this.max;\n            });\n        }\n        return ticks;\n    };\n    // 计算原始值值占的百分比\n    Continuous.prototype.getScalePercent = function (value) {\n        var max = this.max;\n        var min = this.min;\n        return (value - min) / (max - min);\n    };\n    Continuous.prototype.getInvertPercent = function (value) {\n        return (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\n    };\n    return Continuous;\n}(Base));\nexport default Continuous;\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}