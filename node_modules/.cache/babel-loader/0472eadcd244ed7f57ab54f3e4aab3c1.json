{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, get, isFunction } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { getAnimation } from './animation';\n// 默认的动画参数配置\nexport var DEFAULT_ANIMATE_CFG = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut'\n  },\n  update: {\n    duration: 400,\n    easing: 'easeQuadInOut'\n  },\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut'\n  },\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn'\n  } // 更新时销毁动画配置\n};\n// 各个 Geometry 默认的动画执行函数\nvar GEOMETRY_ANIMATE_CFG = {\n  interval: function (coordinate) {\n    return {\n      enter: {\n        animation: coordinate.isRect ? coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y' : 'fade-in'\n      },\n      update: {\n        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null\n      },\n      leave: {\n        animation: 'fade-out'\n      }\n    };\n  },\n  line: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  path: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  point: {\n    appear: {\n      animation: 'zoom-in'\n    },\n    enter: {\n      animation: 'zoom-in'\n    },\n    leave: {\n      animation: 'zoom-out'\n    }\n  },\n  area: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  polygon: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  schema: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  edge: {\n    enter: {\n      animation: 'fade-in'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  },\n  label: {\n    appear: {\n      animation: 'fade-in',\n      delay: 450\n    },\n    enter: {\n      animation: 'fade-in'\n    },\n    update: {\n      animation: 'position-update'\n    },\n    leave: {\n      animation: 'fade-out'\n    }\n  }\n};\n// 各个 Geometry 默认的群组出场动画\nvar GEOMETRY_GROUP_APPEAR_ANIMATION = {\n  line: function () {\n    return {\n      animation: 'wave-in'\n    };\n  },\n  area: function () {\n    return {\n      animation: 'wave-in'\n    };\n  },\n  path: function () {\n    return {\n      animation: 'fade-in'\n    };\n  },\n  interval: function (coordinate) {\n    var animation;\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        // pie chart\n        animation = 'wave-in';\n      }\n    }\n    return {\n      animation: animation\n    };\n  },\n  schema: function (coordinate) {\n    var animation;\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n    }\n    return {\n      animation: animation\n    };\n  },\n  polygon: function () {\n    return {\n      animation: 'fade-in',\n      duration: 500\n    };\n  },\n  edge: function () {\n    return {\n      animation: 'fade-in'\n    };\n  }\n};\n// 解析用户的动画配置\nfunction parseAnimateConfig(animateCfg, data) {\n  return {\n    delay: isFunction(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,\n    easing: isFunction(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,\n    duration: isFunction(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,\n    callback: animateCfg.callback,\n    repeat: animateCfg.repeat\n  };\n}\n/**\n * @ignore\n * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置\n * @param elementName 元素名称\n * @param coordinate 做表弟类型\n * @param animateType 可选，动画类型\n */\nexport function getDefaultAnimateCfg(elementName, coordinate, animateType) {\n  var animateCfg = GEOMETRY_ANIMATE_CFG[elementName];\n  if (animateCfg) {\n    if (isFunction(animateCfg)) {\n      animateCfg = animateCfg(coordinate);\n    }\n    animateCfg = deepMix({}, DEFAULT_ANIMATE_CFG, animateCfg);\n    if (animateType) {\n      return animateCfg[animateType];\n    }\n  }\n  return animateCfg;\n}\n/**\n * @ignore\n * 工具函数\n * 根据用户传入的配置为 shape 执行动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外的信息\n */\nexport function doAnimate(shape, animateCfg, cfg) {\n  var data = get(shape.get('origin'), 'data', FIELD_ORIGIN);\n  var animation = animateCfg.animation; // 获取动画执行函数\n  var parsedAnimateCfg = parseAnimateConfig(animateCfg, data);\n  if (animation) {\n    // 用户声明了动画执行函数\n    var animateFunction = getAnimation(animation);\n    if (animateFunction) {\n      animateFunction(shape, parsedAnimateCfg, cfg);\n    }\n  } else {\n    // 没有声明，则根据 toAttrs 做差值动画\n    shape.animate(cfg.toAttrs, parsedAnimateCfg);\n  }\n}\n/**\n * @ignore\n * 执行 Geometry 群组入场动画\n * @param container 执行群组动画的图形元素\n * @param animateCfg 动画配置\n * @param geometryType geometry 类型\n * @param coordinate 坐标系对象\n * @param minYPoint y 轴最小值对应的画布坐标点\n */\nexport function doGroupAppearAnimate(container, animateCfg, geometryType, coordinate, minYPoint) {\n  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {\n    var defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);\n    var animation = getAnimation(get(defaultCfg, 'animation', ''));\n    if (animation) {\n      var cfg = __assign(__assign(__assign({}, DEFAULT_ANIMATE_CFG.appear), defaultCfg), animateCfg);\n      container.stopAnimate(); // 先结束当前 container 动画\n      animation(container, cfg, {\n        coordinate: coordinate,\n        minYPoint: minYPoint,\n        toAttrs: null\n      });\n    }\n  }\n}","map":{"version":3,"sources":["../../src/animate/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, get, isFunction } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Coordinate, IGroup, IShape } from '../dependents';\nimport { AnimateCfg, Data, Datum, GAnimateCfg, Point } from '../interface';\nimport { AnimateExtraCfg } from './interface';\n\nimport { getAnimation } from './animation';\n\n// 默认的动画参数配置\nexport const DEFAULT_ANIMATE_CFG = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut',\n  }, // 初始入场动画配置\n  update: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时发生变更的动画配置\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时新增元素的入场动画配置\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn',\n  }, // 更新时销毁动画配置\n};\n\n// 各个 Geometry 默认的动画执行函数\nconst GEOMETRY_ANIMATE_CFG = {\n  interval: (coordinate: Coordinate) => {\n    return {\n      enter: {\n        animation: coordinate.isRect ? (coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y') : 'fade-in',\n      },\n      update: {\n        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null,\n      },\n      leave: {\n        animation: 'fade-out',\n      },\n    };\n  },\n  line: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  path: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  point: {\n    appear: {\n      animation: 'zoom-in',\n    },\n    enter: {\n      animation: 'zoom-in',\n    },\n    leave: {\n      animation: 'zoom-out',\n    },\n  },\n  area: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  polygon: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  schema: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  edge: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  label: {\n    appear: {\n      animation: 'fade-in',\n      delay: 450,\n    },\n    enter: {\n      animation: 'fade-in',\n    },\n    update: {\n      animation: 'position-update',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n};\n\n// 各个 Geometry 默认的群组出场动画\nconst GEOMETRY_GROUP_APPEAR_ANIMATION = {\n  line: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  area: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  path: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n  interval(coordinate: Coordinate) {\n    let animation;\n\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        // pie chart\n        animation = 'wave-in';\n      }\n    }\n    return {\n      animation,\n    };\n  },\n  schema: (coordinate) => {\n    let animation;\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n    }\n    return {\n      animation,\n    };\n  },\n  polygon: () => {\n    return {\n      animation: 'fade-in',\n      duration: 500,\n    };\n  },\n  edge: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n};\n\n// 解析用户的动画配置\nfunction parseAnimateConfig(animateCfg: AnimateCfg, data: Data | Datum): GAnimateCfg {\n  return {\n    delay: isFunction(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,\n    easing: isFunction(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,\n    duration: isFunction(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,\n    callback: animateCfg.callback,\n    repeat: animateCfg.repeat,\n  };\n}\n\n/**\n * @ignore\n * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置\n * @param elementName 元素名称\n * @param coordinate 做表弟类型\n * @param animateType 可选，动画类型\n */\nexport function getDefaultAnimateCfg(elementName: string, coordinate: Coordinate, animateType?: string) {\n  let animateCfg = GEOMETRY_ANIMATE_CFG[elementName];\n\n  if (animateCfg) {\n    if (isFunction(animateCfg)) {\n      animateCfg = animateCfg(coordinate);\n    }\n    animateCfg = deepMix({}, DEFAULT_ANIMATE_CFG, animateCfg);\n\n    if (animateType) {\n      return animateCfg[animateType];\n    }\n  }\n  return animateCfg;\n}\n\n/**\n * @ignore\n * 工具函数\n * 根据用户传入的配置为 shape 执行动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外的信息\n */\nexport function doAnimate(shape: IGroup | IShape, animateCfg: AnimateCfg, cfg: AnimateExtraCfg) {\n  const data = get(shape.get('origin'), 'data', FIELD_ORIGIN);\n  const animation = animateCfg.animation; // 获取动画执行函数\n  const parsedAnimateCfg = parseAnimateConfig(animateCfg, data);\n  if (animation) {\n    // 用户声明了动画执行函数\n    const animateFunction = getAnimation(animation);\n    if (animateFunction) {\n      animateFunction(shape, parsedAnimateCfg, cfg);\n    }\n  } else {\n    // 没有声明，则根据 toAttrs 做差值动画\n    shape.animate(cfg.toAttrs, parsedAnimateCfg);\n  }\n}\n\n/**\n * @ignore\n * 执行 Geometry 群组入场动画\n * @param container 执行群组动画的图形元素\n * @param animateCfg 动画配置\n * @param geometryType geometry 类型\n * @param coordinate 坐标系对象\n * @param minYPoint y 轴最小值对应的画布坐标点\n */\nexport function doGroupAppearAnimate(\n  container: IGroup,\n  animateCfg: AnimateCfg,\n  geometryType: string,\n  coordinate: Coordinate,\n  minYPoint: Point\n) {\n  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {\n    const defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);\n    const animation = getAnimation(get(defaultCfg, 'animation', ''));\n    if (animation) {\n      const cfg = {\n        ...DEFAULT_ANIMATE_CFG.appear,\n        ...defaultCfg,\n        ...animateCfg,\n      };\n      container.stopAnimate(); // 先结束当前 container 动画\n      animation(container, cfg, {\n        coordinate,\n        minYPoint,\n        toAttrs: null,\n      });\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}