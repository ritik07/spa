{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray, isNil } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nfunction parseValue(value) {\n  var array = !isArray(value) ? [value] : value;\n  var min = array[0]; // 最小值\n  var max = array[array.length - 1]; // 最大值\n  var min1 = array.length > 1 ? array[1] : min;\n  var max1 = array.length > 3 ? array[3] : max;\n  var median = array.length > 2 ? array[2] : min1;\n  return {\n    min: min,\n    max: max,\n    min1: min1,\n    max1: max1,\n    median: median\n  };\n}\nfunction getBoxPoints(x, y, size) {\n  var halfSize = size / 2;\n  var pointsArray;\n  if (isArray(y)) {\n    // 2维\n    var _a = parseValue(y),\n      min = _a.min,\n      max = _a.max,\n      median = _a.median,\n      min1 = _a.min1,\n      max1 = _a.max1;\n    var minX = x - halfSize;\n    var maxX = x + halfSize;\n    pointsArray = [[minX, max], [maxX, max], [x, max], [x, max1], [minX, min1], [minX, max1], [maxX, max1], [maxX, min1], [x, min1], [x, min], [minX, min], [maxX, min], [minX, median], [maxX, median]];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n    var _b = parseValue(x),\n      min = _b.min,\n      max = _b.max,\n      median = _b.median,\n      min1 = _b.min1,\n      max1 = _b.max1;\n    var minY = y - halfSize;\n    var maxY = y + halfSize;\n    pointsArray = [[min, minY], [min, maxY], [min, y], [min1, y], [min1, minY], [min1, maxY], [max1, maxY], [max1, minY], [max1, y], [max, y], [max, minY], [max, maxY], [median, minY], [median, maxY]];\n  }\n  return pointsArray.map(function (arr) {\n    return {\n      x: arr[0],\n      y: arr[1]\n    };\n  });\n}\nfunction getBoxPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x, points[10].y], ['L', points[11].x, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n}\n// box shape\nregisterShape('schema', 'box', {\n  getPoints: function (shapePoint) {\n    var x = shapePoint.x,\n      y = shapePoint.y,\n      size = shapePoint.size;\n    return getBoxPoints(x, y, size);\n  },\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getBoxPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path,\n        name: 'schema'\n      })\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        var yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        var points = getBoxPoints(x, yValues, r);\n        return [['M', points[0].x + 1, points[0].y], ['L', points[1].x - 1, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y], ['L', points[6].x, points[6].y], ['L', points[7].x, points[7].y], ['L', points[4].x, points[4].y], ['Z'], ['M', points[8].x, points[8].y], ['L', points[9].x, points[9].y], ['M', points[10].x + 1, points[10].y], ['L', points[11].x - 1, points[11].y], ['M', points[12].x, points[12].y], ['L', points[13].x, points[13].y]];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/schema/box.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray, isNil } from '@antv/util';\nimport { IGroup, PathCommand } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nfunction parseValue(value: number[]) {\n  const array = !isArray(value) ? [value] : value;\n\n  const min = array[0]; // 最小值\n  const max = array[array.length - 1]; // 最大值\n  const min1 = array.length > 1 ? array[1] : min;\n  const max1 = array.length > 3 ? array[3] : max;\n  const median = array.length > 2 ? array[2] : min1;\n\n  return {\n    min, // 最小值\n    max, // 最大值\n    min1,\n    max1,\n    median,\n  };\n}\n\nfunction getBoxPoints(x: number | number[], y: number | number[], size: number): Point[] {\n  const halfSize = size / 2;\n  let pointsArray;\n  if (isArray(y)) {\n    // 2维\n    const { min, max, median, min1, max1 } = parseValue(y);\n    const minX = (x as number) - halfSize;\n    const maxX = (x as number) + halfSize;\n    pointsArray = [\n      [minX, max],\n      [maxX, max],\n      [x as number, max],\n      [x as number, max1],\n      [minX, min1],\n      [minX, max1],\n      [maxX, max1],\n      [maxX, min1],\n      [x as number, min1],\n      [x as number, min],\n      [minX, min],\n      [maxX, min],\n      [minX, median],\n      [maxX, median],\n    ];\n  } else {\n    // 只有一个维度\n    y = isNil(y) ? 0.5 : y;\n    const { min, max, median, min1, max1 } = parseValue(x as number[]);\n    const minY = y - halfSize;\n    const maxY = y + halfSize;\n    pointsArray = [\n      [min, minY],\n      [min, maxY],\n      [min, y],\n      [min1, y],\n      [min1, minY],\n      [min1, maxY],\n      [max1, maxY],\n      [max1, minY],\n      [max1, y],\n      [max, y],\n      [max, minY],\n      [max, maxY],\n      [median, minY],\n      [median, maxY],\n    ];\n  }\n\n  return pointsArray.map((arr) => {\n    return {\n      x: arr[0],\n      y: arr[1],\n    };\n  });\n}\n\nfunction getBoxPath(points): PathCommand[] {\n  return [\n    ['M', points[0].x, points[0].y],\n    ['L', points[1].x, points[1].y],\n    ['M', points[2].x, points[2].y],\n    ['L', points[3].x, points[3].y],\n    ['M', points[4].x, points[4].y],\n    ['L', points[5].x, points[5].y],\n    ['L', points[6].x, points[6].y],\n    ['L', points[7].x, points[7].y],\n    ['L', points[4].x, points[4].y], // 封闭 z\n    ['Z'],\n    ['M', points[8].x, points[8].y],\n    ['L', points[9].x, points[9].y],\n    ['M', points[10].x, points[10].y],\n    ['L', points[11].x, points[11].y],\n    ['M', points[12].x, points[12].y],\n    ['L', points[13].x, points[13].y],\n  ];\n}\n\n// box shape\nregisterShape('schema', 'box', {\n  getPoints(shapePoint: ShapePoint) {\n    const { x, y, size } = shapePoint;\n    return getBoxPoints(x as number, y as number[], size);\n  },\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false);\n    const path = this.parsePath(getBoxPath(cfg.points));\n    const shape = container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n        name: 'schema',\n      },\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol(x: number, y: number, r: number) {\n        const yValues = [y - 6, y - 3, y, y + 3, y + 6];\n        const points = getBoxPoints(x, yValues, r);\n        return [\n          ['M', points[0].x + 1, points[0].y],\n          ['L', points[1].x - 1, points[1].y],\n          ['M', points[2].x, points[2].y],\n          ['L', points[3].x, points[3].y],\n          ['M', points[4].x, points[4].y],\n          ['L', points[5].x, points[5].y],\n          ['L', points[6].x, points[6].y],\n          ['L', points[7].x, points[7].y],\n          ['L', points[4].x, points[4].y],\n          ['Z'],\n          ['M', points[8].x, points[8].y],\n          ['L', points[9].x, points[9].y],\n          ['M', points[10].x + 1, points[10].y],\n          ['L', points[11].x - 1, points[11].y],\n          ['M', points[12].x, points[12].y],\n          ['L', points[13].x, points[13].y],\n        ];\n      },\n      style: {\n        r: 6,\n        lineWidth: 1,\n        stroke: color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}