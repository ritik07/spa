{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n/**\n * 分页器 默认配置\n */\nvar DEFAULT_PAGE_NAVIGATOR = {\n  marker: {\n    style: {\n      inactiveFill: '#000',\n      inactiveOpacity: 0.45,\n      fill: '#000',\n      opacity: 1,\n      size: 12\n    }\n  },\n  text: {\n    style: {\n      fill: '#ccc',\n      fontSize: 12\n    }\n  }\n};\n// 默认 文本style\nvar textStyle = {\n  fill: Theme.textColor,\n  fontSize: 12,\n  textAlign: 'start',\n  textBaseline: 'middle',\n  fontFamily: Theme.fontFamily,\n  fontWeight: 'normal',\n  lineHeight: 12\n};\nvar RIGHT_ARROW_NAME = 'navigation-arrow-right';\nvar LEFT_ARROW_NAME = 'navigation-arrow-left';\nvar ROTATE_MAP = {\n  right: 90 * Math.PI / 180,\n  left: (360 - 90) * Math.PI / 180,\n  up: 0,\n  down: 180 * Math.PI / 180\n};\nvar Category = /** @class */function (_super) {\n  __extends(Category, _super);\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.currentPageIndex = 1;\n    _this.totalPagesCnt = 1;\n    _this.pageWidth = 0;\n    _this.pageHeight = 0;\n    _this.startX = 0;\n    _this.startY = 0;\n    _this.onNavigationBack = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n      if (_this.currentPageIndex > 1) {\n        _this.currentPageIndex -= 1;\n        _this.updateNavigation();\n        var matrix = _this.getCurrentNavigationMatrix();\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n    _this.onNavigationAfter = function () {\n      var itemGroup = _this.getElementByLocalId('item-group');\n      if (_this.currentPageIndex < _this.totalPagesCnt) {\n        _this.currentPageIndex += 1;\n        _this.updateNavigation();\n        var matrix = _this.getCurrentNavigationMatrix();\n        if (_this.get('animate')) {\n          itemGroup.animate({\n            matrix: matrix\n          }, 100);\n        } else {\n          itemGroup.attr({\n            matrix: matrix\n          });\n        }\n      }\n    };\n    return _this;\n  }\n  Category.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n      type: 'category',\n      itemSpacing: 24,\n      itemMarginBottom: 8,\n      maxItemWidth: null,\n      itemWidth: null,\n      itemHeight: null,\n      itemName: {},\n      itemValue: null,\n      maxWidth: null,\n      maxHeight: null,\n      marker: {},\n      radio: null,\n      items: [],\n      itemStates: {},\n      itemBackground: {},\n      pageNavigator: {},\n      defaultCfg: {\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        },\n        background: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor\n          }\n        },\n        itemBackground: {\n          style: {\n            opacity: 0,\n            fill: '#fff'\n          }\n        },\n        pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n        itemName: {\n          spacing: 16,\n          style: textStyle\n        },\n        marker: {\n          spacing: 8,\n          style: {\n            r: 6,\n            symbol: 'circle'\n          }\n        },\n        itemValue: {\n          alignRight: false,\n          formatter: null,\n          style: textStyle,\n          spacing: 6\n        },\n        itemStates: {\n          active: {\n            nameStyle: {\n              opacity: 0.8\n            }\n          },\n          unchecked: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              fill: Theme.uncheckedColor,\n              stroke: Theme.uncheckedColor\n            }\n          },\n          inactive: {\n            nameStyle: {\n              fill: Theme.uncheckedColor\n            },\n            markerStyle: {\n              opacity: 0.2\n            }\n          }\n        }\n      }\n    });\n  };\n  // 实现 IList 接口\n  Category.prototype.isList = function () {\n    return true;\n  };\n  /**\n   * 获取图例项\n   * @return {ListItem[]} 列表项集合\n   */\n  Category.prototype.getItems = function () {\n    return this.get('items');\n  };\n  /**\n   * 设置列表项\n   * @param {ListItem[]} items 列表项集合\n   */\n  Category.prototype.setItems = function (items) {\n    this.update({\n      items: items\n    });\n  };\n  /**\n   * 更新列表项\n   * @param {ListItem} item 列表项\n   * @param {object}   cfg  列表项\n   */\n  Category.prototype.updateItem = function (item, cfg) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n    this.render();\n  };\n  /**\n   * 清空列表\n   */\n  Category.prototype.clearItems = function () {\n    var itemGroup = this.getElementByLocalId('item-group');\n    itemGroup && itemGroup.clear();\n  };\n  /**\n   * 设置列表项的状态\n   * @param {ListItem} item  列表项\n   * @param {string}   state 状态名\n   * @param {boolean}  value 状态值, true, false\n   */\n  Category.prototype.setItemState = function (item, state, value) {\n    item[state] = value;\n    var itemElement = this.getElementByLocalId(\"item-\" + item.id);\n    if (itemElement) {\n      var items = this.getItems();\n      var index = items.indexOf(item);\n      var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n      var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n      this.updateElements(newElement, itemElement); // 更新整个分组\n      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n    }\n  };\n  /**\n   * 是否存在指定的状态\n   * @param {ListItem} item  列表项\n   * @param {boolean} state 状态名\n   */\n  Category.prototype.hasState = function (item, state) {\n    return !!item[state];\n  };\n  Category.prototype.getItemStates = function (item) {\n    var itemStates = this.get('itemStates');\n    var rst = [];\n    each(itemStates, function (v, k) {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  };\n  /**\n   * 清楚所有列表项的状态\n   * @param {string} state 状态值\n   */\n  Category.prototype.clearItemsState = function (state) {\n    var _this = this;\n    var items = this.getItemsByState(state);\n    each(items, function (item) {\n      _this.setItemState(item, state, false);\n    });\n  };\n  /**\n   * 根据状态获取图例项\n   * @param  {string}     state [description]\n   * @return {ListItem[]}       [description]\n   */\n  Category.prototype.getItemsByState = function (state) {\n    var _this = this;\n    var items = this.getItems();\n    return filter(items, function (item) {\n      return _this.hasState(item, state);\n    });\n  };\n  // 绘制 legend 的选项\n  Category.prototype.drawLegendContent = function (group) {\n    this.processItems();\n    this.drawItems(group);\n  };\n  // 防止未设置 id\n  Category.prototype.processItems = function () {\n    var items = this.get('items');\n    each(items, function (item) {\n      if (!item.id) {\n        // 如果没有设置 id，默认使用 name\n        item.id = item.name;\n      }\n    });\n  };\n  // 绘制所有的图例选项\n  Category.prototype.drawItems = function (group) {\n    var _this = this;\n    var itemContainerGroup = this.addGroup(group, {\n      id: this.getElementId('item-container-group'),\n      name: 'legend-item-container-group'\n    });\n    var itemGroup = this.addGroup(itemContainerGroup, {\n      id: this.getElementId('item-group'),\n      name: 'legend-item-group'\n    });\n    var itemHeight = this.getItemHeight();\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemMarginBottom = this.get('itemMarginBottom');\n    var currentPoint = this.get('currentPoint');\n    var startX = currentPoint.x;\n    var startY = currentPoint.y;\n    var layout = this.get('layout');\n    var items = this.get('items');\n    var wrapped = false;\n    var pageWidth = 0;\n    var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n    var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n    // 暂时不考虑分页\n    each(items, function (item, index) {\n      var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\n      var bbox = subGroup.getBBox();\n      var width = itemWidth || bbox.width;\n      if (width > pageWidth) {\n        pageWidth = width;\n      }\n      if (layout === 'horizontal') {\n        // 如果水平布局\n        if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n          // 检测是否换行\n          wrapped = true;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight + itemMarginBottom;\n        }\n        _this.moveElementTo(subGroup, currentPoint);\n        currentPoint.x += width + itemSpacing;\n      } else {\n        // 如果垂直布局\n        if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n          // 换行\n          wrapped = true;\n          currentPoint.x += pageWidth + itemSpacing;\n          currentPoint.y = startY;\n          pageWidth = 0;\n        }\n        _this.moveElementTo(subGroup, currentPoint);\n        currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n      }\n    });\n\n    if (wrapped && this.get('flipPage')) {\n      this.pageHeight = 0;\n      this.pageWidth = 0;\n      this.totalPagesCnt = 1;\n      this.startX = startX;\n      this.startY = startY;\n      this.adjustNavigation(group, itemGroup);\n    }\n  };\n  // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n  Category.prototype.getItemHeight = function () {\n    var itemHeight = this.get('itemHeight');\n    if (!itemHeight) {\n      var style_1 = (this.get('itemName') || {}).style;\n      if (isFunction(style_1)) {\n        var items_1 = this.getItems();\n        items_1.forEach(function (item, index) {\n          var fontSize = __assign(__assign({}, textStyle), style_1(item, index, items_1)).fontSize;\n          if (itemHeight < fontSize) {\n            itemHeight = fontSize;\n          }\n        });\n      } else if (style_1) {\n        itemHeight = style_1.fontSize;\n      }\n    }\n    return itemHeight;\n  };\n  // 绘制 marker\n  Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\n    var markerAttrs = __assign(__assign(__assign({\n      x: 0,\n      y: itemHeight / 2\n    }, markerCfg.style), {\n      symbol: get(item.marker, 'symbol', 'circle')\n    }), get(item.marker, 'style', {}));\n    var shape = this.addShape(container, {\n      type: 'marker',\n      id: this.getElementId(\"item-\" + item.id + \"-marker\"),\n      name: 'legend-item-marker',\n      attrs: markerAttrs\n    });\n    var bbox = shape.getBBox();\n    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n    var _a = shape.attr(),\n      stroke = _a.stroke,\n      fill = _a.fill;\n    if (stroke) {\n      shape.set('isStroke', true);\n    }\n    if (fill) {\n      shape.set('isFill', true);\n    }\n    return shape;\n  };\n  // 绘制文本\n  Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\n    var formatter = cfg.formatter;\n    var style = cfg.style;\n    var attrs = __assign(__assign({\n      x: xPosition,\n      y: itemHeight / 2,\n      text: formatter ? formatter(item[textName], item, index) : item[textName]\n    }, textStyle), isFunction(style) ? style(item, index, this.getItems()) : style);\n    return this.addShape(container, {\n      type: 'text',\n      id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\n      name: \"legend-item-\" + textName,\n      attrs: attrs\n    });\n  };\n  Category.prototype.drawRadio = function (container, radioCfg, item, itemHeight, x) {\n    var _a, _b;\n    var style = radioCfg.style || {};\n    // 以用户设置的 r 为主\n    var r = (_a = style.r) !== null && _a !== void 0 ? _a : itemHeight / 2;\n    var lineWidth = r * 3.6 / 8;\n    var _c = [x + r, itemHeight / 2 - r],\n      x0 = _c[0],\n      y0 = _c[1];\n    var _d = [x0 + r, y0 + r],\n      x1 = _d[0],\n      y1 = _d[1];\n    var _e = [x0, y1 + r],\n      x2 = _e[0],\n      y2 = _e[1];\n    var _f = [x, y0 + r],\n      x3 = _f[0],\n      y3 = _f[1];\n    var showRadio = item.showRadio;\n    var attrs = __assign(__assign({\n      path: [['M', x0, y0], ['A', r, r, 0, 0, 1, x1, y1], ['L', x1 - lineWidth, y1], ['L', x1, y1], ['A', r, r, 0, 0, 1, x2, y2], ['L', x2, y2 - lineWidth], ['L', x2, y2], ['A', r, r, 0, 0, 1, x3, y3], ['L', x3 + lineWidth, y3], ['L', x3, y3], ['A', r, r, 0, 0, 1, x0, y0], ['L', x0, y0 + lineWidth]],\n      stroke: '#000000',\n      fill: '#ffffff'\n    }, style), {\n      opacity: showRadio ? (_b = style === null || style === void 0 ? void 0 : style.opacity) !== null && _b !== void 0 ? _b : 0.45 : 0\n    });\n    var radioShape = this.addShape(container, {\n      type: 'path',\n      id: this.getElementId(\"item-\" + item.id + \"-radio\"),\n      name: 'legend-item-radio',\n      attrs: attrs\n    });\n    radioShape.set('tip', radioCfg.tip);\n    return radioShape;\n  };\n  // 绘制图例项\n  Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\n    var groupId = \"item-\" + item.id;\n    // 设置单独的 Group 用于 setClip\n    var subContainer = this.addGroup(itemGroup, {\n      name: 'legend-item-container',\n      id: this.getElementId(\"item-container-\" + groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var subGroup = this.addGroup(subContainer, {\n      name: 'legend-item',\n      id: this.getElementId(groupId),\n      delegateObject: {\n        item: item,\n        index: index\n      }\n    });\n    var marker = this.get('marker');\n    var itemName = this.get('itemName');\n    var itemValue = this.get('itemValue');\n    var itemBackground = this.get('itemBackground');\n    var radio = this.get('radio');\n    var itemWidth = this.getLimitItemWidth();\n    var curX = 0; // 记录当前 x 的位置\n    if (marker) {\n      var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n      var spacing = marker.spacing;\n      var itemMarkerSpacing = get(item, ['marker', 'spacing']);\n      if (isNumber(itemMarkerSpacing)) {\n        // 如果 item 有配置 marker.spacing，采用 item 的配置\n        spacing = itemMarkerSpacing;\n      }\n      curX = markerShape.getBBox().maxX + spacing;\n    }\n    if (itemName) {\n      var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n      if (itemWidth) {\n        // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n        ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n      }\n      curX = nameShape.getBBox().maxX + itemName.spacing;\n    }\n    if (itemValue) {\n      var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n      if (itemWidth) {\n        if (itemValue.alignRight) {\n          valueShape.attr({\n            textAlign: 'right',\n            x: itemWidth\n          });\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n        } else {\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n        }\n      }\n      curX = valueShape.getBBox().maxX + itemValue.spacing;\n    }\n    if (radio) {\n      this.drawRadio(subGroup, radio, item, itemHeight, curX);\n    }\n    // 添加透明的背景，便于拾取和包围盒计算\n    if (itemBackground) {\n      var bbox = subGroup.getBBox();\n      var backShape = this.addShape(subGroup, {\n        type: 'rect',\n        name: 'legend-item-background',\n        id: this.getElementId(groupId + \"-background\"),\n        attrs: __assign({\n          x: 0,\n          y: 0,\n          width: bbox.width,\n          height: itemHeight\n        }, itemBackground.style)\n      });\n      backShape.toBack();\n    }\n    this.applyItemStates(item, subGroup);\n    return subGroup;\n  };\n  // 加上分页器并重新排序 items\n  Category.prototype.adjustNavigation = function (container, itemGroup) {\n    var _this = this;\n    var startX = this.startX;\n    var startY = this.startY;\n    var layout = this.get('layout');\n    var subGroups = itemGroup.findAll(function (item) {\n      return item.get('name') === 'legend-item';\n    });\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var itemWidth = this.get('itemWidth');\n    var itemSpacing = this.get('itemSpacing');\n    var itemHeight = this.getItemHeight();\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n    var navigationBBox = navigation.getBBox();\n    var currentPoint = {\n      x: startX,\n      y: startY\n    };\n    var pages = 1;\n    var widthLimit = 0;\n    var pageWidth = 0;\n    var maxItemWidth = 0;\n    var itemMarginBottom = this.get('itemMarginBottom');\n    if (layout === 'horizontal') {\n      var maxRow = this.get('maxRow') || 1;\n      var maxRowHeight_1 = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\n      this.pageHeight = maxRowHeight_1 * maxRow;\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n        var width = itemWidth || bbox.width;\n        if (widthLimit && widthLimit < currentPoint.x + width + itemSpacing || maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\n          if (pages === 1) {\n            widthLimit = currentPoint.x + itemSpacing;\n            _this.pageWidth = widthLimit;\n            _this.moveElementTo(navigation, {\n              x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY\n            });\n          }\n          pages += 1;\n          currentPoint.x = startX;\n          currentPoint.y += maxRowHeight_1;\n        }\n        _this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: width + itemSpacing,\n            height: itemHeight\n          }\n        });\n        currentPoint.x += width + itemSpacing;\n      });\n    } else {\n      each(subGroups, function (item) {\n        var bbox = item.getBBox();\n        if (bbox.width > pageWidth) {\n          pageWidth = bbox.width;\n        }\n      });\n      maxItemWidth = pageWidth;\n      pageWidth += itemSpacing;\n      if (maxWidth) {\n        // maxWidth 限制加上\n        pageWidth = Math.min(maxWidth, pageWidth);\n        maxItemWidth = Math.min(maxWidth, maxItemWidth);\n      }\n      this.pageWidth = pageWidth;\n      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\n      var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\n      each(subGroups, function (item, index) {\n        if (index !== 0 && index % cntPerPage_1 === 0) {\n          pages += 1;\n          currentPoint.x += pageWidth;\n          currentPoint.y = startY;\n        }\n        _this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: pageWidth,\n            height: itemHeight\n          }\n        });\n        currentPoint.y += itemHeight + itemMarginBottom;\n      });\n      this.totalPagesCnt = pages;\n      this.moveElementTo(navigation, {\n        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n        y: maxHeight - navigationBBox.height - navigationBBox.minY\n      });\n    }\n    if (this.pageHeight && this.pageWidth) {\n      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n      itemGroup.getParent().setClip({\n        type: 'rect',\n        attrs: {\n          x: this.startX,\n          y: this.startY,\n          width: this.pageWidth,\n          height: this.pageHeight\n        }\n      });\n    }\n    // 重新计算 totalPagesCnt\n    if (layout === 'horizontal' && this.get('maxRow')) {\n      this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\n    } else {\n      this.totalPagesCnt = pages;\n    }\n    if (this.currentPageIndex > this.totalPagesCnt) {\n      this.currentPageIndex = 1;\n    }\n    this.updateNavigation(navigation);\n    // update initial matrix\n    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n  };\n  /**\n   * 绘制分页器\n   */\n  Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    var subGroup = this.addGroup(group, {\n      id: this.getElementId('navigation-group'),\n      name: 'legend-navigation'\n    });\n    var _a = get(styleCfg.marker, 'style', {}),\n      _b = _a.size,\n      size = _b === void 0 ? 12 : _b,\n      arrowStyle = __rest(_a, [\"size\"]);\n    var leftArrow = this.drawArrow(subGroup, currentPoint, LEFT_ARROW_NAME, layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\n    leftArrow.on('click', this.onNavigationBack);\n    var leftArrowBBox = leftArrow.getBBox();\n    currentPoint.x += leftArrowBBox.width + 2;\n    var textShape = this.addShape(subGroup, {\n      type: 'text',\n      id: this.getElementId('navigation-text'),\n      name: 'navigation-text',\n      attrs: __assign({\n        x: currentPoint.x,\n        y: currentPoint.y + size / 2,\n        text: text,\n        textBaseline: 'middle'\n      }, get(styleCfg.text, 'style'))\n    });\n    var textBBox = textShape.getBBox();\n    currentPoint.x += textBBox.width + 2;\n    var rightArrow = this.drawArrow(subGroup, currentPoint, RIGHT_ARROW_NAME, layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\n    rightArrow.on('click', this.onNavigationAfter);\n    return subGroup;\n  };\n  Category.prototype.updateNavigation = function (navigation) {\n    var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    var _a = pageNavigator.marker.style,\n      fill = _a.fill,\n      opacity = _a.opacity,\n      inactiveFill = _a.inactiveFill,\n      inactiveOpacity = _a.inactiveOpacity;\n    var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\n    var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n    var leftArrow = navigation ? navigation.findById(this.getElementId(LEFT_ARROW_NAME)) : this.getElementByLocalId(LEFT_ARROW_NAME);\n    var rightArrow = navigation ? navigation.findById(this.getElementId(RIGHT_ARROW_NAME)) : this.getElementByLocalId(RIGHT_ARROW_NAME);\n    textShape.attr('text', text);\n    // 更新 left-arrow marker\n    leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n    leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\n    // 更新 right-arrow marker\n    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n    rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n    // 更新位置\n    var cursorX = leftArrow.getBBox().maxX + 2;\n    textShape.attr('x', cursorX);\n    cursorX += textShape.getBBox().width + 2;\n    this.updateArrowPath(rightArrow, {\n      x: cursorX,\n      y: 0\n    });\n  };\n  Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\n    var x = currentPoint.x,\n      y = currentPoint.y;\n    var shape = this.addShape(group, {\n      type: 'path',\n      id: this.getElementId(name),\n      name: name,\n      attrs: __assign({\n        size: size,\n        direction: direction,\n        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],\n        cursor: 'pointer'\n      }, style)\n    });\n    shape.attr('matrix', getMatrixByAngle({\n      x: x + size / 2,\n      y: y + size / 2\n    }, ROTATE_MAP[direction]));\n    return shape;\n  };\n  /**\n   * 更新分页器 arrow 组件\n   */\n  Category.prototype.updateArrowPath = function (arrow, point) {\n    var x = point.x,\n      y = point.y;\n    var _a = arrow.attr(),\n      size = _a.size,\n      direction = _a.direction;\n    var matrix = getMatrixByAngle({\n      x: x + size / 2,\n      y: y + size / 2\n    }, ROTATE_MAP[direction]);\n    arrow.attr('path', [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']]);\n    arrow.attr('matrix', matrix);\n  };\n  Category.prototype.getCurrentNavigationMatrix = function () {\n    var _a = this,\n      currentPageIndex = _a.currentPageIndex,\n      pageWidth = _a.pageWidth,\n      pageHeight = _a.pageHeight;\n    var layout = this.get('layout');\n    var translate = layout === 'horizontal' ? {\n      x: 0,\n      y: pageHeight * (1 - currentPageIndex)\n    } : {\n      x: pageWidth * (1 - currentPageIndex),\n      y: 0\n    };\n    return getMatrixByTranslate(translate);\n  };\n  // 附加状态对应的样式\n  Category.prototype.applyItemStates = function (item, subGroup) {\n    var states = this.getItemStates(item);\n    var hasStates = states.length > 0;\n    if (hasStates) {\n      var children = subGroup.getChildren();\n      var itemStates_1 = this.get('itemStates');\n      each(children, function (element) {\n        var name = element.get('name');\n        var elName = name.split('-')[2]; // marker, name, value\n        var statesStyle = getStatesStyle(item, elName, itemStates_1);\n        if (statesStyle) {\n          element.attr(statesStyle);\n          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n            if (element.get('isStroke')) {\n              element.attr('fill', null);\n            }\n            if (element.get('isFill')) {\n              element.attr('stroke', null);\n            }\n          }\n        }\n      });\n    }\n  };\n  // 获取 itemWidth 的最终设置\n  Category.prototype.getLimitItemWidth = function () {\n    var itemWidth = this.get('itemWidth');\n    var maxItemWidth = this.get('maxItemWidth');\n    if (maxItemWidth) {\n      // 设置了最大宽度\n      if (itemWidth) {\n        maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n      }\n    } else if (itemWidth) {\n      maxItemWidth = itemWidth;\n    }\n    return maxItemWidth;\n  };\n  return Category;\n}(LegendBase);\nexport default Category;","map":{"version":3,"sources":["../../src/legend/category.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n/**\n * 分页器 默认配置\n */\nvar DEFAULT_PAGE_NAVIGATOR = {\n    marker: {\n        style: {\n            inactiveFill: '#000',\n            inactiveOpacity: 0.45,\n            fill: '#000',\n            opacity: 1,\n            size: 12,\n        },\n    },\n    text: {\n        style: {\n            fill: '#ccc',\n            fontSize: 12,\n        },\n    },\n};\n// 默认 文本style\nvar textStyle = {\n    fill: Theme.textColor,\n    fontSize: 12,\n    textAlign: 'start',\n    textBaseline: 'middle',\n    fontFamily: Theme.fontFamily,\n    fontWeight: 'normal',\n    lineHeight: 12,\n};\nvar RIGHT_ARROW_NAME = 'navigation-arrow-right';\nvar LEFT_ARROW_NAME = 'navigation-arrow-left';\nvar ROTATE_MAP = {\n    right: (90 * Math.PI) / 180,\n    left: ((360 - 90) * Math.PI) / 180,\n    up: 0,\n    down: (180 * Math.PI) / 180,\n};\nvar Category = /** @class */ (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.currentPageIndex = 1;\n        _this.totalPagesCnt = 1;\n        _this.pageWidth = 0;\n        _this.pageHeight = 0;\n        _this.startX = 0;\n        _this.startY = 0;\n        _this.onNavigationBack = function () {\n            var itemGroup = _this.getElementByLocalId('item-group');\n            if (_this.currentPageIndex > 1) {\n                _this.currentPageIndex -= 1;\n                _this.updateNavigation();\n                var matrix = _this.getCurrentNavigationMatrix();\n                if (_this.get('animate')) {\n                    itemGroup.animate({\n                        matrix: matrix,\n                    }, 100);\n                }\n                else {\n                    itemGroup.attr({ matrix: matrix });\n                }\n            }\n        };\n        _this.onNavigationAfter = function () {\n            var itemGroup = _this.getElementByLocalId('item-group');\n            if (_this.currentPageIndex < _this.totalPagesCnt) {\n                _this.currentPageIndex += 1;\n                _this.updateNavigation();\n                var matrix = _this.getCurrentNavigationMatrix();\n                if (_this.get('animate')) {\n                    itemGroup.animate({\n                        matrix: matrix,\n                    }, 100);\n                }\n                else {\n                    itemGroup.attr({ matrix: matrix });\n                }\n            }\n        };\n        return _this;\n    }\n    Category.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'legend', type: 'category', itemSpacing: 24, itemMarginBottom: 8, maxItemWidth: null, itemWidth: null, itemHeight: null, itemName: {}, itemValue: null, maxWidth: null, maxHeight: null, marker: {}, radio: null, items: [], itemStates: {}, itemBackground: {}, pageNavigator: {}, defaultCfg: {\n                title: {\n                    spacing: 5,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'top',\n                    },\n                },\n                background: {\n                    padding: 5,\n                    style: {\n                        stroke: Theme.lineColor,\n                    },\n                },\n                itemBackground: {\n                    style: {\n                        opacity: 0,\n                        fill: '#fff',\n                    },\n                },\n                pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n                itemName: {\n                    spacing: 16,\n                    style: textStyle,\n                },\n                marker: {\n                    spacing: 8,\n                    style: {\n                        r: 6,\n                        symbol: 'circle',\n                    },\n                },\n                itemValue: {\n                    alignRight: false,\n                    formatter: null,\n                    style: textStyle,\n                    spacing: 6,\n                },\n                itemStates: {\n                    active: {\n                        nameStyle: {\n                            opacity: 0.8,\n                        },\n                    },\n                    unchecked: {\n                        nameStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                        markerStyle: {\n                            fill: Theme.uncheckedColor,\n                            stroke: Theme.uncheckedColor,\n                        },\n                    },\n                    inactive: {\n                        nameStyle: {\n                            fill: Theme.uncheckedColor,\n                        },\n                        markerStyle: {\n                            opacity: 0.2,\n                        },\n                    },\n                },\n            } });\n    };\n    // 实现 IList 接口\n    Category.prototype.isList = function () {\n        return true;\n    };\n    /**\n     * 获取图例项\n     * @return {ListItem[]} 列表项集合\n     */\n    Category.prototype.getItems = function () {\n        return this.get('items');\n    };\n    /**\n     * 设置列表项\n     * @param {ListItem[]} items 列表项集合\n     */\n    Category.prototype.setItems = function (items) {\n        this.update({\n            items: items,\n        });\n    };\n    /**\n     * 更新列表项\n     * @param {ListItem} item 列表项\n     * @param {object}   cfg  列表项\n     */\n    Category.prototype.updateItem = function (item, cfg) {\n        mix(item, cfg);\n        this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n        this.render();\n    };\n    /**\n     * 清空列表\n     */\n    Category.prototype.clearItems = function () {\n        var itemGroup = this.getElementByLocalId('item-group');\n        itemGroup && itemGroup.clear();\n    };\n    /**\n     * 设置列表项的状态\n     * @param {ListItem} item  列表项\n     * @param {string}   state 状态名\n     * @param {boolean}  value 状态值, true, false\n     */\n    Category.prototype.setItemState = function (item, state, value) {\n        item[state] = value;\n        var itemElement = this.getElementByLocalId(\"item-\" + item.id);\n        if (itemElement) {\n            var items = this.getItems();\n            var index = items.indexOf(item);\n            var offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n            var newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n            this.updateElements(newElement, itemElement); // 更新整个分组\n            this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n        }\n    };\n    /**\n     * 是否存在指定的状态\n     * @param {ListItem} item  列表项\n     * @param {boolean} state 状态名\n     */\n    Category.prototype.hasState = function (item, state) {\n        return !!item[state];\n    };\n    Category.prototype.getItemStates = function (item) {\n        var itemStates = this.get('itemStates');\n        var rst = [];\n        each(itemStates, function (v, k) {\n            if (item[k]) {\n                // item.selected\n                rst.push(k);\n            }\n        });\n        return rst;\n    };\n    /**\n     * 清楚所有列表项的状态\n     * @param {string} state 状态值\n     */\n    Category.prototype.clearItemsState = function (state) {\n        var _this = this;\n        var items = this.getItemsByState(state);\n        each(items, function (item) {\n            _this.setItemState(item, state, false);\n        });\n    };\n    /**\n     * 根据状态获取图例项\n     * @param  {string}     state [description]\n     * @return {ListItem[]}       [description]\n     */\n    Category.prototype.getItemsByState = function (state) {\n        var _this = this;\n        var items = this.getItems();\n        return filter(items, function (item) {\n            return _this.hasState(item, state);\n        });\n    };\n    // 绘制 legend 的选项\n    Category.prototype.drawLegendContent = function (group) {\n        this.processItems();\n        this.drawItems(group);\n    };\n    // 防止未设置 id\n    Category.prototype.processItems = function () {\n        var items = this.get('items');\n        each(items, function (item) {\n            if (!item.id) {\n                // 如果没有设置 id，默认使用 name\n                item.id = item.name;\n            }\n        });\n    };\n    // 绘制所有的图例选项\n    Category.prototype.drawItems = function (group) {\n        var _this = this;\n        var itemContainerGroup = this.addGroup(group, {\n            id: this.getElementId('item-container-group'),\n            name: 'legend-item-container-group',\n        });\n        var itemGroup = this.addGroup(itemContainerGroup, {\n            id: this.getElementId('item-group'),\n            name: 'legend-item-group',\n        });\n        var itemHeight = this.getItemHeight();\n        var itemWidth = this.get('itemWidth');\n        var itemSpacing = this.get('itemSpacing');\n        var itemMarginBottom = this.get('itemMarginBottom');\n        var currentPoint = this.get('currentPoint');\n        var startX = currentPoint.x;\n        var startY = currentPoint.y;\n        var layout = this.get('layout');\n        var items = this.get('items');\n        var wrapped = false;\n        var pageWidth = 0;\n        var maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n        var maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n        // 暂时不考虑分页\n        each(items, function (item, index) {\n            var subGroup = _this.drawItem(item, index, itemHeight, itemGroup);\n            var bbox = subGroup.getBBox();\n            var width = itemWidth || bbox.width;\n            if (width > pageWidth) {\n                pageWidth = width;\n            }\n            if (layout === 'horizontal') {\n                // 如果水平布局\n                if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n                    // 检测是否换行\n                    wrapped = true;\n                    currentPoint.x = startX;\n                    currentPoint.y += itemHeight + itemMarginBottom;\n                }\n                _this.moveElementTo(subGroup, currentPoint);\n                currentPoint.x += width + itemSpacing;\n            }\n            else {\n                // 如果垂直布局\n                if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n                    // 换行\n                    wrapped = true;\n                    currentPoint.x += pageWidth + itemSpacing;\n                    currentPoint.y = startY;\n                    pageWidth = 0;\n                }\n                _this.moveElementTo(subGroup, currentPoint);\n                currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n            }\n        });\n        if (wrapped && this.get('flipPage')) {\n            this.pageHeight = 0;\n            this.pageWidth = 0;\n            this.totalPagesCnt = 1;\n            this.startX = startX;\n            this.startY = startY;\n            this.adjustNavigation(group, itemGroup);\n        }\n    };\n    // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n    Category.prototype.getItemHeight = function () {\n        var itemHeight = this.get('itemHeight');\n        if (!itemHeight) {\n            var style_1 = (this.get('itemName') || {}).style;\n            if (isFunction(style_1)) {\n                var items_1 = this.getItems();\n                items_1.forEach(function (item, index) {\n                    var fontSize = __assign(__assign({}, textStyle), style_1(item, index, items_1)).fontSize;\n                    if (itemHeight < fontSize) {\n                        itemHeight = fontSize;\n                    }\n                });\n            }\n            else if (style_1) {\n                itemHeight = style_1.fontSize;\n            }\n        }\n        return itemHeight;\n    };\n    // 绘制 marker\n    Category.prototype.drawMarker = function (container, markerCfg, item, itemHeight) {\n        var markerAttrs = __assign(__assign(__assign({ x: 0, y: itemHeight / 2 }, markerCfg.style), { symbol: get(item.marker, 'symbol', 'circle') }), get(item.marker, 'style', {}));\n        var shape = this.addShape(container, {\n            type: 'marker',\n            id: this.getElementId(\"item-\" + item.id + \"-marker\"),\n            name: 'legend-item-marker',\n            attrs: markerAttrs,\n        });\n        var bbox = shape.getBBox();\n        shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n        var _a = shape.attr(), stroke = _a.stroke, fill = _a.fill;\n        if (stroke) {\n            shape.set('isStroke', true);\n        }\n        if (fill) {\n            shape.set('isFill', true);\n        }\n        return shape;\n    };\n    // 绘制文本\n    Category.prototype.drawItemText = function (container, textName, cfg, item, itemHeight, xPosition, index) {\n        var formatter = cfg.formatter;\n        var style = cfg.style;\n        var attrs = __assign(__assign({ x: xPosition, y: itemHeight / 2, text: formatter ? formatter(item[textName], item, index) : item[textName] }, textStyle), (isFunction(style) ? style(item, index, this.getItems()) : style));\n        return this.addShape(container, {\n            type: 'text',\n            id: this.getElementId(\"item-\" + item.id + \"-\" + textName),\n            name: \"legend-item-\" + textName,\n            attrs: attrs,\n        });\n    };\n    Category.prototype.drawRadio = function (container, radioCfg, item, itemHeight, x) {\n        var _a, _b;\n        var style = radioCfg.style || {};\n        // 以用户设置的 r 为主\n        var r = (_a = style.r) !== null && _a !== void 0 ? _a : itemHeight / 2;\n        var lineWidth = (r * 3.6) / 8;\n        var _c = [x + r, itemHeight / 2 - r], x0 = _c[0], y0 = _c[1];\n        var _d = [x0 + r, y0 + r], x1 = _d[0], y1 = _d[1];\n        var _e = [x0, y1 + r], x2 = _e[0], y2 = _e[1];\n        var _f = [x, y0 + r], x3 = _f[0], y3 = _f[1];\n        var showRadio = item.showRadio;\n        var attrs = __assign(__assign({ path: [\n                ['M', x0, y0],\n                ['A', r, r, 0, 0, 1, x1, y1],\n                ['L', x1 - lineWidth, y1],\n                ['L', x1, y1],\n                ['A', r, r, 0, 0, 1, x2, y2],\n                ['L', x2, y2 - lineWidth],\n                ['L', x2, y2],\n                ['A', r, r, 0, 0, 1, x3, y3],\n                ['L', x3 + lineWidth, y3],\n                ['L', x3, y3],\n                ['A', r, r, 0, 0, 1, x0, y0],\n                ['L', x0, y0 + lineWidth],\n            ], stroke: '#000000', fill: '#ffffff' }, style), { opacity: showRadio ? ((_b = style === null || style === void 0 ? void 0 : style.opacity) !== null && _b !== void 0 ? _b : 0.45) : 0 });\n        var radioShape = this.addShape(container, {\n            type: 'path',\n            id: this.getElementId(\"item-\" + item.id + \"-radio\"),\n            name: 'legend-item-radio',\n            attrs: attrs,\n        });\n        radioShape.set('tip', radioCfg.tip);\n        return radioShape;\n    };\n    // 绘制图例项\n    Category.prototype.drawItem = function (item, index, itemHeight, itemGroup) {\n        var groupId = \"item-\" + item.id;\n        // 设置单独的 Group 用于 setClip\n        var subContainer = this.addGroup(itemGroup, {\n            name: 'legend-item-container',\n            id: this.getElementId(\"item-container-\" + groupId),\n            delegateObject: {\n                item: item,\n                index: index,\n            },\n        });\n        var subGroup = this.addGroup(subContainer, {\n            name: 'legend-item',\n            id: this.getElementId(groupId),\n            delegateObject: {\n                item: item,\n                index: index,\n            },\n        });\n        var marker = this.get('marker');\n        var itemName = this.get('itemName');\n        var itemValue = this.get('itemValue');\n        var itemBackground = this.get('itemBackground');\n        var radio = this.get('radio');\n        var itemWidth = this.getLimitItemWidth();\n        var curX = 0; // 记录当前 x 的位置\n        if (marker) {\n            var markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n            var spacing = marker.spacing;\n            var itemMarkerSpacing = get(item, ['marker', 'spacing']);\n            if (isNumber(itemMarkerSpacing)) {\n                // 如果 item 有配置 marker.spacing，采用 item 的配置\n                spacing = itemMarkerSpacing;\n            }\n            curX = markerShape.getBBox().maxX + spacing;\n        }\n        if (itemName) {\n            var nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n            if (itemWidth) {\n                // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n                ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n            }\n            curX = nameShape.getBBox().maxX + itemName.spacing;\n        }\n        if (itemValue) {\n            var valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n            if (itemWidth) {\n                if (itemValue.alignRight) {\n                    valueShape.attr({\n                        textAlign: 'right',\n                        x: itemWidth,\n                    });\n                    ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n                }\n                else {\n                    ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n                }\n            }\n            curX = valueShape.getBBox().maxX + itemValue.spacing;\n        }\n        if (radio) {\n            this.drawRadio(subGroup, radio, item, itemHeight, curX);\n        }\n        // 添加透明的背景，便于拾取和包围盒计算\n        if (itemBackground) {\n            var bbox = subGroup.getBBox();\n            var backShape = this.addShape(subGroup, {\n                type: 'rect',\n                name: 'legend-item-background',\n                id: this.getElementId(groupId + \"-background\"),\n                attrs: __assign({ x: 0, y: 0, width: bbox.width, height: itemHeight }, itemBackground.style),\n            });\n            backShape.toBack();\n        }\n        this.applyItemStates(item, subGroup);\n        return subGroup;\n    };\n    // 加上分页器并重新排序 items\n    Category.prototype.adjustNavigation = function (container, itemGroup) {\n        var _this = this;\n        var startX = this.startX;\n        var startY = this.startY;\n        var layout = this.get('layout');\n        var subGroups = itemGroup.findAll(function (item) { return item.get('name') === 'legend-item'; });\n        var maxWidth = this.get('maxWidth');\n        var maxHeight = this.get('maxHeight');\n        var itemWidth = this.get('itemWidth');\n        var itemSpacing = this.get('itemSpacing');\n        var itemHeight = this.getItemHeight();\n        var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n        var navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n        var navigationBBox = navigation.getBBox();\n        var currentPoint = { x: startX, y: startY };\n        var pages = 1;\n        var widthLimit = 0;\n        var pageWidth = 0;\n        var maxItemWidth = 0;\n        var itemMarginBottom = this.get('itemMarginBottom');\n        if (layout === 'horizontal') {\n            var maxRow = this.get('maxRow') || 1;\n            var maxRowHeight_1 = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\n            this.pageHeight = maxRowHeight_1 * maxRow;\n            each(subGroups, function (item) {\n                var bbox = item.getBBox();\n                var width = itemWidth || bbox.width;\n                if ((widthLimit && widthLimit < currentPoint.x + width + itemSpacing) ||\n                    maxWidth < currentPoint.x + width + itemSpacing + navigationBBox.width) {\n                    if (pages === 1) {\n                        widthLimit = currentPoint.x + itemSpacing;\n                        _this.pageWidth = widthLimit;\n                        _this.moveElementTo(navigation, {\n                            x: maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX,\n                            y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY,\n                        });\n                    }\n                    pages += 1;\n                    currentPoint.x = startX;\n                    currentPoint.y += maxRowHeight_1;\n                }\n                _this.moveElementTo(item, currentPoint);\n                item.getParent().setClip({\n                    type: 'rect',\n                    attrs: {\n                        x: currentPoint.x,\n                        y: currentPoint.y,\n                        width: width + itemSpacing,\n                        height: itemHeight,\n                    },\n                });\n                currentPoint.x += width + itemSpacing;\n            });\n        }\n        else {\n            each(subGroups, function (item) {\n                var bbox = item.getBBox();\n                if (bbox.width > pageWidth) {\n                    pageWidth = bbox.width;\n                }\n            });\n            maxItemWidth = pageWidth;\n            pageWidth += itemSpacing;\n            if (maxWidth) {\n                // maxWidth 限制加上\n                pageWidth = Math.min(maxWidth, pageWidth);\n                maxItemWidth = Math.min(maxWidth, maxItemWidth);\n            }\n            this.pageWidth = pageWidth;\n            this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\n            var cntPerPage_1 = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\n            each(subGroups, function (item, index) {\n                if (index !== 0 && index % cntPerPage_1 === 0) {\n                    pages += 1;\n                    currentPoint.x += pageWidth;\n                    currentPoint.y = startY;\n                }\n                _this.moveElementTo(item, currentPoint);\n                item.getParent().setClip({\n                    type: 'rect',\n                    attrs: {\n                        x: currentPoint.x,\n                        y: currentPoint.y,\n                        width: pageWidth,\n                        height: itemHeight,\n                    },\n                });\n                currentPoint.y += itemHeight + itemMarginBottom;\n            });\n            this.totalPagesCnt = pages;\n            this.moveElementTo(navigation, {\n                x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n                y: maxHeight - navigationBBox.height - navigationBBox.minY,\n            });\n        }\n        if (this.pageHeight && this.pageWidth) {\n            // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n            itemGroup.getParent().setClip({\n                type: 'rect',\n                attrs: {\n                    x: this.startX,\n                    y: this.startY,\n                    width: this.pageWidth,\n                    height: this.pageHeight,\n                },\n            });\n        }\n        // 重新计算 totalPagesCnt\n        if (layout === 'horizontal' && this.get('maxRow')) {\n            this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\n        }\n        else {\n            this.totalPagesCnt = pages;\n        }\n        if (this.currentPageIndex > this.totalPagesCnt) {\n            this.currentPageIndex = 1;\n        }\n        this.updateNavigation(navigation);\n        // update initial matrix\n        itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n    };\n    /**\n     * 绘制分页器\n     */\n    Category.prototype.drawNavigation = function (group, layout, text, styleCfg) {\n        var currentPoint = { x: 0, y: 0 };\n        var subGroup = this.addGroup(group, {\n            id: this.getElementId('navigation-group'),\n            name: 'legend-navigation',\n        });\n        var _a = get(styleCfg.marker, 'style', {}), _b = _a.size, size = _b === void 0 ? 12 : _b, arrowStyle = __rest(_a, [\"size\"]);\n        var leftArrow = this.drawArrow(subGroup, currentPoint, LEFT_ARROW_NAME, layout === 'horizontal' ? 'up' : 'left', size, arrowStyle);\n        leftArrow.on('click', this.onNavigationBack);\n        var leftArrowBBox = leftArrow.getBBox();\n        currentPoint.x += leftArrowBBox.width + 2;\n        var textShape = this.addShape(subGroup, {\n            type: 'text',\n            id: this.getElementId('navigation-text'),\n            name: 'navigation-text',\n            attrs: __assign({ x: currentPoint.x, y: currentPoint.y + size / 2, text: text, textBaseline: 'middle' }, get(styleCfg.text, 'style')),\n        });\n        var textBBox = textShape.getBBox();\n        currentPoint.x += textBBox.width + 2;\n        var rightArrow = this.drawArrow(subGroup, currentPoint, RIGHT_ARROW_NAME, layout === 'horizontal' ? 'down' : 'right', size, arrowStyle);\n        rightArrow.on('click', this.onNavigationAfter);\n        return subGroup;\n    };\n    Category.prototype.updateNavigation = function (navigation) {\n        var pageNavigator = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n        var _a = pageNavigator.marker.style, fill = _a.fill, opacity = _a.opacity, inactiveFill = _a.inactiveFill, inactiveOpacity = _a.inactiveOpacity;\n        var text = this.currentPageIndex + \"/\" + this.totalPagesCnt;\n        var textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n        var leftArrow = navigation\n            ? navigation.findById(this.getElementId(LEFT_ARROW_NAME))\n            : this.getElementByLocalId(LEFT_ARROW_NAME);\n        var rightArrow = navigation\n            ? navigation.findById(this.getElementId(RIGHT_ARROW_NAME))\n            : this.getElementByLocalId(RIGHT_ARROW_NAME);\n        textShape.attr('text', text);\n        // 更新 left-arrow marker\n        leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n        leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n        leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\n        // 更新 right-arrow marker\n        rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n        rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n        rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n        // 更新位置\n        var cursorX = leftArrow.getBBox().maxX + 2;\n        textShape.attr('x', cursorX);\n        cursorX += textShape.getBBox().width + 2;\n        this.updateArrowPath(rightArrow, { x: cursorX, y: 0 });\n    };\n    Category.prototype.drawArrow = function (group, currentPoint, name, direction, size, style) {\n        var x = currentPoint.x, y = currentPoint.y;\n        var shape = this.addShape(group, {\n            type: 'path',\n            id: this.getElementId(name),\n            name: name,\n            attrs: __assign({ size: size,\n                direction: direction, path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']], cursor: 'pointer' }, style),\n        });\n        shape.attr('matrix', getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, ROTATE_MAP[direction]));\n        return shape;\n    };\n    /**\n     * 更新分页器 arrow 组件\n     */\n    Category.prototype.updateArrowPath = function (arrow, point) {\n        var x = point.x, y = point.y;\n        var _a = arrow.attr(), size = _a.size, direction = _a.direction;\n        var matrix = getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, ROTATE_MAP[direction]);\n        arrow.attr('path', [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']]);\n        arrow.attr('matrix', matrix);\n    };\n    Category.prototype.getCurrentNavigationMatrix = function () {\n        var _a = this, currentPageIndex = _a.currentPageIndex, pageWidth = _a.pageWidth, pageHeight = _a.pageHeight;\n        var layout = this.get('layout');\n        var translate = layout === 'horizontal'\n            ? {\n                x: 0,\n                y: pageHeight * (1 - currentPageIndex),\n            }\n            : {\n                x: pageWidth * (1 - currentPageIndex),\n                y: 0,\n            };\n        return getMatrixByTranslate(translate);\n    };\n    // 附加状态对应的样式\n    Category.prototype.applyItemStates = function (item, subGroup) {\n        var states = this.getItemStates(item);\n        var hasStates = states.length > 0;\n        if (hasStates) {\n            var children = subGroup.getChildren();\n            var itemStates_1 = this.get('itemStates');\n            each(children, function (element) {\n                var name = element.get('name');\n                var elName = name.split('-')[2]; // marker, name, value\n                var statesStyle = getStatesStyle(item, elName, itemStates_1);\n                if (statesStyle) {\n                    element.attr(statesStyle);\n                    if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n                        // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n                        if (element.get('isStroke')) {\n                            element.attr('fill', null);\n                        }\n                        if (element.get('isFill')) {\n                            element.attr('stroke', null);\n                        }\n                    }\n                }\n            });\n        }\n    };\n    // 获取 itemWidth 的最终设置\n    Category.prototype.getLimitItemWidth = function () {\n        var itemWidth = this.get('itemWidth');\n        var maxItemWidth = this.get('maxItemWidth');\n        if (maxItemWidth) {\n            // 设置了最大宽度\n            if (itemWidth) {\n                maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n            }\n        }\n        else if (itemWidth) {\n            maxItemWidth = itemWidth;\n        }\n        return maxItemWidth;\n    };\n    return Category;\n}(LegendBase));\nexport default Category;\n//# sourceMappingURL=category.js.map"]},"metadata":{},"sourceType":"module"}