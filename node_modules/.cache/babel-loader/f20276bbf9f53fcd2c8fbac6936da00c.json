{"ast":null,"code":"/**\n * @fileoverview Marker\n * @author dxq613@gmail.com\n */\nimport { __extends } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport { path2Absolute } from '@antv/path-util';\nimport ShapeBase from './base';\nimport { isFunction } from '../util/util';\nimport { drawPath } from '../util/draw';\nvar Symbols = {\n  // 圆\n  circle: function (x, y, r) {\n    return [['M', x - r, y], ['A', r, r, 0, 1, 0, x + r, y], ['A', r, r, 0, 1, 0, x - r, y]];\n  },\n  // 正方形\n  square: function (x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n  },\n  // 菱形\n  diamond: function (x, y, r) {\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n  },\n  // 三角形\n  triangle: function (x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['Z']];\n  },\n  // 倒三角形\n  'triangle-down': function (x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n  }\n};\nvar Marker = /** @class */function (_super) {\n  __extends(Marker, _super);\n  function Marker() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Marker.prototype.initAttrs = function (attrs) {\n    this._resetParamsCache();\n  };\n  // 重置绘制 path 存储的缓存\n  Marker.prototype._resetParamsCache = function () {\n    // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\n    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\n    this.set('paramsCache', {}); // 清理缓存\n  };\n  // 更新属性时，检测是否更改了 path\n  Marker.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n    if (['symbol', 'x', 'y', 'r', 'radius'].indexOf(name) !== -1) {\n      // path 相关属性更改时，清理缓存\n      this._resetParamsCache();\n    }\n  };\n  // 仅仅使用包围盒检测来进行拾取\n  // 所以不需要复写 isInStrokeOrPath 的方法\n  Marker.prototype.isOnlyHitBox = function () {\n    return true;\n  };\n  Marker.prototype._getR = function (attrs) {\n    // 兼容 r 和 radius 两种写法，推荐使用 r\n    return isNil(attrs.r) ? attrs.radius : attrs.r;\n  };\n  Marker.prototype._getPath = function () {\n    var attrs = this.attr();\n    var x = attrs.x,\n      y = attrs.y;\n    var symbol = attrs.symbol || 'circle';\n    var r = this._getR(attrs);\n    var method;\n    var path;\n    if (isFunction(symbol)) {\n      method = symbol;\n      path = method(x, y, r);\n      // 将 path 转成绝对路径\n      path = path2Absolute(path);\n    } else {\n      // 内置 symbol 的 path 都是绝对路径，直接绘制即可，不需要对 path 进行特殊处理\n      method = Marker.Symbols[symbol];\n      if (!method) {\n        console.warn(symbol + \" marker is not supported.\");\n        return null;\n      }\n      path = method(x, y, r);\n    }\n    return path;\n  };\n  Marker.prototype.createPath = function (context) {\n    var path = this._getPath();\n    var paramsCache = this.get('paramsCache');\n    drawPath(this, context, {\n      path: path\n    }, paramsCache);\n  };\n  Marker.Symbols = Symbols;\n  return Marker;\n}(ShapeBase);\nexport default Marker;","map":{"version":3,"sources":["../../src/shape/marker.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @fileoverview Marker\n * @author dxq613@gmail.com\n */\nimport { __extends } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport { path2Absolute } from '@antv/path-util';\nimport ShapeBase from './base';\nimport { isFunction } from '../util/util';\nimport { drawPath } from '../util/draw';\nvar Symbols = {\n    // 圆\n    circle: function (x, y, r) {\n        return [\n            ['M', x - r, y],\n            ['A', r, r, 0, 1, 0, x + r, y],\n            ['A', r, r, 0, 1, 0, x - r, y],\n        ];\n    },\n    // 正方形\n    square: function (x, y, r) {\n        return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n    },\n    // 菱形\n    diamond: function (x, y, r) {\n        return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n    },\n    // 三角形\n    triangle: function (x, y, r) {\n        var diffY = r * Math.sin((1 / 3) * Math.PI);\n        return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['Z']];\n    },\n    // 倒三角形\n    'triangle-down': function (x, y, r) {\n        var diffY = r * Math.sin((1 / 3) * Math.PI);\n        return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n    },\n};\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Marker.prototype.initAttrs = function (attrs) {\n        this._resetParamsCache();\n    };\n    // 重置绘制 path 存储的缓存\n    Marker.prototype._resetParamsCache = function () {\n        // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\n        // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\n        this.set('paramsCache', {}); // 清理缓存\n    };\n    // 更新属性时，检测是否更改了 path\n    Marker.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        if (['symbol', 'x', 'y', 'r', 'radius'].indexOf(name) !== -1) {\n            // path 相关属性更改时，清理缓存\n            this._resetParamsCache();\n        }\n    };\n    // 仅仅使用包围盒检测来进行拾取\n    // 所以不需要复写 isInStrokeOrPath 的方法\n    Marker.prototype.isOnlyHitBox = function () {\n        return true;\n    };\n    Marker.prototype._getR = function (attrs) {\n        // 兼容 r 和 radius 两种写法，推荐使用 r\n        return isNil(attrs.r) ? attrs.radius : attrs.r;\n    };\n    Marker.prototype._getPath = function () {\n        var attrs = this.attr();\n        var x = attrs.x, y = attrs.y;\n        var symbol = attrs.symbol || 'circle';\n        var r = this._getR(attrs);\n        var method;\n        var path;\n        if (isFunction(symbol)) {\n            method = symbol;\n            path = method(x, y, r);\n            // 将 path 转成绝对路径\n            path = path2Absolute(path);\n        }\n        else {\n            // 内置 symbol 的 path 都是绝对路径，直接绘制即可，不需要对 path 进行特殊处理\n            method = Marker.Symbols[symbol];\n            if (!method) {\n                console.warn(symbol + \" marker is not supported.\");\n                return null;\n            }\n            path = method(x, y, r);\n        }\n        return path;\n    };\n    Marker.prototype.createPath = function (context) {\n        var path = this._getPath();\n        var paramsCache = this.get('paramsCache');\n        drawPath(this, context, { path: path }, paramsCache);\n    };\n    Marker.Symbols = Symbols;\n    return Marker;\n}(ShapeBase));\nexport default Marker;\n//# sourceMappingURL=marker.js.map"]},"metadata":{},"sourceType":"module"}