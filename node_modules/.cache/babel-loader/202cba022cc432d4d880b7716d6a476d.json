{"ast":null,"code":"/**\n * @fileoverview shadow\n * @author dengfuping_develop@163.com\n */\nimport { each, uniqueId } from '@antv/util';\nimport { createSVGElement } from '../util/dom';\nvar ATTR_MAP = {\n  shadowColor: 'color',\n  shadowOpacity: 'opacity',\n  shadowBlur: 'blur',\n  shadowOffsetX: 'dx',\n  shadowOffsetY: 'dy'\n};\nvar SHADOW_DIMENSION = {\n  x: '-40%',\n  y: '-40%',\n  width: '200%',\n  height: '200%'\n};\nvar Shadow = /** @class */function () {\n  function Shadow(cfg) {\n    this.type = 'filter';\n    this.cfg = {};\n    this.type = 'filter';\n    var el = createSVGElement('filter');\n    // expand the filter region to fill in shadows\n    each(SHADOW_DIMENSION, function (v, k) {\n      el.setAttribute(k, v);\n    });\n    this.el = el;\n    this.id = uniqueId('filter_');\n    this.el.id = this.id;\n    this.cfg = cfg;\n    this._parseShadow(cfg, el);\n    return this;\n  }\n  Shadow.prototype.match = function (type, cfg) {\n    if (this.type !== type) {\n      return false;\n    }\n    var flag = true;\n    var config = this.cfg;\n    each(Object.keys(config), function (attr) {\n      if (config[attr] !== cfg[attr]) {\n        flag = false;\n        return false;\n      }\n    });\n    return flag;\n  };\n  Shadow.prototype.update = function (name, value) {\n    var config = this.cfg;\n    config[ATTR_MAP[name]] = value;\n    this._parseShadow(config, this.el);\n    return this;\n  };\n  Shadow.prototype._parseShadow = function (config, el) {\n    var child = \"<feDropShadow\\n      dx=\\\"\" + (config.dx || 0) + \"\\\"\\n      dy=\\\"\" + (config.dy || 0) + \"\\\"\\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\n    el.innerHTML = child;\n  };\n  return Shadow;\n}();\nexport default Shadow;","map":{"version":3,"sources":["../../src/defs/shadow.ts"],"names":[],"mappings":"AAAA;;;AAGG;AAEH,SAAS,IAAI,EAAE,QAAQ,QAAQ,YAAY;AAC3C,SAAS,gBAAgB,QAAQ,aAAa;AAE9C,IAAM,QAAQ,GAAG;EACf,WAAW,EAAE,OAAO;EACpB,aAAa,EAAE,SAAS;EACxB,UAAU,EAAE,MAAM;EAClB,aAAa,EAAE,IAAI;EACnB,aAAa,EAAE;CAChB;AAED,IAAM,gBAAgB,GAAG;EACvB,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,KAAK,EAAE,MAAM;EACb,MAAM,EAAE;CACT;AAED,IAAA,MAAA,GAAA,aAAA,YAAA;EAQE,SAAA,MAAA,CAAY,GAAG,EAAA;IAPf,IAAA,CAAA,IAAI,GAAW,QAAQ;IAGvB,IAAA,CAAA,GAAG,GAEC,CAAA,CAAE;IAGJ,IAAI,CAAC,IAAI,GAAG,QAAQ;IACpB,IAAM,EAAE,GAAG,gBAAgB,CAAC,QAAQ,CAAqB;IACzD;IACA,IAAI,CAAC,gBAAgB,EAAE,UAAC,CAAC,EAAE,CAAC,EAAA;MAC1B,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC,CAAC;IACF,IAAI,CAAC,EAAE,GAAG,EAAE;IACZ,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC;IAC7B,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;IACpB,IAAI,CAAC,GAAG,GAAG,GAAG;IACd,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC;IAC1B,OAAO,IAAI;EACb;EAEA,MAAA,CAAA,SAAA,CAAA,KAAK,GAAL,UAAM,IAAI,EAAE,GAAG,EAAA;IACb,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;MACtB,OAAO,KAAK;IACb;IACD,IAAI,IAAI,GAAG,IAAI;IACf,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG;IACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,UAAC,IAAI,EAAA;MAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;QAC9B,IAAI,GAAG,KAAK;QACZ,OAAO,KAAK;MACb;IACH,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,IAAI,EAAE,KAAK,EAAA;IAChB,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG;IACvB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;IAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;IAClC,OAAO,IAAI;EACb,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,YAAY,GAAZ,UAAa,MAAM,EAAE,EAAE,EAAA;IACrB,IAAM,KAAK,GAAG,4BAAA,IACN,MAAM,CAAC,EAAE,IAAI,CAAC,CAAA,GAAA,iBAAA,IACd,MAAM,CAAC,EAAE,IAAI,CAAC,CAAA,GAAA,2BAAA,IACJ,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAA,GAAA,0BAAA,IACnC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAA,GAAA,4BAAA,IAClC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,CAAC,CAAA,GAAA,cACjD;IACL,EAAE,CAAC,SAAS,GAAG,KAAK;EACtB,CAAC;EACH,OAAA,MAAC;AAAD,CAAC,EAAA;AAED,eAAe,MAAM","sourceRoot":"","sourcesContent":["/**\n * @fileoverview shadow\n * @author dengfuping_develop@163.com\n */\nimport { each, uniqueId } from '@antv/util';\nimport { createSVGElement } from '../util/dom';\nvar ATTR_MAP = {\n    shadowColor: 'color',\n    shadowOpacity: 'opacity',\n    shadowBlur: 'blur',\n    shadowOffsetX: 'dx',\n    shadowOffsetY: 'dy',\n};\nvar SHADOW_DIMENSION = {\n    x: '-40%',\n    y: '-40%',\n    width: '200%',\n    height: '200%',\n};\nvar Shadow = /** @class */ (function () {\n    function Shadow(cfg) {\n        this.type = 'filter';\n        this.cfg = {};\n        this.type = 'filter';\n        var el = createSVGElement('filter');\n        // expand the filter region to fill in shadows\n        each(SHADOW_DIMENSION, function (v, k) {\n            el.setAttribute(k, v);\n        });\n        this.el = el;\n        this.id = uniqueId('filter_');\n        this.el.id = this.id;\n        this.cfg = cfg;\n        this._parseShadow(cfg, el);\n        return this;\n    }\n    Shadow.prototype.match = function (type, cfg) {\n        if (this.type !== type) {\n            return false;\n        }\n        var flag = true;\n        var config = this.cfg;\n        each(Object.keys(config), function (attr) {\n            if (config[attr] !== cfg[attr]) {\n                flag = false;\n                return false;\n            }\n        });\n        return flag;\n    };\n    Shadow.prototype.update = function (name, value) {\n        var config = this.cfg;\n        config[ATTR_MAP[name]] = value;\n        this._parseShadow(config, this.el);\n        return this;\n    };\n    Shadow.prototype._parseShadow = function (config, el) {\n        var child = \"<feDropShadow\\n      dx=\\\"\" + (config.dx || 0) + \"\\\"\\n      dy=\\\"\" + (config.dy || 0) + \"\\\"\\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\n        el.innerHTML = child;\n    };\n    return Shadow;\n}());\nexport default Shadow;\n//# sourceMappingURL=shadow.js.map"]},"metadata":{},"sourceType":"module"}