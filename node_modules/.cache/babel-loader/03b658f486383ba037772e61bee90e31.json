{"ast":null,"code":"/**\n * @fileoverview defs\n * @author dengfuping_develop@163.com\n */\nimport { uniqueId } from '@antv/util';\nimport Gradient from './gradient';\nimport Shadow from './shadow';\nimport Arrow from './arrow';\nimport Clip from './clip';\nimport Pattern from './pattern';\nimport { createSVGElement } from '../util/dom';\nvar Defs = /** @class */function () {\n  function Defs(canvas) {\n    var el = createSVGElement('defs');\n    var id = uniqueId('defs_');\n    el.id = id;\n    canvas.appendChild(el);\n    this.children = [];\n    this.defaultArrow = {};\n    this.el = el;\n    this.canvas = canvas;\n  }\n  Defs.prototype.find = function (type, attr) {\n    var children = this.children;\n    var result = null;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].match(type, attr)) {\n        result = children[i].id;\n        break;\n      }\n    }\n    return result;\n  };\n  Defs.prototype.findById = function (id) {\n    var children = this.children;\n    var flag = null;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].id === id) {\n        flag = children[i];\n        break;\n      }\n    }\n    return flag;\n  };\n  Defs.prototype.add = function (item) {\n    this.children.push(item);\n    item.canvas = this.canvas;\n    item.parent = this;\n  };\n  Defs.prototype.getDefaultArrow = function (attrs, name) {\n    var stroke = attrs.stroke || attrs.strokeStyle;\n    if (this.defaultArrow[stroke]) {\n      return this.defaultArrow[stroke].id;\n    }\n    var arrow = new Arrow(attrs, name);\n    this.defaultArrow[stroke] = arrow;\n    this.el.appendChild(arrow.el);\n    this.add(arrow);\n    return arrow.id;\n  };\n  Defs.prototype.addGradient = function (cfg) {\n    var gradient = new Gradient(cfg);\n    this.el.appendChild(gradient.el);\n    this.add(gradient);\n    return gradient.id;\n  };\n  Defs.prototype.addArrow = function (attrs, name) {\n    var arrow = new Arrow(attrs, name);\n    this.el.appendChild(arrow.el);\n    this.add(arrow);\n    return arrow.id;\n  };\n  Defs.prototype.addShadow = function (cfg) {\n    var shadow = new Shadow(cfg);\n    this.el.appendChild(shadow.el);\n    this.add(shadow);\n    return shadow.id;\n  };\n  Defs.prototype.addPattern = function (cfg) {\n    var pattern = new Pattern(cfg);\n    this.el.appendChild(pattern.el);\n    this.add(pattern);\n    return pattern.id;\n  };\n  Defs.prototype.addClip = function (cfg) {\n    var clip = new Clip(cfg);\n    this.el.appendChild(clip.el);\n    this.add(clip);\n    return clip.id;\n  };\n  return Defs;\n}();\nexport default Defs;","map":{"version":3,"sources":["../../src/defs/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @fileoverview defs\n * @author dengfuping_develop@163.com\n */\nimport { uniqueId } from '@antv/util';\nimport Gradient from './gradient';\nimport Shadow from './shadow';\nimport Arrow from './arrow';\nimport Clip from './clip';\nimport Pattern from './pattern';\nimport { createSVGElement } from '../util/dom';\nvar Defs = /** @class */ (function () {\n    function Defs(canvas) {\n        var el = createSVGElement('defs');\n        var id = uniqueId('defs_');\n        el.id = id;\n        canvas.appendChild(el);\n        this.children = [];\n        this.defaultArrow = {};\n        this.el = el;\n        this.canvas = canvas;\n    }\n    Defs.prototype.find = function (type, attr) {\n        var children = this.children;\n        var result = null;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].match(type, attr)) {\n                result = children[i].id;\n                break;\n            }\n        }\n        return result;\n    };\n    Defs.prototype.findById = function (id) {\n        var children = this.children;\n        var flag = null;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].id === id) {\n                flag = children[i];\n                break;\n            }\n        }\n        return flag;\n    };\n    Defs.prototype.add = function (item) {\n        this.children.push(item);\n        item.canvas = this.canvas;\n        item.parent = this;\n    };\n    Defs.prototype.getDefaultArrow = function (attrs, name) {\n        var stroke = attrs.stroke || attrs.strokeStyle;\n        if (this.defaultArrow[stroke]) {\n            return this.defaultArrow[stroke].id;\n        }\n        var arrow = new Arrow(attrs, name);\n        this.defaultArrow[stroke] = arrow;\n        this.el.appendChild(arrow.el);\n        this.add(arrow);\n        return arrow.id;\n    };\n    Defs.prototype.addGradient = function (cfg) {\n        var gradient = new Gradient(cfg);\n        this.el.appendChild(gradient.el);\n        this.add(gradient);\n        return gradient.id;\n    };\n    Defs.prototype.addArrow = function (attrs, name) {\n        var arrow = new Arrow(attrs, name);\n        this.el.appendChild(arrow.el);\n        this.add(arrow);\n        return arrow.id;\n    };\n    Defs.prototype.addShadow = function (cfg) {\n        var shadow = new Shadow(cfg);\n        this.el.appendChild(shadow.el);\n        this.add(shadow);\n        return shadow.id;\n    };\n    Defs.prototype.addPattern = function (cfg) {\n        var pattern = new Pattern(cfg);\n        this.el.appendChild(pattern.el);\n        this.add(pattern);\n        return pattern.id;\n    };\n    Defs.prototype.addClip = function (cfg) {\n        var clip = new Clip(cfg);\n        this.el.appendChild(clip.el);\n        this.add(clip);\n        return clip.id;\n    };\n    return Defs;\n}());\nexport default Defs;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}