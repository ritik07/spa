{"ast":null,"code":"/**\n * @fileoverview image\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each, isString } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Image = /** @class */function (_super) {\n  __extends(Image, _super);\n  function Image() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'image';\n    _this.canFill = false;\n    _this.canStroke = false;\n    return _this;\n  }\n  Image.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n  };\n  Image.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'img') {\n        _this._setImage(attrs.img);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  Image.prototype.setAttr = function (name, value) {\n    this.attrs[name] = value;\n    if (name === 'img') {\n      this._setImage(value);\n    }\n  };\n  Image.prototype._setImage = function (img) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    if (isString(img)) {\n      el.setAttribute('href', img);\n    } else if (img instanceof window.Image) {\n      if (!attrs.width) {\n        el.setAttribute('width', img.width);\n        this.attr('width', img.width);\n      }\n      if (!attrs.height) {\n        el.setAttribute('height', img.height);\n        this.attr('height', img.height);\n      }\n      el.setAttribute('href', img.src);\n    } else if (img instanceof HTMLElement && isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n      // @ts-ignore\n      el.setAttribute('href', img.toDataURL());\n    } else if (img instanceof ImageData) {\n      var canvas = document.createElement('canvas');\n      canvas.setAttribute('width', \"\" + img.width);\n      canvas.setAttribute('height', \"\" + img.height);\n      canvas.getContext('2d').putImageData(img, 0, 0);\n      if (!attrs.width) {\n        el.setAttribute('width', \"\" + img.width);\n        this.attr('width', img.width);\n      }\n      if (!attrs.height) {\n        el.setAttribute('height', \"\" + img.height);\n        this.attr('height', img.height);\n      }\n      el.setAttribute('href', canvas.toDataURL());\n    }\n  };\n  return Image;\n}(ShapeBase);\nexport default Image;","map":{"version":3,"sources":["../../src/shape/image.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @fileoverview image\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each, isString } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'image';\n        _this.canFill = false;\n        _this.canStroke = false;\n        return _this;\n    }\n    Image.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, width: 0, height: 0 });\n    };\n    Image.prototype.createPath = function (context, targetAttrs) {\n        var _this = this;\n        var attrs = this.attr();\n        var el = this.get('el');\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'img') {\n                _this._setImage(attrs.img);\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n    };\n    Image.prototype.setAttr = function (name, value) {\n        this.attrs[name] = value;\n        if (name === 'img') {\n            this._setImage(value);\n        }\n    };\n    Image.prototype._setImage = function (img) {\n        var attrs = this.attr();\n        var el = this.get('el');\n        if (isString(img)) {\n            el.setAttribute('href', img);\n        }\n        else if (img instanceof window.Image) {\n            if (!attrs.width) {\n                el.setAttribute('width', img.width);\n                this.attr('width', img.width);\n            }\n            if (!attrs.height) {\n                el.setAttribute('height', img.height);\n                this.attr('height', img.height);\n            }\n            el.setAttribute('href', img.src);\n        }\n        else if (img instanceof HTMLElement && isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n            // @ts-ignore\n            el.setAttribute('href', img.toDataURL());\n        }\n        else if (img instanceof ImageData) {\n            var canvas = document.createElement('canvas');\n            canvas.setAttribute('width', \"\" + img.width);\n            canvas.setAttribute('height', \"\" + img.height);\n            canvas.getContext('2d').putImageData(img, 0, 0);\n            if (!attrs.width) {\n                el.setAttribute('width', \"\" + img.width);\n                this.attr('width', img.width);\n            }\n            if (!attrs.height) {\n                el.setAttribute('height', \"\" + img.height);\n                this.attr('height', img.height);\n            }\n            el.setAttribute('href', canvas.toDataURL());\n        }\n    };\n    return Image;\n}(ShapeBase));\nexport default Image;\n//# sourceMappingURL=image.js.map"]},"metadata":{},"sourceType":"module"}