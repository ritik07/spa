{"ast":null,"code":"import { deepMix, get, map } from '@antv/util';\n/**\n * @ignore\n * get the grid theme by type, will mix the common cfg of axis\n * @param theme\n * @param direction\n * @returns theme object\n */\nexport function getGridThemeCfg(theme, direction) {\n  var axisTheme = deepMix({}, get(theme, ['components', 'axis', 'common']), get(theme, ['components', 'axis', direction]));\n  return get(axisTheme, ['grid'], {});\n}\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\nexport function getLineGridItems(coordinate, scale, dim, alignTick) {\n  var items = [];\n  var ticks = scale.getTicks();\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: ''\n    });\n  }\n  ticks.reduce(function (preTick, currentTick, currentIndex) {\n    var currentValue = currentTick.value;\n    if (alignTick) {\n      items.push({\n        points: [coordinate.convert(dim === 'y' ? {\n          x: 0,\n          y: currentValue\n        } : {\n          x: currentValue,\n          y: 0\n        }), coordinate.convert(dim === 'y' ? {\n          x: 1,\n          y: currentValue\n        } : {\n          x: currentValue,\n          y: 1\n        })]\n      });\n    } else {\n      if (currentIndex) {\n        var preValue = preTick.value;\n        var middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [coordinate.convert(dim === 'y' ? {\n            x: 0,\n            y: middleValue\n          } : {\n            x: middleValue,\n            y: 0\n          }), coordinate.convert(dim === 'y' ? {\n            x: 1,\n            y: middleValue\n          } : {\n            x: middleValue,\n            y: 1\n          })]\n        });\n      }\n    }\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\nexport function getCircleGridItems(coordinate, xScale, yScale, alignTick, dim) {\n  var count = xScale.values.length;\n  var items = [];\n  var ticks = yScale.getTicks();\n  ticks.reduce(function (preTick, currentTick) {\n    var preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n    var currentValue = currentTick.value;\n    var middleValue = (preValue + currentValue) / 2;\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [coordinate.convert({\n          x: alignTick ? currentValue : middleValue,\n          y: 0\n        }), coordinate.convert({\n          x: alignTick ? currentValue : middleValue,\n          y: 1\n        })]\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), function (__, idx) {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue\n          });\n        })\n      });\n    }\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\nexport function showGrid(axisTheme, axisOption) {\n  var userGrid = get(axisOption, 'grid');\n  if (userGrid === null) {\n    return false;\n  }\n  var themeGrid = get(axisTheme, 'grid');\n  return !(userGrid === undefined && themeGrid === null);\n}","map":{"version":3,"sources":["../../src/util/grid.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, get, map } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { Coordinate, Scale, Tick } from '../dependents';\n\n/**\n * @ignore\n * get the grid theme by type, will mix the common cfg of axis\n * @param theme\n * @param direction\n * @returns theme object\n */\nexport function getGridThemeCfg(theme: object, direction: DIRECTION | 'common'): object {\n  const axisTheme = deepMix(\n    {},\n    get(theme, ['components', 'axis', 'common']),\n    get(theme, ['components', 'axis', direction])\n  );\n  return get(axisTheme, ['grid'], {});\n}\n\n/**\n * @ignore\n * get axis grid items\n * @param coordinate\n * @param scale\n * @param dim\n * @return items\n */\nexport function getLineGridItems(coordinate: Coordinate, scale: Scale, dim: string, alignTick?: boolean) {\n  const items = [];\n  const ticks = scale.getTicks();\n  if (coordinate.isPolar) {\n    // 补全 ticks\n    ticks.push({\n      value: 1,\n      text: '',\n      tickValue: '',\n    });\n  }\n  ticks.reduce((preTick: Tick, currentTick: Tick, currentIndex) => {\n    const currentValue = currentTick.value;\n    if (alignTick) {\n      items.push({\n        points: [\n          coordinate.convert(dim === 'y' ? { x: 0, y: currentValue } : { x: currentValue, y: 0 }),\n          coordinate.convert(dim === 'y' ? { x: 1, y: currentValue } : { x: currentValue, y: 1 }),\n        ],\n      });\n    } else {\n      if (currentIndex) {\n        const preValue = preTick.value;\n        const middleValue = (preValue + currentValue) / 2;\n        items.push({\n          points: [\n            coordinate.convert(dim === 'y' ? { x: 0, y: middleValue } : { x: middleValue, y: 0 }),\n            coordinate.convert(dim === 'y' ? { x: 1, y: middleValue } : { x: middleValue, y: 1 }),\n          ],\n        });\n      }\n    }\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * get\n * @param coordinate\n * @param xScale\n * @param yScale\n * @param dim\n * @returns items\n */\nexport function getCircleGridItems(\n  coordinate: Coordinate,\n  xScale: Scale,\n  yScale: Scale,\n  alignTick: boolean,\n  dim: string\n) {\n  const count = xScale.values.length;\n  const items = [];\n  const ticks = yScale.getTicks();\n\n  ticks.reduce((preTick: Tick, currentTick: Tick) => {\n    const preValue = preTick ? preTick.value : currentTick.value; // 只有一项数据时取当前值\n    const currentValue = currentTick.value;\n    const middleValue = (preValue + currentValue) / 2;\n    if (dim === 'x') {\n      // 如果是 x 轴作为半径轴，那么只需要取圆弧收尾两个即可\n      items.push({\n        points: [\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 0,\n          }),\n          coordinate.convert({\n            x: alignTick ? currentValue : middleValue,\n            y: 1,\n          }),\n        ],\n      });\n    } else {\n      items.push({\n        points: map(Array(count + 1), (__: any, idx: number) => {\n          return coordinate.convert({\n            x: idx / count,\n            y: alignTick ? currentValue : middleValue,\n          });\n        }),\n      });\n    }\n\n    return currentTick;\n  }, ticks[0]);\n  return items;\n}\n\n/**\n * @ignore\n * show grid or not\n * @param axisTheme\n * @param axisOption\n */\nexport function showGrid(axisTheme: any, axisOption: any): boolean {\n  const userGrid = get(axisOption, 'grid');\n  if (userGrid === null) {\n    return false;\n  }\n\n  const themeGrid = get(axisTheme, 'grid');\n\n  return !(userGrid === undefined && themeGrid === null);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}