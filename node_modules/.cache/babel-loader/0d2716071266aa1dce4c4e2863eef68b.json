{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { DIRECTION } from '../../constant';\n/** @ignore */\nvar PaddingCal = /** @class */function () {\n  /**\n   * 初始的 padding 数据\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  function PaddingCal(top, right, bottom, left) {\n    if (top === void 0) {\n      top = 0;\n    }\n    if (right === void 0) {\n      right = 0;\n    }\n    if (bottom === void 0) {\n      bottom = 0;\n    }\n    if (left === void 0) {\n      left = 0;\n    }\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n  /**\n   * 使用静态方法创建一个\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  PaddingCal.instance = function (top, right, bottom, left) {\n    if (top === void 0) {\n      top = 0;\n    }\n    if (right === void 0) {\n      right = 0;\n    }\n    if (bottom === void 0) {\n      bottom = 0;\n    }\n    if (left === void 0) {\n      left = 0;\n    }\n    return new PaddingCal(top, right, bottom, left);\n  };\n  /**\n   * 取最大区间\n   * @param padding\n   */\n  PaddingCal.prototype.max = function (padding) {\n    var _a = __read(padding, 4),\n      top = _a[0],\n      right = _a[1],\n      bottom = _a[2],\n      left = _a[3];\n    this.top = Math.max(this.top, top);\n    this.right = Math.max(this.right, right);\n    this.bottom = Math.max(this.bottom, bottom);\n    this.left = Math.max(this.left, left);\n    return this;\n  };\n  /**\n   * 四周增加 padding\n   * @param padding\n   */\n  PaddingCal.prototype.shrink = function (padding) {\n    var _a = __read(padding, 4),\n      top = _a[0],\n      right = _a[1],\n      bottom = _a[2],\n      left = _a[3];\n    this.top += top;\n    this.right += right;\n    this.bottom += bottom;\n    this.left += left;\n    return this;\n  };\n  /**\n   * 在某一个方向增加 padding\n   * @param bbox\n   * @param direction\n   */\n  PaddingCal.prototype.inc = function (bbox, direction) {\n    var width = bbox.width,\n      height = bbox.height;\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        this.top += height;\n        break;\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        this.right += width;\n        break;\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        this.bottom += height;\n        break;\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        this.left += width;\n        break;\n      default:\n        break;\n    }\n    return this;\n  };\n  /**\n   * 获得最终的 padding\n   */\n  PaddingCal.prototype.getPadding = function () {\n    return [this.top, this.right, this.bottom, this.left];\n  };\n  /**\n   * clone 一个 padding cal\n   */\n  PaddingCal.prototype.clone = function () {\n    return new (PaddingCal.bind.apply(PaddingCal, __spreadArray([void 0], __read(this.getPadding()), false)))();\n  };\n  return PaddingCal;\n}();\nexport { PaddingCal };","map":{"version":3,"sources":["../../../src/chart/layout/padding-cal.ts"],"names":[],"mappings":"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","sourcesContent":["import { DIRECTION } from '../../constant';\nimport { BBox } from '../../dependents';\nimport { Padding } from '../../interface';\n\nexport type PaddingCalCtor = {\n  readonly instance: (top?: number, right?: number, bottom?: number, left?: number) => PaddingCal;\n};\n\n/** @ignore */\nexport class PaddingCal {\n  private top: number;\n  private right: number;\n  private bottom: number;\n  private left: number;\n\n  /**\n   * 使用静态方法创建一个\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  public static instance(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\n    return new PaddingCal(top, right, bottom, left);\n  }\n\n  /**\n   * 初始的 padding 数据\n   * @param top\n   * @param right\n   * @param bottom\n   * @param left\n   */\n  constructor(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n\n  /**\n   * 取最大区间\n   * @param padding\n   */\n  public max(padding: Padding): PaddingCal {\n    const [top, right, bottom, left] = padding;\n\n    this.top = Math.max(this.top, top);\n    this.right = Math.max(this.right, right);\n    this.bottom = Math.max(this.bottom, bottom);\n    this.left = Math.max(this.left, left);\n\n    return this;\n  }\n\n  /**\n   * 四周增加 padding\n   * @param padding\n   */\n  public shrink(padding: Padding): PaddingCal {\n    const [top, right, bottom, left] = padding;\n\n    this.top += top;\n    this.right += right;\n    this.bottom += bottom;\n    this.left += left;\n\n    return this;\n  }\n\n  /**\n   * 在某一个方向增加 padding\n   * @param bbox\n   * @param direction\n   */\n  public inc(bbox: BBox, direction: DIRECTION): PaddingCal {\n    const { width, height } = bbox;\n\n    switch (direction) {\n      case DIRECTION.TOP:\n      case DIRECTION.TOP_LEFT:\n      case DIRECTION.TOP_RIGHT:\n        this.top += height;\n        break;\n\n      case DIRECTION.RIGHT:\n      case DIRECTION.RIGHT_TOP:\n      case DIRECTION.RIGHT_BOTTOM:\n        this.right += width;\n        break;\n\n      case DIRECTION.BOTTOM:\n      case DIRECTION.BOTTOM_LEFT:\n      case DIRECTION.BOTTOM_RIGHT:\n        this.bottom += height;\n        break;\n\n      case DIRECTION.LEFT:\n      case DIRECTION.LEFT_TOP:\n      case DIRECTION.LEFT_BOTTOM:\n        this.left += width;\n        break;\n      default:\n        break;\n    }\n\n    return this;\n  }\n\n  /**\n   * 获得最终的 padding\n   */\n  public getPadding(): Padding {\n    return [this.top, this.right, this.bottom, this.left];\n  }\n\n  /**\n   * clone 一个 padding cal\n   */\n  public clone(): PaddingCal {\n    return new PaddingCal(...this.getPadding());\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}