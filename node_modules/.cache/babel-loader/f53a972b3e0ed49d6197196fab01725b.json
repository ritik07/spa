{"ast":null,"code":"import { __extends, __values } from \"tslib\";\nimport ListState from './list-state';\nvar STATUS_UNCHECKED = 'unchecked';\nvar ListFocus = /** @class */function (_super) {\n  __extends(ListFocus, _super);\n  function ListFocus() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ListFocus.prototype.toggle = function () {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n    var triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo === null || triggerInfo === void 0 ? void 0 : triggerInfo.item) {\n      var list_1 = triggerInfo.list,\n        clickedItem = triggerInfo.item;\n      var items = list_1.getItems();\n      var checkedItems = items.filter(function (t) {\n        return !list_1.hasState(t, STATUS_UNCHECKED);\n      });\n      var uncheckedItems = items.filter(function (t) {\n        return list_1.hasState(t, STATUS_UNCHECKED);\n      });\n      var checkedItem = checkedItems[0];\n      /**\n       * 1. 初始化，全部 checked。此时，点击 radio, clickItem 进入聚焦\n       * 2. 当前只选中一个\n       *    2.1 且选中 item 等于 clickItem，退出聚焦，全部重新选中\n       *    2.2 替换聚焦的 item\n       * 3. 其它，同 2.2\n       */\n      if (items.length === checkedItems.length) {\n        try {\n          for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n            var item = items_1_1.value;\n            list_1.setItemState(item, STATUS_UNCHECKED, item.id !== clickedItem.id);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      } else if (items.length - uncheckedItems.length === 1) {\n        if (checkedItem.id === clickedItem.id) {\n          try {\n            for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n              var item = items_2_1.value;\n              list_1.setItemState(item, STATUS_UNCHECKED, false);\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (items_2_1 && !items_2_1.done && (_b = items_2.return)) _b.call(items_2);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        } else {\n          try {\n            for (var items_3 = __values(items), items_3_1 = items_3.next(); !items_3_1.done; items_3_1 = items_3.next()) {\n              var item = items_3_1.value;\n              list_1.setItemState(item, STATUS_UNCHECKED, item.id !== clickedItem.id);\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (items_3_1 && !items_3_1.done && (_c = items_3.return)) _c.call(items_3);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n      } else {\n        try {\n          for (var items_4 = __values(items), items_4_1 = items_4.next(); !items_4_1.done; items_4_1 = items_4.next()) {\n            var item = items_4_1.value;\n            list_1.setItemState(item, STATUS_UNCHECKED, item.id !== clickedItem.id);\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (items_4_1 && !items_4_1.done && (_d = items_4.return)) _d.call(items_4);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    }\n  };\n  return ListFocus;\n}(ListState);\nexport default ListFocus;","map":{"version":3,"sources":["../../../../src/interaction/action/component/list-focus.ts"],"names":[],"mappings":"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","sourcesContent":["import ListState from './list-state';\n\nconst STATUS_UNCHECKED = 'unchecked';\n\nclass ListFocus extends ListState {\n  public toggle() {\n    const triggerInfo = this.getTriggerListInfo();\n    if (triggerInfo?.item) {\n      const { list, item: clickedItem } = triggerInfo;\n      const items = list.getItems();\n      const checkedItems = items.filter((t) => !list.hasState(t, STATUS_UNCHECKED));\n      const uncheckedItems = items.filter((t) => list.hasState(t, STATUS_UNCHECKED));\n      const checkedItem = checkedItems[0]\n      /**\n       * 1. 初始化，全部 checked。此时，点击 radio, clickItem 进入聚焦\n       * 2. 当前只选中一个\n       *    2.1 且选中 item 等于 clickItem，退出聚焦，全部重新选中\n       *    2.2 替换聚焦的 item\n       * 3. 其它，同 2.2\n       */\n      if (items.length === checkedItems.length) {\n        for (const item of items) list.setItemState(item, STATUS_UNCHECKED, item.id !== clickedItem.id);\n      } else if (items.length - uncheckedItems.length === 1) {\n        if (checkedItem.id === clickedItem.id) {\n          for (const item of items) list.setItemState(item, STATUS_UNCHECKED, false);\n        } else {\n          for (const item of items) list.setItemState(item, STATUS_UNCHECKED, item.id !== clickedItem.id);\n        }\n      } else {\n        for (const item of items) list.setItemState(item, STATUS_UNCHECKED, item.id !== clickedItem.id);\n      }\n    }\n  }\n}\n\nexport default ListFocus;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}