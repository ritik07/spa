{"ast":null,"code":"/**\n * @fileoverview 多边形\n * @author dxq613@gmail.com\n */\nimport { __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport inPolyline from '../util/in-stroke/polyline';\nimport isInPolygon from '../util/in-path/polygon';\nvar Polygon = /** @class */function (_super) {\n  __extends(Polygon, _super);\n  function Polygon() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Polygon.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    var points = this.attr().points;\n    var isHit = false;\n    if (isStroke) {\n      isHit = inPolyline(points, lineWidth, x, y, true);\n    }\n    if (!isHit && isFill) {\n      isHit = isInPolygon(points, x, y); // isPointInPath(shape, x, y);\n    }\n\n    return isHit;\n  };\n  Polygon.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var points = attrs.points;\n    if (points.length < 2) {\n      return;\n    }\n    context.beginPath();\n    for (var i = 0; i < points.length; i++) {\n      var point = points[i];\n      if (i === 0) {\n        context.moveTo(point[0], point[1]);\n      } else {\n        context.lineTo(point[0], point[1]);\n      }\n    }\n    context.closePath();\n  };\n  return Polygon;\n}(ShapeBase);\nexport default Polygon;","map":{"version":3,"sources":["../../src/shape/polygon.ts"],"names":[],"mappings":"AAAA;;;AAGG;;AAEH,OAAO,SAAS,MAAM,QAAQ;AAC9B,OAAO,UAAU,MAAM,4BAA4B;AACnD,OAAO,WAAW,MAAM,yBAAyB;AAEjD,IAAA,OAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAsB,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;EAAtB,SAAA,OAAA,GAAA;;EA8BA;EA7BE,OAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,UAAiB,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAA;IACxC,IAAA,MAAM,GAAK,IAAI,CAAC,IAAI,EAAE,CAAA,MAAhB;IACd,IAAI,KAAK,GAAG,KAAK;IACjB,IAAI,QAAQ,EAAE;MACZ,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAClD;IACD,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;MACpB,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC;;IACD,OAAO,KAAK;EACd,CAAC;EAED,OAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,OAAO,EAAA;IAChB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE;IACzB,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM;IAC3B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;MACrB;IACD;IACD,OAAO,CAAC,SAAS,EAAE;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACtC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;MACvB,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;OACnC,MAAM;QACL,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;MACnC;IACF;IACD,OAAO,CAAC,SAAS,EAAE;EACrB,CAAC;EACH,OAAA,OAAC;AAAD,CAAC,CA9BqB,SAAS,CAAA;AAgC/B,eAAe,OAAO","sourceRoot":"","sourcesContent":["/**\n * @fileoverview 多边形\n * @author dxq613@gmail.com\n */\nimport { __extends } from \"tslib\";\nimport ShapeBase from './base';\nimport inPolyline from '../util/in-stroke/polyline';\nimport isInPolygon from '../util/in-path/polygon';\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Polygon.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n        var points = this.attr().points;\n        var isHit = false;\n        if (isStroke) {\n            isHit = inPolyline(points, lineWidth, x, y, true);\n        }\n        if (!isHit && isFill) {\n            isHit = isInPolygon(points, x, y); // isPointInPath(shape, x, y);\n        }\n        return isHit;\n    };\n    Polygon.prototype.createPath = function (context) {\n        var attrs = this.attr();\n        var points = attrs.points;\n        if (points.length < 2) {\n            return;\n        }\n        context.beginPath();\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i];\n            if (i === 0) {\n                context.moveTo(point[0], point[1]);\n            }\n            else {\n                context.lineTo(point[0], point[1]);\n            }\n        }\n        context.closePath();\n    };\n    return Polygon;\n}(ShapeBase));\nexport default Polygon;\n//# sourceMappingURL=polygon.js.map"]},"metadata":{},"sourceType":"module"}