{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { each, isNil, isFunction, isObject } from '@antv/util';\nimport { vec2 } from '@antv/matrix-util';\nimport AxisBase from './base';\nimport * as OverlapUtil from './overlap';\nvar Circle = /** @class */function (_super) {\n  __extends(Circle, _super);\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Circle.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'circle',\n      locationType: 'circle',\n      center: null,\n      radius: null,\n      startAngle: -Math.PI / 2,\n      endAngle: Math.PI * 3 / 2\n    });\n  };\n  Circle.prototype.getLinePath = function () {\n    var center = this.get('center');\n    var x = center.x;\n    var y = center.y;\n    var rx = this.get('radius');\n    var ry = rx;\n    var startAngle = this.get('startAngle');\n    var endAngle = this.get('endAngle');\n    var path = [];\n    if (Math.abs(endAngle - startAngle) === Math.PI * 2) {\n      path = [['M', x, y - ry], ['A', rx, ry, 0, 1, 1, x, y + ry], ['A', rx, ry, 0, 1, 1, x, y - ry], ['Z']];\n    } else {\n      var startPoint = this.getCirclePoint(startAngle);\n      var endPoint = this.getCirclePoint(endAngle);\n      var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n      var sweep = startAngle > endAngle ? 0 : 1;\n      path = [['M', x, y], ['L', startPoint.x, startPoint.y], ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y], ['L', x, y]];\n    }\n    return path;\n  };\n  Circle.prototype.getTickPoint = function (tickValue) {\n    var startAngle = this.get('startAngle');\n    var endAngle = this.get('endAngle');\n    var angle = startAngle + (endAngle - startAngle) * tickValue;\n    return this.getCirclePoint(angle);\n  };\n  // 获取垂直于坐标轴的向量\n  Circle.prototype.getSideVector = function (offset, point) {\n    var center = this.get('center');\n    var vector = [point.x - center.x, point.y - center.y];\n    var factor = this.get('verticalFactor');\n    var vecLen = vec2.length(vector);\n    vec2.scale(vector, vector, factor * offset / vecLen);\n    return vector;\n  };\n  // 获取沿坐标轴方向的向量\n  Circle.prototype.getAxisVector = function (point) {\n    var center = this.get('center');\n    var vector = [point.x - center.x, point.y - center.y];\n    return [vector[1], -1 * vector[0]]; // 获取顺时针方向的向量\n  };\n  // 根据圆心和半径获取点\n  Circle.prototype.getCirclePoint = function (angle, radius) {\n    var center = this.get('center');\n    radius = radius || this.get('radius');\n    return {\n      x: center.x + Math.cos(angle) * radius,\n      y: center.y + Math.sin(angle) * radius\n    };\n  };\n  /**\n   * 是否可以执行某一 overlap\n   * @param name\n   */\n  Circle.prototype.canProcessOverlap = function (name) {\n    var labelCfg = this.get('label');\n    // 对 autoRotate，如果配置了旋转角度，直接进行固定角度旋转\n    if (name === 'autoRotate') {\n      return isNil(labelCfg.rotate);\n    }\n    // 默认所有 overlap 都可执行\n    return true;\n  };\n  Circle.prototype.processOverlap = function (labelGroup) {\n    var _this = this;\n    var labelCfg = this.get('label');\n    var titleCfg = this.get('title');\n    var verticalLimitLength = this.get('verticalLimitLength');\n    var labelOffset = labelCfg.offset;\n    var limitLength = verticalLimitLength;\n    var titleHeight = 0;\n    var titleSpacing = 0;\n    if (titleCfg) {\n      titleHeight = titleCfg.style.fontSize;\n      titleSpacing = titleCfg.spacing;\n    }\n    if (limitLength) {\n      limitLength = limitLength - labelOffset - titleSpacing - titleHeight;\n    }\n    var overlapOrder = this.get('overlapOrder');\n    each(overlapOrder, function (name) {\n      if (labelCfg[name] && _this.canProcessOverlap(name)) {\n        _this.autoProcessOverlap(name, labelCfg[name], labelGroup, limitLength);\n      }\n    });\n    if (titleCfg) {\n      if (isNil(titleCfg.offset)) {\n        // 调整 title 的 offset\n        var length_1 = labelGroup.getCanvasBBox().height;\n        // 如果用户没有设置 offset，则自动计算\n        titleCfg.offset = labelOffset + length_1 + titleSpacing + titleHeight / 2;\n      }\n    }\n  };\n  Circle.prototype.autoProcessOverlap = function (name, value, labelGroup, limitLength) {\n    var _this = this;\n    var hasAdjusted = false;\n    var util = OverlapUtil[name];\n    if (limitLength > 0) {\n      if (value === true) {\n        // true 形式的配置：使用 overlap 默认的的处理方法进行处理\n        hasAdjusted = util.getDefault()(false, labelGroup, limitLength);\n      } else if (isFunction(value)) {\n        // 回调函数形式的配置： 用户可以传入回调函数\n        hasAdjusted = value(false, labelGroup, limitLength);\n      } else if (isObject(value)) {\n        // object 形式的配置方式：包括 处理方法 type， 和可选参数配置 cfg\n        var overlapCfg = value;\n        if (util[overlapCfg.type]) {\n          hasAdjusted = util[overlapCfg.type](false, labelGroup, limitLength, overlapCfg.cfg);\n        }\n      } else if (util[value]) {\n        // 字符串类型的配置：按照名称执行 overlap 处理方法\n        hasAdjusted = util[value](false, labelGroup, limitLength);\n      }\n    }\n    if (name === 'autoRotate') {\n      // 文本旋转后，文本的对齐方式可能就不合适了\n      if (hasAdjusted) {\n        var labels = labelGroup.getChildren();\n        var verticalFactor_1 = this.get('verticalFactor');\n        each(labels, function (label) {\n          var textAlign = label.attr('textAlign');\n          if (textAlign === 'center') {\n            // 居中的文本需要调整旋转度\n            var newAlign = verticalFactor_1 > 0 ? 'end' : 'start';\n            label.attr('textAlign', newAlign);\n          }\n        });\n      }\n    } else if (name === 'autoHide') {\n      var children = labelGroup.getChildren().slice(0); // 复制数组，删除时不会出错\n      each(children, function (label) {\n        if (!label.get('visible')) {\n          if (_this.get('isRegister')) {\n            // 已经注册过了，则删除\n            _this.unregisterElement(label);\n          }\n          label.remove(); // 防止 label 数量太多，所以统一删除\n        }\n      });\n    }\n  };\n\n  return Circle;\n}(AxisBase);\nexport default Circle;","map":{"version":3,"sources":["../../src/axis/circle.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { each, isNil, isFunction, isObject } from '@antv/util';\nimport { vec2 } from '@antv/matrix-util';\nimport AxisBase from './base';\nimport * as OverlapUtil from './overlap';\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Circle.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'circle', locationType: 'circle', center: null, radius: null, startAngle: -Math.PI / 2, endAngle: (Math.PI * 3) / 2 });\n    };\n    Circle.prototype.getLinePath = function () {\n        var center = this.get('center');\n        var x = center.x;\n        var y = center.y;\n        var rx = this.get('radius');\n        var ry = rx;\n        var startAngle = this.get('startAngle');\n        var endAngle = this.get('endAngle');\n        var path = [];\n        if (Math.abs(endAngle - startAngle) === Math.PI * 2) {\n            path = [['M', x, y - ry], ['A', rx, ry, 0, 1, 1, x, y + ry], ['A', rx, ry, 0, 1, 1, x, y - ry], ['Z']];\n        }\n        else {\n            var startPoint = this.getCirclePoint(startAngle);\n            var endPoint = this.getCirclePoint(endAngle);\n            var large = Math.abs(endAngle - startAngle) > Math.PI ? 1 : 0;\n            var sweep = startAngle > endAngle ? 0 : 1;\n            path = [\n                ['M', x, y],\n                ['L', startPoint.x, startPoint.y],\n                ['A', rx, ry, 0, large, sweep, endPoint.x, endPoint.y],\n                ['L', x, y],\n            ];\n        }\n        return path;\n    };\n    Circle.prototype.getTickPoint = function (tickValue) {\n        var startAngle = this.get('startAngle');\n        var endAngle = this.get('endAngle');\n        var angle = startAngle + (endAngle - startAngle) * tickValue;\n        return this.getCirclePoint(angle);\n    };\n    // 获取垂直于坐标轴的向量\n    Circle.prototype.getSideVector = function (offset, point) {\n        var center = this.get('center');\n        var vector = [point.x - center.x, point.y - center.y];\n        var factor = this.get('verticalFactor');\n        var vecLen = vec2.length(vector);\n        vec2.scale(vector, vector, (factor * offset) / vecLen);\n        return vector;\n    };\n    // 获取沿坐标轴方向的向量\n    Circle.prototype.getAxisVector = function (point) {\n        var center = this.get('center');\n        var vector = [point.x - center.x, point.y - center.y];\n        return [vector[1], -1 * vector[0]]; // 获取顺时针方向的向量\n    };\n    // 根据圆心和半径获取点\n    Circle.prototype.getCirclePoint = function (angle, radius) {\n        var center = this.get('center');\n        radius = radius || this.get('radius');\n        return {\n            x: center.x + Math.cos(angle) * radius,\n            y: center.y + Math.sin(angle) * radius,\n        };\n    };\n    /**\n     * 是否可以执行某一 overlap\n     * @param name\n     */\n    Circle.prototype.canProcessOverlap = function (name) {\n        var labelCfg = this.get('label');\n        // 对 autoRotate，如果配置了旋转角度，直接进行固定角度旋转\n        if (name === 'autoRotate') {\n            return isNil(labelCfg.rotate);\n        }\n        // 默认所有 overlap 都可执行\n        return true;\n    };\n    Circle.prototype.processOverlap = function (labelGroup) {\n        var _this = this;\n        var labelCfg = this.get('label');\n        var titleCfg = this.get('title');\n        var verticalLimitLength = this.get('verticalLimitLength');\n        var labelOffset = labelCfg.offset;\n        var limitLength = verticalLimitLength;\n        var titleHeight = 0;\n        var titleSpacing = 0;\n        if (titleCfg) {\n            titleHeight = titleCfg.style.fontSize;\n            titleSpacing = titleCfg.spacing;\n        }\n        if (limitLength) {\n            limitLength = limitLength - labelOffset - titleSpacing - titleHeight;\n        }\n        var overlapOrder = this.get('overlapOrder');\n        each(overlapOrder, function (name) {\n            if (labelCfg[name] && _this.canProcessOverlap(name)) {\n                _this.autoProcessOverlap(name, labelCfg[name], labelGroup, limitLength);\n            }\n        });\n        if (titleCfg) {\n            if (isNil(titleCfg.offset)) {\n                // 调整 title 的 offset\n                var length_1 = labelGroup.getCanvasBBox().height;\n                // 如果用户没有设置 offset，则自动计算\n                titleCfg.offset = labelOffset + length_1 + titleSpacing + titleHeight / 2;\n            }\n        }\n    };\n    Circle.prototype.autoProcessOverlap = function (name, value, labelGroup, limitLength) {\n        var _this = this;\n        var hasAdjusted = false;\n        var util = OverlapUtil[name];\n        if (limitLength > 0) {\n            if (value === true) {\n                // true 形式的配置：使用 overlap 默认的的处理方法进行处理\n                hasAdjusted = util.getDefault()(false, labelGroup, limitLength);\n            }\n            else if (isFunction(value)) {\n                // 回调函数形式的配置： 用户可以传入回调函数\n                hasAdjusted = value(false, labelGroup, limitLength);\n            }\n            else if (isObject(value)) {\n                // object 形式的配置方式：包括 处理方法 type， 和可选参数配置 cfg\n                var overlapCfg = value;\n                if (util[overlapCfg.type]) {\n                    hasAdjusted = util[overlapCfg.type](false, labelGroup, limitLength, overlapCfg.cfg);\n                }\n            }\n            else if (util[value]) {\n                // 字符串类型的配置：按照名称执行 overlap 处理方法\n                hasAdjusted = util[value](false, labelGroup, limitLength);\n            }\n        }\n        if (name === 'autoRotate') {\n            // 文本旋转后，文本的对齐方式可能就不合适了\n            if (hasAdjusted) {\n                var labels = labelGroup.getChildren();\n                var verticalFactor_1 = this.get('verticalFactor');\n                each(labels, function (label) {\n                    var textAlign = label.attr('textAlign');\n                    if (textAlign === 'center') {\n                        // 居中的文本需要调整旋转度\n                        var newAlign = verticalFactor_1 > 0 ? 'end' : 'start';\n                        label.attr('textAlign', newAlign);\n                    }\n                });\n            }\n        }\n        else if (name === 'autoHide') {\n            var children = labelGroup.getChildren().slice(0); // 复制数组，删除时不会出错\n            each(children, function (label) {\n                if (!label.get('visible')) {\n                    if (_this.get('isRegister')) {\n                        // 已经注册过了，则删除\n                        _this.unregisterElement(label);\n                    }\n                    label.remove(); // 防止 label 数量太多，所以统一删除\n                }\n            });\n        }\n    };\n    return Circle;\n}(AxisBase));\nexport default Circle;\n//# sourceMappingURL=circle.js.map"]},"metadata":{},"sourceType":"module"}