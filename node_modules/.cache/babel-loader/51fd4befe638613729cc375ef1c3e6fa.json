{"ast":null,"code":"import { __assign, __extends, __read, __rest, __spreadArray } from \"tslib\";\nimport { Controller } from './base';\nimport { Scrollbar as ScrollbarComponent } from '../../dependents';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\nvar DEFAULT_PADDING = 0;\nvar DEFAULT_SIZE = 8;\nvar DEFAULT_CATEGORY_SIZE = 32;\nvar MIN_THUMB_LENGTH = 20;\nvar Scrollbar = /** @class */function (_super) {\n  __extends(Scrollbar, _super);\n  function Scrollbar(view) {\n    var _this = _super.call(this, view) || this;\n    _this.onChangeFn = noop;\n    _this.resetMeasure = function () {\n      _this.clear();\n    };\n    _this.onValueChange = function (_a) {\n      var ratio = _a.ratio;\n      var animate = _this.getValidScrollbarCfg().animate;\n      _this.ratio = clamp(ratio, 0, 1);\n      var originalAnimate = _this.view.getOptions().animate;\n      if (!animate) {\n        _this.view.animate(false);\n      }\n      _this.changeViewData(_this.getScrollRange(), true);\n      _this.view.animate(originalAnimate);\n    };\n    _this.container = _this.view.getLayer(LAYER.FORE).addGroup();\n    _this.onChangeFn = throttle(_this.onValueChange, 20, {\n      leading: true\n    });\n    _this.trackLen = 0;\n    _this.thumbLen = 0;\n    _this.ratio = 0;\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, _this.resetMeasure);\n    _this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, _this.resetMeasure);\n    return _this;\n  }\n  Object.defineProperty(Scrollbar.prototype, \"name\", {\n    get: function () {\n      return 'scrollbar';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Scrollbar.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  };\n  Scrollbar.prototype.init = function () {};\n  /**\n   * 渲染\n   */\n  Scrollbar.prototype.render = function () {\n    this.option = this.view.getOptions().scrollbar;\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  };\n  /**\n   * 布局\n   */\n  Scrollbar.prototype.layout = function () {\n    var _this = this;\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(function () {\n        if (!_this.view.destroyed) {\n          _this.changeViewData(_this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      var width = this.view.coordinateBBox.width;\n      var padding = this.scrollbar.component.get('padding');\n      var bboxObject = this.scrollbar.component.getLayoutBBox();\n      var bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(padding);\n      var cfg = this.getScrollbarComponentCfg();\n      var x = void 0;\n      var y = void 0;\n      if (cfg.isHorizontal) {\n        var _a = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM), 2),\n          x1 = _a[0],\n          y1 = _a[1];\n        var _b = __read(directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM), 2),\n          x2 = _b[0],\n          y2 = _b[1];\n        x = x2;\n        y = y1;\n      } else {\n        var _c = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n          x1 = _c[0],\n          y1 = _c[1];\n        var _d = __read(directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT), 2),\n          x2 = _d[0],\n          y2 = _d[1];\n        x = x2;\n        y = y1;\n      }\n      x += padding[3];\n      y += padding[0];\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n        }));\n      } else {\n        this.scrollbar.component.update(__assign(__assign({}, cfg), {\n          x: x,\n          y: y\n        }));\n      }\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  };\n  /**\n   * 更新\n   */\n  Scrollbar.prototype.update = function () {\n    // 逻辑和 render 保持一致\n    this.render();\n  };\n  Scrollbar.prototype.getComponents = function () {\n    return this.scrollbar ? [this.scrollbar] : [];\n  };\n  Scrollbar.prototype.clear = function () {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  };\n  /** 设置滚动条位置  */\n  Scrollbar.prototype.setValue = function (ratio) {\n    this.onValueChange({\n      ratio: ratio\n    });\n  };\n  /** 获得滚动条位置  */\n  Scrollbar.prototype.getValue = function () {\n    return this.ratio;\n  };\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  Scrollbar.prototype.getThemeOptions = function () {\n    var theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  };\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  Scrollbar.prototype.getScrollbarTheme = function (style) {\n    var theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    var _a = style || {},\n      thumbHighlightColor = _a.thumbHighlightColor,\n      restStyles = __rest(_a, [\"thumbHighlightColor\"]);\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), {\n        thumbColor: thumbHighlightColor\n      })\n    };\n  };\n  Scrollbar.prototype.measureScrollbar = function () {\n    var xScale = this.view.getXScale();\n    var yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    var _a = this.getScrollbarComponentCfg(),\n      trackLen = _a.trackLen,\n      thumbLen = _a.thumbLen;\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || []\n    };\n    this.yScalesCfg = yScales;\n  };\n  Scrollbar.prototype.getScrollRange = function () {\n    var startIdx = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    var endIdx = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  };\n  Scrollbar.prototype.changeViewData = function (_a, render) {\n    var _this = this;\n    var _b = __read(_a, 2),\n      startIdx = _b[0],\n      endIdx = _b[1];\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var values = valuesOfKey(this.data, this.xScaleCfg.field);\n    // 如果是 xScale 数值类型，则进行排序\n    var xScaleValues = this.view.getXScale().isLinear ? values.sort(function (a, b) {\n      return Number(a) - Number(b);\n    }) : values;\n    var xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach(function (cfg) {\n      _this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type,\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, function (val) {\n      var idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  };\n  Scrollbar.prototype.createScrollbar = function () {\n    var type = this.getValidScrollbarCfg().type;\n    var isHorizontal = type !== 'vertical';\n    var component = new ScrollbarComponent(__assign(__assign({\n      container: this.container\n    }, this.getScrollbarComponentCfg()), {\n      x: 0,\n      y: 0\n    }));\n    component.init();\n    return {\n      component: component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR\n    };\n  };\n  Scrollbar.prototype.updateScrollbar = function () {\n    var config = this.getScrollbarComponentCfg();\n    var realConfig = this.trackLen ? __assign(__assign({}, config), {\n      trackLen: this.trackLen,\n      thumbLen: this.thumbLen,\n      thumbOffset: (this.trackLen - this.thumbLen) * this.ratio\n    }) : __assign({}, config);\n    this.scrollbar.component.update(realConfig);\n    return this.scrollbar;\n  };\n  Scrollbar.prototype.getStep = function () {\n    if (this.step) {\n      return this.step;\n    }\n    var coordinateBBox = this.view.coordinateBBox;\n    var _a = this.getValidScrollbarCfg(),\n      type = _a.type,\n      categorySize = _a.categorySize;\n    var isHorizontal = type !== 'vertical';\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  };\n  Scrollbar.prototype.getCnt = function () {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    var xScale = this.view.getXScale();\n    var data = this.getScrollbarData();\n    var values = valuesOfKey(data, xScale.field);\n    return size(values);\n  };\n  Scrollbar.prototype.getScrollbarComponentCfg = function () {\n    var _a = this.view,\n      coordinateBBox = _a.coordinateBBox,\n      viewBBox = _a.viewBBox;\n    var _b = this.getValidScrollbarCfg(),\n      type = _b.type,\n      padding = _b.padding,\n      width = _b.width,\n      height = _b.height,\n      style = _b.style;\n    var isHorizontal = type !== 'vertical';\n    var _c = __read(padding, 4),\n      paddingTop = _c[0],\n      paddingRight = _c[1],\n      paddingBottom = _c[2],\n      paddingLeft = _c[3];\n    var position = isHorizontal ? {\n      x: coordinateBBox.minX + paddingLeft,\n      y: viewBBox.maxY - height - paddingBottom\n    } : {\n      x: viewBBox.maxX - width - paddingRight,\n      y: coordinateBBox.minY + paddingTop\n    };\n    var step = this.getStep();\n    var cnt = this.getCnt();\n    var trackLen = isHorizontal ? coordinateBBox.width - paddingLeft - paddingRight : coordinateBBox.height - paddingTop - paddingBottom;\n    var thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n    return __assign(__assign({}, this.getThemeOptions()), {\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal: isHorizontal,\n      trackLen: trackLen,\n      thumbLen: thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style)\n    });\n  };\n  /**\n   * 填充一些默认的配置项目\n   */\n  Scrollbar.prototype.getValidScrollbarCfg = function () {\n    var cfg = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {}\n    };\n    if (isObject(this.option)) {\n      cfg = __assign(__assign({}, cfg), this.option);\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding = cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n    return cfg;\n  };\n  /**\n   * 获取数据\n   */\n  Scrollbar.prototype.getScrollbarData = function () {\n    var coordinate = this.view.getCoordinate();\n    var cfg = this.getValidScrollbarCfg();\n    var data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = __spreadArray([], __read(data), false).reverse();\n    }\n    return data;\n  };\n  return Scrollbar;\n}(Controller);\nexport default Scrollbar;","map":{"version":3,"sources":["../../../src/chart/controller/scrollbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { Controller } from './base';\nimport { IGroup, Scrollbar as ScrollbarComponent, Scale } from '../../dependents';\nimport { ScrollbarOption, ComponentOption, ScrollbarCfg, Data, ScaleOption, Padding } from '../../interface';\nimport View from '../view';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\n\nconst DEFAULT_PADDING: number = 0;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\n\nexport default class Scrollbar extends Controller<ScrollbarOption> {\n  private scrollbar: ComponentOption;\n  private container: IGroup;\n\n  private trackLen: number;\n  private thumbLen: number;\n  private cnt: number;\n  private step: number;\n  private ratio: number;\n  private data: Data;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'scrollbar';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  public init() { }\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(() => {\n        if (!this.view.destroyed) {\n          this.changeViewData(this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      const width = this.view.coordinateBBox.width;\n      const padding: Padding = this.scrollbar.component.get('padding') as Padding;\n      const bboxObject = this.scrollbar.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const cfg = this.getScrollbarComponentCfg();\n\n      let x: number;\n      let y: number;\n\n      if (cfg.isHorizontal) {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n        const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n        x = x2;\n        y = y1;\n      } else {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        const [x2, y2] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0];\n\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        });\n      } else {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n        });\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  public getComponents() {\n    return this.scrollbar ? [this.scrollbar] : [];\n  }\n\n  public clear() {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  }\n\n  /** 设置滚动条位置  */\n  public setValue(ratio: number) {\n    this.onValueChange({ ratio });\n  }\n\n  /** 获得滚动条位置  */\n  public getValue() {\n    return this.ratio;\n  }\n\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  }\n\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  private getScrollbarTheme(style?: ScrollbarCfg['style']) {\n    const theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    const { thumbHighlightColor, ...restStyles } = style || {};\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), { thumbColor: thumbHighlightColor }),\n    };\n  }\n\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  private onValueChange = ({ ratio }: { ratio: number }) => {\n    const { animate } = this.getValidScrollbarCfg();\n    this.ratio = clamp(ratio, 0, 1);\n    const originalAnimate = this.view.getOptions().animate;\n    if (!animate) {\n      this.view.animate(false);\n    }\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(originalAnimate);\n  };\n\n  private measureScrollbar(): void {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    const { trackLen, thumbLen } = this.getScrollbarComponentCfg();\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || [],\n    };\n    this.yScalesCfg = yScales;\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const values = valuesOfKey(this.data, this.xScaleCfg.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    const xScaleValues = this.view.getXScale().isLinear ? values.sort((a, b) => Number(a) - Number(b)) : values;\n\n    const xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach((cfg) => {\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type as ScaleOption['type'],\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, (val) => {\n      const idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  }\n\n  private createScrollbar(): ComponentOption {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const component = new ScrollbarComponent({\n      container: this.container,\n      ...this.getScrollbarComponentCfg(),\n      x: 0,\n      y: 0,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR,\n    };\n  }\n\n  private updateScrollbar(): ComponentOption {\n    const config = this.getScrollbarComponentCfg();\n    const realConfig = this.trackLen\n      ? {\n        ...config,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n      }\n      : { ...config };\n    this.scrollbar.component.update(realConfig);\n\n    return this.scrollbar;\n  }\n\n  private getStep() {\n    if (this.step) {\n      return this.step;\n    }\n    const { coordinateBBox } = this.view;\n    const { type, categorySize } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  }\n\n  private getCnt() {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    const xScale = this.view.getXScale();\n    const data = this.getScrollbarData();\n    const values = valuesOfKey(data, xScale.field);\n    return size(values);\n  }\n\n  private getScrollbarComponentCfg() {\n    const { coordinateBBox, viewBBox } = this.view;\n    const { type, padding, width, height, style } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const position = isHorizontal\n      ? {\n        x: coordinateBBox.minX + paddingLeft,\n        y: viewBBox.maxY - height - paddingBottom,\n      }\n      : {\n        x: viewBBox.maxX - width - paddingRight,\n        y: coordinateBBox.minY + paddingTop,\n      };\n    const step = this.getStep();\n    const cnt = this.getCnt();\n    const trackLen = isHorizontal\n      ? coordinateBBox.width - paddingLeft - paddingRight\n      : coordinateBBox.height - paddingTop - paddingBottom;\n    const thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n\n    return {\n      ...this.getThemeOptions(),\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal,\n      trackLen,\n      thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style),\n    };\n  }\n\n  /**\n   * 填充一些默认的配置项目\n   */\n  private getValidScrollbarCfg(): Required<ScrollbarCfg> {\n    let cfg: Required<ScrollbarCfg> = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {},\n    };\n    if (isObject(this.option)) {\n      cfg = { ...cfg, ...this.option };\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding =\n        cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  }\n\n  /**\n   * 获取数据\n   */\n  private getScrollbarData(): Data {\n    const coordinate = this.view.getCoordinate();\n    const cfg = this.getValidScrollbarCfg();\n    let data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = [...data].reverse();\n    }\n\n    return data;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}