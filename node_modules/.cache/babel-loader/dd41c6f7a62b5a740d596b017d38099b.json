{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clamp, deepMix, each, get, isArray, isNil, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { Trend } from '../trend/trend';\nimport { DEFAULT_HANDLER_STYLE, Handler } from './handler';\nimport { BACKGROUND_STYLE, DEFAULT_HANDLER_WIDTH, FOREGROUND_STYLE, HANDLER_STYLE, SLIDER_CHANGE, TEXT_STYLE } from './constant';\nvar Slider = /** @class */function (_super) {\n  __extends(Slider, _super);\n  function Slider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.onMouseDown = function (target) {\n      return function (e) {\n        _this.currentTarget = target;\n        // 取出原生事件\n        var event = e.originalEvent;\n        // 2. 存储当前点击位置\n        event.stopPropagation();\n        event.preventDefault();\n        // 兼容移动端获取数据\n        _this.prevX = get(event, 'touches.0.pageX', event.pageX);\n        _this.prevY = get(event, 'touches.0.pageY', event.pageY);\n        // 3. 开始滑动的时候，绑定 move 和 up 事件\n        var containerDOM = _this.getContainerDOM();\n        containerDOM.addEventListener('mousemove', _this.onMouseMove);\n        containerDOM.addEventListener('mouseup', _this.onMouseUp);\n        containerDOM.addEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.addEventListener('touchmove', _this.onMouseMove);\n        containerDOM.addEventListener('touchend', _this.onMouseUp);\n        containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n      };\n    };\n    _this.onMouseMove = function (event) {\n      var width = _this.cfg.width;\n      var originValue = [_this.get('start'), _this.get('end')];\n      // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n      event.stopPropagation();\n      event.preventDefault();\n      var x = get(event, 'touches.0.pageX', event.pageX);\n      var y = get(event, 'touches.0.pageY', event.pageY);\n      // 横向的 slider 只处理 x\n      var offsetX = x - _this.prevX;\n      var offsetXRange = _this.adjustOffsetRange(offsetX / width);\n      // 更新 start end range 范围\n      _this.updateStartEnd(offsetXRange);\n      // 更新 ui\n      _this.updateUI(_this.getElementByLocalId('foreground'), _this.getElementByLocalId('minText'), _this.getElementByLocalId('maxText'));\n      _this.prevX = x;\n      _this.prevY = y;\n      _this.draw();\n      // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n      _this.emit(SLIDER_CHANGE, [_this.get('start'), _this.get('end')].sort());\n      _this.delegateEmit('valuechanged', {\n        originValue: originValue,\n        value: [_this.get('start'), _this.get('end')]\n      });\n    };\n    _this.onMouseUp = function () {\n      // 结束之后，取消绑定的事件\n      if (_this.currentTarget) {\n        _this.currentTarget = undefined;\n      }\n      var containerDOM = _this.getContainerDOM();\n      if (containerDOM) {\n        containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n        containerDOM.removeEventListener('mouseup', _this.onMouseUp);\n        // 防止滑动到 canvas 外部之后，状态丢失\n        containerDOM.removeEventListener('mouseleave', _this.onMouseUp);\n        // 移动端事件\n        containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n        containerDOM.removeEventListener('touchend', _this.onMouseUp);\n        containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n      }\n    };\n    return _this;\n  }\n  Slider.prototype.setRange = function (min, max) {\n    this.set('minLimit', min);\n    this.set('maxLimit', max);\n    var oldStart = this.get('start');\n    var oldEnd = this.get('end');\n    var newStart = clamp(oldStart, min, max);\n    var newEnd = clamp(oldEnd, min, max);\n    if (!this.get('isInit') && (oldStart !== newStart || oldEnd !== newEnd)) {\n      this.setValue([newStart, newEnd]);\n    }\n  };\n  Slider.prototype.getRange = function () {\n    return {\n      min: this.get('minLimit') || 0,\n      max: this.get('maxLimit') || 1\n    };\n  };\n  Slider.prototype.setValue = function (value) {\n    var range = this.getRange();\n    if (isArray(value) && value.length === 2) {\n      var originValue = [this.get('start'), this.get('end')];\n      this.update({\n        start: clamp(value[0], range.min, range.max),\n        end: clamp(value[1], range.min, range.max)\n      });\n      if (!this.get('updateAutoRender')) {\n        this.render();\n      }\n      this.delegateEmit('valuechanged', {\n        originValue: originValue,\n        value: value\n      });\n    }\n  };\n  Slider.prototype.getValue = function () {\n    return [this.get('start'), this.get('end')];\n  };\n  Slider.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'slider',\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 16,\n      backgroundStyle: {},\n      foregroundStyle: {},\n      handlerStyle: {},\n      textStyle: {},\n      defaultCfg: {\n        backgroundStyle: BACKGROUND_STYLE,\n        foregroundStyle: FOREGROUND_STYLE,\n        handlerStyle: HANDLER_STYLE,\n        textStyle: TEXT_STYLE\n      }\n    });\n  };\n  Slider.prototype.update = function (cfg) {\n    var start = cfg.start,\n      end = cfg.end;\n    var validCfg = __assign({}, cfg);\n    if (!isNil(start)) {\n      validCfg.start = clamp(start, 0, 1);\n    }\n    if (!isNil(end)) {\n      validCfg.end = clamp(end, 0, 1);\n    }\n    _super.prototype.update.call(this, validCfg);\n    this.minHandler = this.getChildComponentById(this.getElementId('minHandler'));\n    this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'));\n    this.trend = this.getChildComponentById(this.getElementId('trend'));\n  };\n  Slider.prototype.init = function () {\n    this.set('start', clamp(this.get('start'), 0, 1));\n    this.set('end', clamp(this.get('end'), 0, 1));\n    _super.prototype.init.call(this);\n  };\n  Slider.prototype.render = function () {\n    _super.prototype.render.call(this);\n    this.updateUI(this.getElementByLocalId('foreground'), this.getElementByLocalId('minText'), this.getElementByLocalId('maxText'));\n  };\n  Slider.prototype.renderInner = function (group) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end,\n      width = _a.width,\n      height = _a.height,\n      _b = _a.trendCfg,\n      trendCfg = _b === void 0 ? {} : _b,\n      minText = _a.minText,\n      maxText = _a.maxText,\n      _c = _a.backgroundStyle,\n      backgroundStyle = _c === void 0 ? {} : _c,\n      _d = _a.foregroundStyle,\n      foregroundStyle = _d === void 0 ? {} : _d,\n      _e = _a.textStyle,\n      textStyle = _e === void 0 ? {} : _e;\n    var handlerStyle = deepMix({}, DEFAULT_HANDLER_STYLE, this.cfg.handlerStyle);\n    var min = start * width;\n    var max = end * width;\n    // 趋势图数据\n    if (size(get(trendCfg, 'data'))) {\n      this.trend = this.addComponent(group, __assign({\n        component: Trend,\n        id: this.getElementId('trend'),\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, trendCfg));\n    }\n    // 1. 背景\n    this.addShape(group, {\n      id: this.getElementId('background'),\n      type: 'rect',\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, backgroundStyle)\n    });\n    // 2. 左右文字\n    var minTextShape = this.addShape(group, {\n      id: this.getElementId('minText'),\n      type: 'text',\n      attrs: __assign({\n        // x: 0,\n        y: height / 2,\n        textAlign: 'right',\n        text: minText,\n        silent: false\n      }, textStyle)\n    });\n    var maxTextShape = this.addShape(group, {\n      id: this.getElementId('maxText'),\n      type: 'text',\n      attrs: __assign({\n        // x: 0,\n        y: height / 2,\n        textAlign: 'left',\n        text: maxText,\n        silent: false\n      }, textStyle)\n    });\n    // 3. 前景 选中背景框\n    var foregroundShape = this.addShape(group, {\n      id: this.getElementId('foreground'),\n      name: 'foreground',\n      type: 'rect',\n      attrs: __assign({\n        // x: 0,\n        y: 0,\n        // width: 0,\n        height: height\n      }, foregroundStyle)\n    });\n    // 滑块相关的大小信息\n    var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var handlerHeight = get(handlerStyle, 'height', 24);\n    // 4. 左右滑块\n    this.minHandler = this.addComponent(group, {\n      component: Handler,\n      id: this.getElementId('minHandler'),\n      name: 'handler-min',\n      x: 0,\n      y: (height - handlerHeight) / 2,\n      width: handlerWidth,\n      height: handlerHeight,\n      cursor: 'ew-resize',\n      style: handlerStyle\n    });\n    this.maxHandler = this.addComponent(group, {\n      component: Handler,\n      id: this.getElementId('maxHandler'),\n      name: 'handler-max',\n      x: 0,\n      y: (height - handlerHeight) / 2,\n      width: handlerWidth,\n      height: handlerHeight,\n      cursor: 'ew-resize',\n      style: handlerStyle\n    });\n  };\n  Slider.prototype.applyOffset = function () {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x'),\n      y: this.get('y')\n    });\n  };\n  Slider.prototype.initEvent = function () {\n    this.bindEvents();\n  };\n  Slider.prototype.updateUI = function (foregroundShape, minTextShape, maxTextShape) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end,\n      width = _a.width,\n      minText = _a.minText,\n      maxText = _a.maxText,\n      handlerStyle = _a.handlerStyle,\n      height = _a.height;\n    var min = start * width;\n    var max = end * width;\n    if (this.trend) {\n      this.trend.update({\n        width: width,\n        height: height\n      });\n      if (!this.get('updateAutoRender')) {\n        this.trend.render();\n      }\n    }\n    // 1. foreground\n    foregroundShape.attr('x', min);\n    foregroundShape.attr('width', max - min);\n    // 滑块相关的大小信息\n    var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    // 设置文本\n    minTextShape.attr('text', minText);\n    maxTextShape.attr('text', maxText);\n    var _b = this._dodgeText([min, max], minTextShape, maxTextShape),\n      minAttrs = _b[0],\n      maxAttrs = _b[1];\n    // 2. 左侧滑块和文字位置\n    if (this.minHandler) {\n      this.minHandler.update({\n        x: min - handlerWidth / 2\n      });\n      if (!this.get('updateAutoRender')) {\n        this.minHandler.render();\n      }\n    }\n    each(minAttrs, function (v, k) {\n      return minTextShape.attr(k, v);\n    });\n    // 3. 右侧滑块和文字位置\n    if (this.maxHandler) {\n      this.maxHandler.update({\n        x: max - handlerWidth / 2\n      });\n      if (!this.get('updateAutoRender')) {\n        this.maxHandler.render();\n      }\n    }\n    each(maxAttrs, function (v, k) {\n      return maxTextShape.attr(k, v);\n    });\n  };\n  Slider.prototype.bindEvents = function () {\n    var group = this.get('group');\n    group.on('handler-min:mousedown', this.onMouseDown('minHandler'));\n    group.on('handler-min:touchstart', this.onMouseDown('minHandler'));\n    // 2. 右滑块的滑动\n    group.on('handler-max:mousedown', this.onMouseDown('maxHandler'));\n    group.on('handler-max:touchstart', this.onMouseDown('maxHandler'));\n    // 3. 前景选中区域\n    var foreground = group.findById(this.getElementId('foreground'));\n    foreground.on('mousedown', this.onMouseDown('foreground'));\n    foreground.on('touchstart', this.onMouseDown('foreground'));\n  };\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n  Slider.prototype.adjustOffsetRange = function (offsetRange) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end;\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentTarget) {\n      case 'minHandler':\n        {\n          var min = 0 - start;\n          var max = 1 - start;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case 'maxHandler':\n        {\n          var min = 0 - end;\n          var max = 1 - end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n      case 'foreground':\n        {\n          var min = 0 - start;\n          var max = 1 - end;\n          return Math.min(max, Math.max(min, offsetRange));\n        }\n    }\n  };\n  Slider.prototype.updateStartEnd = function (offsetRange) {\n    var _a = this.cfg,\n      start = _a.start,\n      end = _a.end;\n    // 操作不同的组件，反馈不一样\n    switch (this.currentTarget) {\n      case 'minHandler':\n        start += offsetRange;\n        break;\n      case 'maxHandler':\n        end += offsetRange;\n        break;\n      case 'foreground':\n        start += offsetRange;\n        end += offsetRange;\n        break;\n    }\n    this.set('start', start);\n    this.set('end', end);\n  };\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n  Slider.prototype._dodgeText = function (range, minTextShape, maxTextShape) {\n    var _a, _b;\n    var _c = this.cfg,\n      handlerStyle = _c.handlerStyle,\n      width = _c.width;\n    var PADDING = 2;\n    var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    var min = range[0],\n      max = range[1];\n    var sorted = false;\n    // 如果交换了位置，则对应的 min max 也交互\n    if (min > max) {\n      _a = [max, min], min = _a[0], max = _a[1];\n      _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n      sorted = true;\n    }\n    // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n    var minBBox = minTextShape.getBBox();\n    var maxBBox = maxTextShape.getBBox();\n    var minAttrs = minBBox.width > min - PADDING ? {\n      x: min + handlerWidth / 2 + PADDING,\n      textAlign: 'left'\n    } : {\n      x: min - handlerWidth / 2 - PADDING,\n      textAlign: 'right'\n    };\n    var maxAttrs = maxBBox.width > width - max - PADDING ? {\n      x: max - handlerWidth / 2 - PADDING,\n      textAlign: 'right'\n    } : {\n      x: max + handlerWidth / 2 + PADDING,\n      textAlign: 'left'\n    };\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  };\n  Slider.prototype.draw = function () {\n    var container = this.get('container');\n    var canvas = container && container.get('canvas');\n    if (canvas) {\n      canvas.draw();\n    }\n  };\n  Slider.prototype.getContainerDOM = function () {\n    var container = this.get('container');\n    var canvas = container && container.get('canvas');\n    return canvas && canvas.get('container');\n  };\n  return Slider;\n}(GroupComponent);\nexport { Slider };\nexport default Slider;","map":{"version":3,"sources":["../../src/slider/slider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { clamp, deepMix, each, get, isArray, isNil, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { Trend } from '../trend/trend';\nimport { DEFAULT_HANDLER_STYLE, Handler } from './handler';\nimport { BACKGROUND_STYLE, DEFAULT_HANDLER_WIDTH, FOREGROUND_STYLE, HANDLER_STYLE, SLIDER_CHANGE, TEXT_STYLE, } from './constant';\nvar Slider = /** @class */ (function (_super) {\n    __extends(Slider, _super);\n    function Slider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (target) { return function (e) {\n            _this.currentTarget = target;\n            // 取出原生事件\n            var event = e.originalEvent;\n            // 2. 存储当前点击位置\n            event.stopPropagation();\n            event.preventDefault();\n            // 兼容移动端获取数据\n            _this.prevX = get(event, 'touches.0.pageX', event.pageX);\n            _this.prevY = get(event, 'touches.0.pageY', event.pageY);\n            // 3. 开始滑动的时候，绑定 move 和 up 事件\n            var containerDOM = _this.getContainerDOM();\n            containerDOM.addEventListener('mousemove', _this.onMouseMove);\n            containerDOM.addEventListener('mouseup', _this.onMouseUp);\n            containerDOM.addEventListener('mouseleave', _this.onMouseUp);\n            // 移动端事件\n            containerDOM.addEventListener('touchmove', _this.onMouseMove);\n            containerDOM.addEventListener('touchend', _this.onMouseUp);\n            containerDOM.addEventListener('touchcancel', _this.onMouseUp);\n        }; };\n        _this.onMouseMove = function (event) {\n            var width = _this.cfg.width;\n            var originValue = [_this.get('start'), _this.get('end')];\n            // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n            event.stopPropagation();\n            event.preventDefault();\n            var x = get(event, 'touches.0.pageX', event.pageX);\n            var y = get(event, 'touches.0.pageY', event.pageY);\n            // 横向的 slider 只处理 x\n            var offsetX = x - _this.prevX;\n            var offsetXRange = _this.adjustOffsetRange(offsetX / width);\n            // 更新 start end range 范围\n            _this.updateStartEnd(offsetXRange);\n            // 更新 ui\n            _this.updateUI(_this.getElementByLocalId('foreground'), _this.getElementByLocalId('minText'), _this.getElementByLocalId('maxText'));\n            _this.prevX = x;\n            _this.prevY = y;\n            _this.draw();\n            // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n            _this.emit(SLIDER_CHANGE, [_this.get('start'), _this.get('end')].sort());\n            _this.delegateEmit('valuechanged', {\n                originValue: originValue,\n                value: [_this.get('start'), _this.get('end')],\n            });\n        };\n        _this.onMouseUp = function () {\n            // 结束之后，取消绑定的事件\n            if (_this.currentTarget) {\n                _this.currentTarget = undefined;\n            }\n            var containerDOM = _this.getContainerDOM();\n            if (containerDOM) {\n                containerDOM.removeEventListener('mousemove', _this.onMouseMove);\n                containerDOM.removeEventListener('mouseup', _this.onMouseUp);\n                // 防止滑动到 canvas 外部之后，状态丢失\n                containerDOM.removeEventListener('mouseleave', _this.onMouseUp);\n                // 移动端事件\n                containerDOM.removeEventListener('touchmove', _this.onMouseMove);\n                containerDOM.removeEventListener('touchend', _this.onMouseUp);\n                containerDOM.removeEventListener('touchcancel', _this.onMouseUp);\n            }\n        };\n        return _this;\n    }\n    Slider.prototype.setRange = function (min, max) {\n        this.set('minLimit', min);\n        this.set('maxLimit', max);\n        var oldStart = this.get('start');\n        var oldEnd = this.get('end');\n        var newStart = clamp(oldStart, min, max);\n        var newEnd = clamp(oldEnd, min, max);\n        if (!this.get('isInit') && (oldStart !== newStart || oldEnd !== newEnd)) {\n            this.setValue([newStart, newEnd]);\n        }\n    };\n    Slider.prototype.getRange = function () {\n        return {\n            min: this.get('minLimit') || 0,\n            max: this.get('maxLimit') || 1,\n        };\n    };\n    Slider.prototype.setValue = function (value) {\n        var range = this.getRange();\n        if (isArray(value) && value.length === 2) {\n            var originValue = [this.get('start'), this.get('end')];\n            this.update({\n                start: clamp(value[0], range.min, range.max),\n                end: clamp(value[1], range.min, range.max),\n            });\n            if (!this.get('updateAutoRender')) {\n                this.render();\n            }\n            this.delegateEmit('valuechanged', {\n                originValue: originValue,\n                value: value,\n            });\n        }\n    };\n    Slider.prototype.getValue = function () {\n        return [this.get('start'), this.get('end')];\n    };\n    Slider.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'slider', x: 0, y: 0, width: 100, height: 16, backgroundStyle: {}, foregroundStyle: {}, handlerStyle: {}, textStyle: {}, defaultCfg: {\n                backgroundStyle: BACKGROUND_STYLE,\n                foregroundStyle: FOREGROUND_STYLE,\n                handlerStyle: HANDLER_STYLE,\n                textStyle: TEXT_STYLE,\n            } });\n    };\n    Slider.prototype.update = function (cfg) {\n        var start = cfg.start, end = cfg.end;\n        var validCfg = __assign({}, cfg);\n        if (!isNil(start)) {\n            validCfg.start = clamp(start, 0, 1);\n        }\n        if (!isNil(end)) {\n            validCfg.end = clamp(end, 0, 1);\n        }\n        _super.prototype.update.call(this, validCfg);\n        this.minHandler = this.getChildComponentById(this.getElementId('minHandler'));\n        this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'));\n        this.trend = this.getChildComponentById(this.getElementId('trend'));\n    };\n    Slider.prototype.init = function () {\n        this.set('start', clamp(this.get('start'), 0, 1));\n        this.set('end', clamp(this.get('end'), 0, 1));\n        _super.prototype.init.call(this);\n    };\n    Slider.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.updateUI(this.getElementByLocalId('foreground'), this.getElementByLocalId('minText'), this.getElementByLocalId('maxText'));\n    };\n    Slider.prototype.renderInner = function (group) {\n        var _a = this.cfg, start = _a.start, end = _a.end, width = _a.width, height = _a.height, _b = _a.trendCfg, trendCfg = _b === void 0 ? {} : _b, minText = _a.minText, maxText = _a.maxText, _c = _a.backgroundStyle, backgroundStyle = _c === void 0 ? {} : _c, _d = _a.foregroundStyle, foregroundStyle = _d === void 0 ? {} : _d, _e = _a.textStyle, textStyle = _e === void 0 ? {} : _e;\n        var handlerStyle = deepMix({}, DEFAULT_HANDLER_STYLE, this.cfg.handlerStyle);\n        var min = start * width;\n        var max = end * width;\n        // 趋势图数据\n        if (size(get(trendCfg, 'data'))) {\n            this.trend = this.addComponent(group, __assign({ component: Trend, id: this.getElementId('trend'), x: 0, y: 0, width: width,\n                height: height }, trendCfg));\n        }\n        // 1. 背景\n        this.addShape(group, {\n            id: this.getElementId('background'),\n            type: 'rect',\n            attrs: __assign({ x: 0, y: 0, width: width,\n                height: height }, backgroundStyle),\n        });\n        // 2. 左右文字\n        var minTextShape = this.addShape(group, {\n            id: this.getElementId('minText'),\n            type: 'text',\n            attrs: __assign({ \n                // x: 0,\n                y: height / 2, textAlign: 'right', text: minText, silent: false }, textStyle),\n        });\n        var maxTextShape = this.addShape(group, {\n            id: this.getElementId('maxText'),\n            type: 'text',\n            attrs: __assign({ \n                // x: 0,\n                y: height / 2, textAlign: 'left', text: maxText, silent: false }, textStyle),\n        });\n        // 3. 前景 选中背景框\n        var foregroundShape = this.addShape(group, {\n            id: this.getElementId('foreground'),\n            name: 'foreground',\n            type: 'rect',\n            attrs: __assign({ \n                // x: 0,\n                y: 0, \n                // width: 0,\n                height: height }, foregroundStyle),\n        });\n        // 滑块相关的大小信息\n        var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n        var handlerHeight = get(handlerStyle, 'height', 24);\n        // 4. 左右滑块\n        this.minHandler = this.addComponent(group, {\n            component: Handler,\n            id: this.getElementId('minHandler'),\n            name: 'handler-min',\n            x: 0,\n            y: (height - handlerHeight) / 2,\n            width: handlerWidth,\n            height: handlerHeight,\n            cursor: 'ew-resize',\n            style: handlerStyle,\n        });\n        this.maxHandler = this.addComponent(group, {\n            component: Handler,\n            id: this.getElementId('maxHandler'),\n            name: 'handler-max',\n            x: 0,\n            y: (height - handlerHeight) / 2,\n            width: handlerWidth,\n            height: handlerHeight,\n            cursor: 'ew-resize',\n            style: handlerStyle,\n        });\n    };\n    Slider.prototype.applyOffset = function () {\n        this.moveElementTo(this.get('group'), {\n            x: this.get('x'),\n            y: this.get('y'),\n        });\n    };\n    Slider.prototype.initEvent = function () {\n        this.bindEvents();\n    };\n    Slider.prototype.updateUI = function (foregroundShape, minTextShape, maxTextShape) {\n        var _a = this.cfg, start = _a.start, end = _a.end, width = _a.width, minText = _a.minText, maxText = _a.maxText, handlerStyle = _a.handlerStyle, height = _a.height;\n        var min = start * width;\n        var max = end * width;\n        if (this.trend) {\n            this.trend.update({\n                width: width,\n                height: height,\n            });\n            if (!this.get('updateAutoRender')) {\n                this.trend.render();\n            }\n        }\n        // 1. foreground\n        foregroundShape.attr('x', min);\n        foregroundShape.attr('width', max - min);\n        // 滑块相关的大小信息\n        var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n        // 设置文本\n        minTextShape.attr('text', minText);\n        maxTextShape.attr('text', maxText);\n        var _b = this._dodgeText([min, max], minTextShape, maxTextShape), minAttrs = _b[0], maxAttrs = _b[1];\n        // 2. 左侧滑块和文字位置\n        if (this.minHandler) {\n            this.minHandler.update({\n                x: min - handlerWidth / 2,\n            });\n            if (!this.get('updateAutoRender')) {\n                this.minHandler.render();\n            }\n        }\n        each(minAttrs, function (v, k) { return minTextShape.attr(k, v); });\n        // 3. 右侧滑块和文字位置\n        if (this.maxHandler) {\n            this.maxHandler.update({\n                x: max - handlerWidth / 2,\n            });\n            if (!this.get('updateAutoRender')) {\n                this.maxHandler.render();\n            }\n        }\n        each(maxAttrs, function (v, k) { return maxTextShape.attr(k, v); });\n    };\n    Slider.prototype.bindEvents = function () {\n        var group = this.get('group');\n        group.on('handler-min:mousedown', this.onMouseDown('minHandler'));\n        group.on('handler-min:touchstart', this.onMouseDown('minHandler'));\n        // 2. 右滑块的滑动\n        group.on('handler-max:mousedown', this.onMouseDown('maxHandler'));\n        group.on('handler-max:touchstart', this.onMouseDown('maxHandler'));\n        // 3. 前景选中区域\n        var foreground = group.findById(this.getElementId('foreground'));\n        foreground.on('mousedown', this.onMouseDown('foreground'));\n        foreground.on('touchstart', this.onMouseDown('foreground'));\n    };\n    /**\n     * 调整 offsetRange，因为一些范围的限制\n     * @param offsetRange\n     */\n    Slider.prototype.adjustOffsetRange = function (offsetRange) {\n        var _a = this.cfg, start = _a.start, end = _a.end;\n        // 针对不同的滑动组件，处理的方式不同\n        switch (this.currentTarget) {\n            case 'minHandler': {\n                var min = 0 - start;\n                var max = 1 - start;\n                return Math.min(max, Math.max(min, offsetRange));\n            }\n            case 'maxHandler': {\n                var min = 0 - end;\n                var max = 1 - end;\n                return Math.min(max, Math.max(min, offsetRange));\n            }\n            case 'foreground': {\n                var min = 0 - start;\n                var max = 1 - end;\n                return Math.min(max, Math.max(min, offsetRange));\n            }\n        }\n    };\n    Slider.prototype.updateStartEnd = function (offsetRange) {\n        var _a = this.cfg, start = _a.start, end = _a.end;\n        // 操作不同的组件，反馈不一样\n        switch (this.currentTarget) {\n            case 'minHandler':\n                start += offsetRange;\n                break;\n            case 'maxHandler':\n                end += offsetRange;\n                break;\n            case 'foreground':\n                start += offsetRange;\n                end += offsetRange;\n                break;\n        }\n        this.set('start', start);\n        this.set('end', end);\n    };\n    /**\n     * 调整 text 的位置，自动躲避\n     * 根据位置，调整返回新的位置\n     * @param range\n     */\n    Slider.prototype._dodgeText = function (range, minTextShape, maxTextShape) {\n        var _a, _b;\n        var _c = this.cfg, handlerStyle = _c.handlerStyle, width = _c.width;\n        var PADDING = 2;\n        var handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n        var min = range[0], max = range[1];\n        var sorted = false;\n        // 如果交换了位置，则对应的 min max 也交互\n        if (min > max) {\n            _a = [max, min], min = _a[0], max = _a[1];\n            _b = [maxTextShape, minTextShape], minTextShape = _b[0], maxTextShape = _b[1];\n            sorted = true;\n        }\n        // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n        var minBBox = minTextShape.getBBox();\n        var maxBBox = maxTextShape.getBBox();\n        var minAttrs = minBBox.width > min - PADDING\n            ? { x: min + handlerWidth / 2 + PADDING, textAlign: 'left' }\n            : { x: min - handlerWidth / 2 - PADDING, textAlign: 'right' };\n        var maxAttrs = maxBBox.width > width - max - PADDING\n            ? { x: max - handlerWidth / 2 - PADDING, textAlign: 'right' }\n            : { x: max + handlerWidth / 2 + PADDING, textAlign: 'left' };\n        return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n    };\n    Slider.prototype.draw = function () {\n        var container = this.get('container');\n        var canvas = container && container.get('canvas');\n        if (canvas) {\n            canvas.draw();\n        }\n    };\n    Slider.prototype.getContainerDOM = function () {\n        var container = this.get('container');\n        var canvas = container && container.get('canvas');\n        return canvas && canvas.get('container');\n    };\n    return Slider;\n}(GroupComponent));\nexport { Slider };\nexport default Slider;\n//# sourceMappingURL=slider.js.map"]},"metadata":{},"sourceType":"module"}