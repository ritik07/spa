{"ast":null,"code":"import { getTickInterval } from '../util/time';\nexport default function calculateTimeTicks(cfg) {\n  var min = cfg.min,\n    max = cfg.max,\n    minTickInterval = cfg.minTickInterval;\n  var tickInterval = cfg.tickInterval;\n  var tickCount = cfg.tickCount;\n  // 指定 tickInterval 后 tickCount 不生效，需要重新计算\n  if (tickInterval) {\n    tickCount = Math.ceil((max - min) / tickInterval);\n  } else {\n    tickInterval = getTickInterval(min, max, tickCount)[1];\n    var count = (max - min) / tickInterval;\n    var ratio = count / tickCount;\n    if (ratio > 1) {\n      tickInterval = tickInterval * Math.ceil(ratio);\n    }\n    // 如果设置了最小间距，则使用最小间距\n    if (minTickInterval && tickInterval < minTickInterval) {\n      tickInterval = minTickInterval;\n    }\n  }\n  tickInterval = Math.max(Math.floor((max - min) / (Math.pow(2, 12) - 1)), tickInterval);\n  var ticks = [];\n  for (var i = min; i < max + tickInterval; i += tickInterval) {\n    ticks.push(i);\n  }\n  return ticks;\n}","map":{"version":3,"sources":["../../src/tick-method/time.ts"],"names":[],"mappings":"AACA,SAAS,eAAe,QAAQ,cAAc;AAE9C,eAAc,SAAU,kBAAkB,CAAC,GAAgB,EAAA;EACjD,IAAA,GAAG,GAA2B,GAAG,CAAA,GAA9B;IAAE,GAAG,GAAsB,GAAG,CAAA,GAAzB;IAAE,eAAe,GAAK,GAAG,CAAA,eAAR;EACjC,IAAI,YAAY,GAAG,GAAG,CAAC,YAAY;EACnC,IAAI,SAAS,GAAG,GAAG,CAAC,SAAS;EAC7B;EACA,IAAI,YAAY,EAAE;IAChB,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,YAAY,CAAC;GAClD,MAAM;IACL,YAAY,GAAG,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACtD,IAAM,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,YAAY;IACxC,IAAM,KAAK,GAAG,KAAK,GAAG,SAAS;IAC/B,IAAI,KAAK,GAAG,CAAC,EAAE;MACb,YAAY,GAAG,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAC/C;IACD;IACA,IAAI,eAAe,IAAI,YAAY,GAAG,eAAe,EAAE;MACrD,YAAY,GAAG,eAAe;IAC/B;EACF;EAED,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,IAAA,CAAA,GAAA,CAAA,CAAC,EAAI,EAAE,CAAA,GAAG,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC;EAC9E,IAAM,KAAK,GAAG,EAAE;EAChB,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,GAAG,YAAY,EAAE,CAAC,IAAI,YAAY,EAAE;IAC3D,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EACd;EACD,OAAO,KAAK;AACd","sourceRoot":"","sourcesContent":["import { getTickInterval } from '../util/time';\nexport default function calculateTimeTicks(cfg) {\n    var min = cfg.min, max = cfg.max, minTickInterval = cfg.minTickInterval;\n    var tickInterval = cfg.tickInterval;\n    var tickCount = cfg.tickCount;\n    // 指定 tickInterval 后 tickCount 不生效，需要重新计算\n    if (tickInterval) {\n        tickCount = Math.ceil((max - min) / tickInterval);\n    }\n    else {\n        tickInterval = getTickInterval(min, max, tickCount)[1];\n        var count = (max - min) / tickInterval;\n        var ratio = count / tickCount;\n        if (ratio > 1) {\n            tickInterval = tickInterval * Math.ceil(ratio);\n        }\n        // 如果设置了最小间距，则使用最小间距\n        if (minTickInterval && tickInterval < minTickInterval) {\n            tickInterval = minTickInterval;\n        }\n    }\n    tickInterval = Math.max(Math.floor((max - min) / (Math.pow(2, 12) - 1)), tickInterval);\n    var ticks = [];\n    for (var i = min; i < max + tickInterval; i += tickInterval) {\n        ticks.push(i);\n    }\n    return ticks;\n}\n//# sourceMappingURL=time.js.map"]},"metadata":{},"sourceType":"module"}