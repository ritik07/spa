{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { isNumber, isString } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nvar LineAnnotation = /** @class */function (_super) {\n  __extends(LineAnnotation, _super);\n  function LineAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  LineAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'line',\n      locationType: 'region',\n      start: null,\n      end: null,\n      style: {},\n      text: null,\n      defaultCfg: {\n        style: {\n          fill: Theme.textColor,\n          fontSize: 12,\n          textAlign: 'center',\n          textBaseline: 'bottom',\n          fontFamily: Theme.fontFamily\n        },\n        text: {\n          position: 'center',\n          autoRotate: true,\n          content: null,\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            stroke: Theme.lineColor,\n            lineWidth: 1\n          }\n        }\n      }\n    });\n  };\n  LineAnnotation.prototype.renderInner = function (group) {\n    this.renderLine(group);\n    if (this.get('text')) {\n      this.renderLabel(group);\n    }\n  };\n  // 绘制线\n  LineAnnotation.prototype.renderLine = function (group) {\n    var start = this.get('start');\n    var end = this.get('end');\n    var style = this.get('style');\n    this.addShape(group, {\n      type: 'line',\n      id: this.getElementId('line'),\n      name: 'annotation-line',\n      attrs: __assign({\n        x1: start.x,\n        y1: start.y,\n        x2: end.x,\n        y2: end.y\n      }, style)\n    });\n  };\n  // 获取 label 的位置\n  LineAnnotation.prototype.getLabelPoint = function (start, end, position) {\n    var percent;\n    if (position === 'start') {\n      percent = 0;\n    } else if (position === 'center') {\n      percent = 0.5;\n    } else if (isString(position) && position.indexOf('%') !== -1) {\n      percent = parseInt(position, 10) / 100;\n    } else if (isNumber(position)) {\n      percent = position;\n    } else {\n      percent = 1;\n    }\n    if (percent > 1 || percent < 0) {\n      percent = 1;\n    }\n    return {\n      x: getValueByPercent(start.x, end.x, percent),\n      y: getValueByPercent(start.y, end.y, percent)\n    };\n  };\n  // 绘制 label\n  LineAnnotation.prototype.renderLabel = function (group) {\n    var text = this.get('text');\n    var start = this.get('start');\n    var end = this.get('end');\n    var position = text.position,\n      content = text.content,\n      style = text.style,\n      offsetX = text.offsetX,\n      offsetY = text.offsetY,\n      autoRotate = text.autoRotate,\n      maxLength = text.maxLength,\n      autoEllipsis = text.autoEllipsis,\n      ellipsisPosition = text.ellipsisPosition,\n      background = text.background,\n      _a = text.isVertical,\n      isVertical = _a === void 0 ? false : _a;\n    var point = this.getLabelPoint(start, end, position);\n    var x = point.x + offsetX;\n    var y = point.y + offsetY;\n    var cfg = {\n      id: this.getElementId('line-text'),\n      name: 'annotation-line-text',\n      x: x,\n      y: y,\n      content: content,\n      style: style,\n      maxLength: maxLength,\n      autoEllipsis: autoEllipsis,\n      ellipsisPosition: ellipsisPosition,\n      background: background,\n      isVertical: isVertical\n    };\n    // 如果自动旋转\n    if (autoRotate) {\n      var vector = [end.x - start.x, end.y - start.y];\n      cfg.rotate = Math.atan2(vector[1], vector[0]);\n    }\n    renderTag(group, cfg);\n  };\n  return LineAnnotation;\n}(GroupComponent);\nexport default LineAnnotation;","map":{"version":3,"sources":["../../src/annotation/line.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { isNumber, isString } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nvar LineAnnotation = /** @class */ (function (_super) {\n    __extends(LineAnnotation, _super);\n    function LineAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @protected\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    LineAnnotation.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'line', locationType: 'region', start: null, end: null, style: {}, text: null, defaultCfg: {\n                style: {\n                    fill: Theme.textColor,\n                    fontSize: 12,\n                    textAlign: 'center',\n                    textBaseline: 'bottom',\n                    fontFamily: Theme.fontFamily,\n                },\n                text: {\n                    position: 'center',\n                    autoRotate: true,\n                    content: null,\n                    offsetX: 0,\n                    offsetY: 0,\n                    style: {\n                        stroke: Theme.lineColor,\n                        lineWidth: 1,\n                    },\n                },\n            } });\n    };\n    LineAnnotation.prototype.renderInner = function (group) {\n        this.renderLine(group);\n        if (this.get('text')) {\n            this.renderLabel(group);\n        }\n    };\n    // 绘制线\n    LineAnnotation.prototype.renderLine = function (group) {\n        var start = this.get('start');\n        var end = this.get('end');\n        var style = this.get('style');\n        this.addShape(group, {\n            type: 'line',\n            id: this.getElementId('line'),\n            name: 'annotation-line',\n            attrs: __assign({ x1: start.x, y1: start.y, x2: end.x, y2: end.y }, style),\n        });\n    };\n    // 获取 label 的位置\n    LineAnnotation.prototype.getLabelPoint = function (start, end, position) {\n        var percent;\n        if (position === 'start') {\n            percent = 0;\n        }\n        else if (position === 'center') {\n            percent = 0.5;\n        }\n        else if (isString(position) && position.indexOf('%') !== -1) {\n            percent = parseInt(position, 10) / 100;\n        }\n        else if (isNumber(position)) {\n            percent = position;\n        }\n        else {\n            percent = 1;\n        }\n        if (percent > 1 || percent < 0) {\n            percent = 1;\n        }\n        return {\n            x: getValueByPercent(start.x, end.x, percent),\n            y: getValueByPercent(start.y, end.y, percent),\n        };\n    };\n    // 绘制 label\n    LineAnnotation.prototype.renderLabel = function (group) {\n        var text = this.get('text');\n        var start = this.get('start');\n        var end = this.get('end');\n        var position = text.position, content = text.content, style = text.style, offsetX = text.offsetX, offsetY = text.offsetY, autoRotate = text.autoRotate, maxLength = text.maxLength, autoEllipsis = text.autoEllipsis, ellipsisPosition = text.ellipsisPosition, background = text.background, _a = text.isVertical, isVertical = _a === void 0 ? false : _a;\n        var point = this.getLabelPoint(start, end, position);\n        var x = point.x + offsetX;\n        var y = point.y + offsetY;\n        var cfg = {\n            id: this.getElementId('line-text'),\n            name: 'annotation-line-text',\n            x: x,\n            y: y,\n            content: content,\n            style: style,\n            maxLength: maxLength,\n            autoEllipsis: autoEllipsis,\n            ellipsisPosition: ellipsisPosition,\n            background: background,\n            isVertical: isVertical,\n        };\n        // 如果自动旋转\n        if (autoRotate) {\n            var vector = [end.x - start.x, end.y - start.y];\n            cfg.rotate = Math.atan2(vector[1], vector[0]);\n        }\n        renderTag(group, cfg);\n    };\n    return LineAnnotation;\n}(GroupComponent));\nexport default LineAnnotation;\n//# sourceMappingURL=line.js.map"]},"metadata":{},"sourceType":"module"}