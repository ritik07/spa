{"ast":null,"code":"import isArray from './is-array';\nimport isString from './is-string';\nimport isFunction from './is-function';\nfunction sortBy(arr, key) {\n  var comparer;\n  if (isFunction(key)) {\n    comparer = function (a, b) {\n      return key(a) - key(b);\n    };\n  } else {\n    var keys_1 = [];\n    if (isString(key)) {\n      keys_1.push(key);\n    } else if (isArray(key)) {\n      keys_1 = key;\n    }\n    comparer = function (a, b) {\n      for (var i = 0; i < keys_1.length; i += 1) {\n        var prop = keys_1[i];\n        if (a[prop] > b[prop]) {\n          return 1;\n        }\n        if (a[prop] < b[prop]) {\n          return -1;\n        }\n      }\n      return 0;\n    };\n  }\n  arr.sort(comparer);\n  return arr;\n}\nexport default sortBy;","map":{"version":3,"sources":["../src/sort-by.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,YAAY;AAChC,OAAO,QAAQ,MAAM,aAAa;AAClC,OAAO,UAAU,MAAM,eAAe;AAUtC,SAAS,MAAM,CAAK,GAAoB,EAAE,GAAiC,EAAA;EACzE,IAAI,QAAQ;EACZ,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;IACnB,QAAQ,GAAG,UAAC,CAAC,EAAE,CAAC,EAAA;MAAK,OAAA,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAAf,CAAe;GACrC,MAAM;IACL,IAAI,MAAI,GAAG,EAAE;IACb,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;MACjB,MAAI,CAAC,IAAI,CAAC,GAAG,CAAC;KACf,MAAM,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;MACvB,MAAI,GAAG,GAAG;IACX;IACD,QAAQ,GAAG,UAAC,CAAC,EAAE,CAAC,EAAA;MACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACvC,IAAM,IAAI,GAAG,MAAI,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;UACrB,OAAO,CAAC;QACT;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;UACrB,OAAO,CAAC,CAAC;QACV;MACF;MACD,OAAO,CAAC;IACV,CAAC;EACF;EAED,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;EAClB,OAAO,GAAG;AACZ;AAEA,eAAe,MAAM","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nimport isString from './is-string';\nimport isFunction from './is-function';\nfunction sortBy(arr, key) {\n    var comparer;\n    if (isFunction(key)) {\n        comparer = function (a, b) { return key(a) - key(b); };\n    }\n    else {\n        var keys_1 = [];\n        if (isString(key)) {\n            keys_1.push(key);\n        }\n        else if (isArray(key)) {\n            keys_1 = key;\n        }\n        comparer = function (a, b) {\n            for (var i = 0; i < keys_1.length; i += 1) {\n                var prop = keys_1[i];\n                if (a[prop] > b[prop]) {\n                    return 1;\n                }\n                if (a[prop] < b[prop]) {\n                    return -1;\n                }\n            }\n            return 0;\n        };\n    }\n    arr.sort(comparer);\n    return arr;\n}\nexport default sortBy;\n//# sourceMappingURL=sort-by.js.map"]},"metadata":{},"sourceType":"module"}