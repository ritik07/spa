{"ast":null,"code":"var ELLIPSIS_CODE = '\\u2026';\n/** 获取字符串长度 */\nexport function strLen(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; i++) {\n    len += charAtLength(str, i);\n  }\n  return len;\n}\n/** 是否属于ASCII编码范畴 */\nexport function charAtLength(str, i) {\n  if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\n    return 1;\n  } else {\n    return 2;\n  }\n}\n/** 文本省略 */\nexport function ellipsisString(str, reseveLength, position) {\n  if (position === void 0) {\n    position = 'tail';\n  }\n  var count = str.length;\n  var rst = '';\n  if (position === 'tail') {\n    for (var i = 0, index = 0; i < reseveLength;) {\n      var charLength = charAtLength(str, index);\n      if (i + charLength <= reseveLength) {\n        rst += str[index];\n        i += charAtLength(str, index);\n        index++;\n      } else {\n        break;\n      }\n    }\n    rst += ELLIPSIS_CODE;\n  } else if (position === 'head') {\n    for (var i = 0, index = count - 1; i < reseveLength;) {\n      var charLength = charAtLength(str, index);\n      if (i + charLength <= reseveLength) {\n        rst += str[index];\n        i += charAtLength(str, index);\n        index--;\n      } else {\n        break;\n      }\n    }\n    rst = ELLIPSIS_CODE + rst;\n  } else {\n    var startStr = '';\n    var endStr = '';\n    for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {\n      var startCodeLen = charAtLength(str, startIndex);\n      var hasAdd = false; // 设置标志位，防止头尾都没有附加字符\n      if (startCodeLen + i <= reseveLength) {\n        startStr += str[startIndex];\n        startIndex++;\n        i += startCodeLen;\n        hasAdd = true;\n      }\n      var endCodeLen = charAtLength(str, endIndex);\n      if (endCodeLen + i <= reseveLength) {\n        endStr = str[endIndex] + endStr;\n        i += endCodeLen;\n        endIndex--;\n        hasAdd = true;\n      }\n      if (!hasAdd) {\n        // 如果都没有增加字符，说明都不适合则中断\n        break;\n      }\n    }\n    rst = startStr + ELLIPSIS_CODE + endStr;\n  }\n  return rst;\n}","map":{"version":3,"sources":["../../src/util/text.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var ELLIPSIS_CODE = '\\u2026';\n/** 获取字符串长度 */\nexport function strLen(str) {\n    var len = 0;\n    for (var i = 0; i < str.length; i++) {\n        len += charAtLength(str, i);\n    }\n    return len;\n}\n/** 是否属于ASCII编码范畴 */\nexport function charAtLength(str, i) {\n    if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\n        return 1;\n    }\n    else {\n        return 2;\n    }\n}\n/** 文本省略 */\nexport function ellipsisString(str, reseveLength, position) {\n    if (position === void 0) { position = 'tail'; }\n    var count = str.length;\n    var rst = '';\n    if (position === 'tail') {\n        for (var i = 0, index = 0; i < reseveLength;) {\n            var charLength = charAtLength(str, index);\n            if (i + charLength <= reseveLength) {\n                rst += str[index];\n                i += charAtLength(str, index);\n                index++;\n            }\n            else {\n                break;\n            }\n        }\n        rst += ELLIPSIS_CODE;\n    }\n    else if (position === 'head') {\n        for (var i = 0, index = count - 1; i < reseveLength;) {\n            var charLength = charAtLength(str, index);\n            if (i + charLength <= reseveLength) {\n                rst += str[index];\n                i += charAtLength(str, index);\n                index--;\n            }\n            else {\n                break;\n            }\n        }\n        rst = ELLIPSIS_CODE + rst;\n    }\n    else {\n        var startStr = '';\n        var endStr = '';\n        for (var i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength;) {\n            var startCodeLen = charAtLength(str, startIndex);\n            var hasAdd = false; // 设置标志位，防止头尾都没有附加字符\n            if (startCodeLen + i <= reseveLength) {\n                startStr += str[startIndex];\n                startIndex++;\n                i += startCodeLen;\n                hasAdd = true;\n            }\n            var endCodeLen = charAtLength(str, endIndex);\n            if (endCodeLen + i <= reseveLength) {\n                endStr = str[endIndex] + endStr;\n                i += endCodeLen;\n                endIndex--;\n                hasAdd = true;\n            }\n            if (!hasAdd) {\n                // 如果都没有增加字符，说明都不适合则中断\n                break;\n            }\n        }\n        rst = startStr + ELLIPSIS_CODE + endStr;\n    }\n    return rst;\n}\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}