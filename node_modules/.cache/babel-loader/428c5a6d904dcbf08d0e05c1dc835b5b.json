{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar List = /** @class */function (_super) {\n  __extends(List, _super);\n  function List() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  List.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'list',\n      cols: null,\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this)\n    });\n  };\n  List.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  List.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  List.prototype.beforeEachView = function (view, facet) {};\n  List.prototype.generateFacets = function (data) {\n    var _this = this;\n    var fields = this.cfg.fields;\n    var cols = this.cfg.cols;\n    var _a = __read(fields, 1),\n      columnField = _a[0];\n    if (!columnField) {\n      throw new Error('No `fields` specified!');\n    }\n    var colValues = this.getFieldValues(data, columnField);\n    var count = colValues.length;\n    cols = cols || count; // 每行有几列数据\n    // 总共有几行\n    var rows = this.getPageCount(count, cols);\n    var rst = [];\n    colValues.forEach(function (val, index) {\n      // 当前 index 在那个行列\n      var _a = _this.getRowCol(index, cols),\n        row = _a.row,\n        col = _a.col;\n      var conditions = [{\n        field: columnField,\n        value: val,\n        values: colValues\n      }];\n      var facetData = filter(data, _this.getFacetDataFilter(conditions));\n      var facet = {\n        type: _this.cfg.type,\n        data: facetData,\n        region: _this.getRegion(rows, cols, col, row),\n        columnValue: val,\n        rowValue: val,\n        columnField: columnField,\n        rowField: null,\n        columnIndex: col,\n        rowIndex: row,\n        columnValuesLength: cols,\n        rowValuesLength: rows,\n        total: count\n      };\n      rst.push(facet);\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  List.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1 && facet.columnValuesLength * facet.rowIndex + facet.columnIndex + 1 + facet.columnValuesLength <= facet.total) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  List.prototype.getYAxisOption = function (y, axes, option, facet) {\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    }\n    return option;\n  };\n  /**\n   * facet title\n   */\n  List.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet) {\n      var columnValue = facet.columnValue,\n        view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      var config = deepMix({\n        position: ['50%', '0%'],\n        content: formatter ? formatter(columnValue) : columnValue\n      }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n      view.annotation().text(config);\n    });\n  };\n  /**\n   * 计算分页数\n   * @param total\n   * @param pageSize\n   */\n  List.prototype.getPageCount = function (total, pageSize) {\n    return Math.floor((total + pageSize - 1) / pageSize);\n  };\n  /**\n   * 索引值在哪一页\n   * @param index\n   * @param pageSize\n   */\n  List.prototype.getRowCol = function (index, pageSize) {\n    var row = Math.floor(index / pageSize);\n    var col = index % pageSize;\n    return {\n      row: row,\n      col: col\n    };\n  };\n  return List;\n}(Facet);\nexport default List;","map":{"version":3,"sources":["../../src/facet/list.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, ListCfg, ListData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class List extends Facet<ListCfg, ListData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'list',\n      cols: null, // 默认显示一列\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected afterEachView(view: View, facet: ListData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: ListData) {}\n\n  protected generateFacets(data: Datum[]): ListData[] {\n    const { fields } = this.cfg;\n    let { cols } = this.cfg;\n\n    const [columnField] = fields;\n    if (!columnField) {\n      throw new Error('No `fields` specified!');\n    }\n\n    const colValues = this.getFieldValues(data, columnField);\n\n    const count = colValues.length;\n    cols = cols || count; // 每行有几列数据\n\n    // 总共有几行\n    const rows = this.getPageCount(count, cols);\n    const rst = [];\n\n    colValues.forEach((val, index) => {\n      // 当前 index 在那个行列\n      const { row, col } = this.getRowCol(index, cols);\n\n      const conditions = [{ field: columnField, value: val, values: colValues }];\n\n      const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n      const facet: ListData = {\n        type: this.cfg.type,\n        data: facetData,\n        region: this.getRegion(rows, cols, col, row),\n\n        columnValue: val,\n        rowValue: val,\n        columnField,\n        rowField: null,\n        columnIndex: col,\n        rowIndex: row,\n        columnValuesLength: cols,\n        rowValuesLength: rows,\n\n        total: count,\n      };\n\n      rst.push(facet);\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: ListData): object {\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (\n      facet.rowIndex !== facet.rowValuesLength - 1 &&\n      facet.columnValuesLength * facet.rowIndex + facet.columnIndex + 1 + facet.columnValuesLength <= facet.total\n    ) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: ListData): object {\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: ListData) => {\n      const { columnValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      const config = deepMix(\n        {\n          position: ['50%', '0%'] as [string, string],\n          content: formatter ? formatter(columnValue) : columnValue,\n        },\n        getFactTitleConfig(DIRECTION.TOP),\n        this.cfg.title\n      );\n\n      view.annotation().text(config);\n    });\n  }\n\n  /**\n   * 计算分页数\n   * @param total\n   * @param pageSize\n   */\n  private getPageCount(total: number, pageSize: number): number {\n    return Math.floor((total + pageSize - 1) / pageSize);\n  }\n\n  /**\n   * 索引值在哪一页\n   * @param index\n   * @param pageSize\n   */\n  private getRowCol(index: number, pageSize: number) {\n    const row = Math.floor(index / pageSize);\n    const col = index % pageSize;\n\n    return { row, col };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}