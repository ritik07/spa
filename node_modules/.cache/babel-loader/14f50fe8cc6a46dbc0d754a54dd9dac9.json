{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { isEqual, get, deepMix } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\nvar EllipsisText = /** @class */function (_super) {\n  __extends(EllipsisText, _super);\n  function EllipsisText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeStamp = 0;\n    return _this;\n  }\n  EllipsisText.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.tooltip && this.tooltip.destroy();\n  };\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  EllipsisText.prototype.show = function () {\n    var context = this.context;\n    var ev = context.event;\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n    if (timeStamp - lastTimeStamp > 16) {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  EllipsisText.prototype.hide = function () {\n    this.hideTooltip();\n    this.location = null;\n  };\n  EllipsisText.prototype.showTooltip = function (curLoc) {\n    var context = this.context;\n    var ev = context.event;\n    var target = ev.target;\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n\n      var tipContent = target.get('tip');\n      // 展示 tooltip\n      this.tooltip.update(__assign({\n        title: tipContent\n      }, curLoc));\n      this.tooltip.show();\n    }\n  };\n  EllipsisText.prototype.hideTooltip = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n  EllipsisText.prototype.renderTooltip = function () {\n    var _a;\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var theme = view.getTheme();\n    var tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      crosshairs: null,\n      domStyles: __assign({}, deepMix({}, tooltipStyles, (_a = {},\n      // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  };\n  return EllipsisText;\n}(Action);\nexport default EllipsisText;","map":{"version":3,"sources":["../../../../../src/interaction/action/component/tooltip/ellipsis-text.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEqual, get, deepMix } from '@antv/util';\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { Point } from '../../../../interface';\nimport Action from '../../base';\nimport { HtmlTooltip } from '../../../../dependents';\n\n/**\n * 用于组件文本省略后需要展示完整信息的 Tooltip Action\n * @ignore\n */\nexport default class EllipsisText extends Action {\n  private timeStamp: number = 0;\n  private location: Point;\n  private tooltip;\n\n  public destroy() {\n    super.destroy();\n    this.tooltip && this.tooltip.destroy();\n  }\n\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  public show() {\n    const context = this.context;\n    const ev = context.event;\n    const lastTimeStamp = this.timeStamp;\n    const timeStamp = +new Date();\n\n    if (timeStamp - lastTimeStamp > 16) {\n      const preLoc = this.location;\n      const curLoc = { x: ev.x, y: ev.y };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  }\n\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  public hide() {\n    this.hideTooltip();\n    this.location = null;\n  }\n\n  protected showTooltip(curLoc: Point) {\n    const context = this.context;\n    const ev = context.event;\n    const target = ev.target;\n\n    if (target && target.get('tip')) {\n      if (!this.tooltip) {\n        this.renderTooltip(); // 延迟生成\n      }\n      const tipContent = target.get('tip');\n      // 展示 tooltip\n      this.tooltip.update({\n        title: tipContent,\n        ...curLoc,\n      });\n      this.tooltip.show();\n    }\n  }\n\n  protected hideTooltip() {\n    this.tooltip && this.tooltip.hide();\n  }\n\n  private renderTooltip() {\n    const view = this.context.view;\n    const canvas = view.canvas;\n\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n\n    const theme = view.getTheme();\n    const tooltipStyles = get(theme, ['components', 'tooltip', 'domStyles'], {}); // 获取 tooltip 样式\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      visible: false,\n      crosshairs: null,\n      domStyles: {\n        ...deepMix({}, tooltipStyles, {\n          // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n          [TOOLTIP_CSS_CONST.CONTAINER_CLASS]: { 'max-width': '50%' },\n          [TOOLTIP_CSS_CONST.TITLE_CLASS]: { 'word-break': 'break-all' },\n        }),\n      },\n    });\n    tooltip.init();\n    tooltip.setCapture(false); // 不允许捕获事件\n    this.tooltip = tooltip;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}