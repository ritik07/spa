{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\nvar EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints: function (pointInfo) {\n    return splitPoints(pointInfo);\n  }\n});\nregisterShape('edge', 'line', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});\nexport default EdgeShapeFactory;","map":{"version":3,"sources":["../../../../src/geometry/shape/edge/index.ts"],"names":[],"mappings":";AAGA,SAAS,aAAa,EAAE,oBAAoB,QAAQ,SAAS;AAC7D,SAAS,QAAQ,QAAQ,mBAAmB;AAC5C,SAAS,WAAW,QAAQ,cAAc;AAC1C,SAAS,WAAW,QAAQ,sBAAsB;AAElD,IAAM,gBAAgB,GAAG,oBAAoB,CAAC,MAAM,EAAE;EACpD,gBAAgB,EAAE,MAAM;EACxB,gBAAgB,EAAA,UAAC,SAAqB,EAAA;IACpC,OAAO,WAAW,CAAC,SAAS,CAAC;EAC/B;CACD,CAAC;AAEF,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE;EAC5B,IAAI,EAAA,UAAC,GAAc,EAAE,SAAiB,EAAA;IACpC,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC;IACrD,IAAM,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;IAC/E,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;MAChC,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACA,KAAK,CAAA,EAAA;QACR,IAAI,EAAA;MAAA,CAAA;KAEP,CAAC;EACJ,CAAC;EACD,SAAS,EAAA,UAAC,SAAyB,EAAA;IACjC,OAAO;MACL,MAAM,EAAE,QAAQ;MAChB,KAAK,EAAE;QACL,CAAC,EAAE,GAAG;QACN,IAAI,EAAE,SAAS,CAAC;MACjB;KACF;EACH;CACD,CAAC;AAEF,eAAe,gBAAgB","sourcesContent":["import { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\n\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getLinePath } from '../util/path';\nimport { splitPoints } from '../util/split-points';\n\nconst EdgeShapeFactory = registerShapeFactory('edge', {\n  defaultShapeType: 'line',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    return splitPoints(pointInfo);\n  },\n});\n\nregisterShape('edge', 'line', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const path = getLinePath(this.parsePoints(cfg.points), this.coordinate.isPolar);\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n\nexport default EdgeShapeFactory;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}