{"ast":null,"code":"import { Util } from '@antv/g-math';\nimport { mergeArrowBBox } from './util';\nexport default function (shape) {\n  var attrs = shape.attr();\n  var points = attrs.points;\n  var xArr = [];\n  var yArr = [];\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n    xArr.push(point[0]);\n    yArr.push(point[1]);\n  }\n  var _a = Util.getBBoxByArray(xArr, yArr),\n    x = _a.x,\n    y = _a.y,\n    width = _a.width,\n    height = _a.height;\n  var bbox = {\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height\n  };\n  bbox = mergeArrowBBox(shape, bbox);\n  return {\n    x: bbox.minX,\n    y: bbox.minY,\n    width: bbox.maxX - bbox.minX,\n    height: bbox.maxY - bbox.minY\n  };\n}","map":{"version":3,"sources":["../../src/bbox/polyline.ts"],"names":[],"mappings":"AAAA,SAAS,IAAI,QAAQ,cAAc;AAGnC,SAAS,cAAc,QAAQ,QAAQ;AAEvC,eAAc,UAAW,KAAa,EAAA;EACpC,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE;EAClB,IAAA,MAAM,GAAK,KAAK,CAAA,MAAV;EACd,IAAM,IAAI,GAAG,EAAE;EACf,IAAM,IAAI,GAAG,EAAE;EACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;IACvB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpB;EACK,IAAA,EAAA,GAA0B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAAvD,CAAC,GAAA,EAAA,CAAA,CAAA;IAAE,CAAC,GAAA,EAAA,CAAA,CAAA;IAAE,KAAK,GAAA,EAAA,CAAA,KAAA;IAAE,MAAM,GAAA,EAAA,CAAA,MAAoC;EAC/D,IAAI,IAAI,GAAG;IACT,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC,GAAG,KAAK;IACf,IAAI,EAAE,CAAC,GAAG;GACX;EACD,IAAI,GAAG,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC;EAClC,OAAO;IACL,CAAC,EAAE,IAAI,CAAC,IAAI;IACZ,CAAC,EAAE,IAAI,CAAC,IAAI;IACZ,KAAK,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;IAC5B,MAAM,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;GAC1B;AACH","sourceRoot":"","sourcesContent":["import { Util } from '@antv/g-math';\nimport { mergeArrowBBox } from './util';\nexport default function (shape) {\n    var attrs = shape.attr();\n    var points = attrs.points;\n    var xArr = [];\n    var yArr = [];\n    for (var i = 0; i < points.length; i++) {\n        var point = points[i];\n        xArr.push(point[0]);\n        yArr.push(point[1]);\n    }\n    var _a = Util.getBBoxByArray(xArr, yArr), x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n    var bbox = {\n        minX: x,\n        minY: y,\n        maxX: x + width,\n        maxY: y + height,\n    };\n    bbox = mergeArrowBBox(shape, bbox);\n    return {\n        x: bbox.minX,\n        y: bbox.minY,\n        width: bbox.maxX - bbox.minX,\n        height: bbox.maxY - bbox.minY,\n    };\n}\n//# sourceMappingURL=polyline.js.map"]},"metadata":{},"sourceType":"module"}