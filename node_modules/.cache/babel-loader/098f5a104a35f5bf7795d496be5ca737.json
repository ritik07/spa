{"ast":null,"code":"/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar LETTER_SPACING = 0.3;\nvar BASELINE_MAP = {\n  top: 'before-edge',\n  middle: 'central',\n  bottom: 'after-edge',\n  alphabetic: 'baseline',\n  hanging: 'hanging'\n};\n// for FireFox\nvar BASELINE_MAP_FOR_FIREFOX = {\n  top: 'text-before-edge',\n  middle: 'central',\n  bottom: 'text-after-edge',\n  alphabetic: 'alphabetic',\n  hanging: 'hanging'\n};\nvar ANCHOR_MAP = {\n  left: 'left',\n  start: 'left',\n  center: 'middle',\n  right: 'end',\n  end: 'end'\n};\nvar Text = /** @class */function (_super) {\n  __extends(Text, _super);\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'text';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n  Text.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom'\n    });\n  };\n  Text.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n    var attrs = this.attr();\n    var el = this.get('el');\n    this._setFont();\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'text') {\n        _this._setText(\"\" + value);\n      } else if (attr === 'matrix' && value) {\n        setTransform(_this);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n    el.setAttribute('paint-order', 'stroke');\n    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n  };\n  Text.prototype._setFont = function () {\n    var el = this.get('el');\n    var _a = this.attr(),\n      textBaseline = _a.textBaseline,\n      textAlign = _a.textAlign;\n    var browser = detect();\n    if (browser && browser.name === 'firefox') {\n      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n    } else {\n      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n    }\n    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n  };\n  Text.prototype._setText = function (text) {\n    var el = this.get('el');\n    var _a = this.attr(),\n      x = _a.x,\n      _b = _a.textBaseline,\n      baseline = _b === void 0 ? 'bottom' : _b;\n    if (!text) {\n      el.innerHTML = '';\n    } else if (~text.indexOf('\\n')) {\n      var textArr = text.split('\\n');\n      var textLen_1 = textArr.length - 1;\n      var arr_1 = '';\n      each(textArr, function (segment, i) {\n        if (i === 0) {\n          if (baseline === 'alphabetic') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen_1 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'top') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'middle') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen_1 - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'bottom') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen_1 + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          } else if (baseline === 'hanging') {\n            arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen_1 - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n          }\n        } else {\n          arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n        }\n      });\n      el.innerHTML = arr_1;\n    } else {\n      el.innerHTML = text;\n    }\n  };\n  return Text;\n}(ShapeBase);\nexport default Text;","map":{"version":3,"sources":["../../src/shape/text.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar LETTER_SPACING = 0.3;\nvar BASELINE_MAP = {\n    top: 'before-edge',\n    middle: 'central',\n    bottom: 'after-edge',\n    alphabetic: 'baseline',\n    hanging: 'hanging',\n};\n// for FireFox\nvar BASELINE_MAP_FOR_FIREFOX = {\n    top: 'text-before-edge',\n    middle: 'central',\n    bottom: 'text-after-edge',\n    alphabetic: 'alphabetic',\n    hanging: 'hanging',\n};\nvar ANCHOR_MAP = {\n    left: 'left',\n    start: 'left',\n    center: 'middle',\n    right: 'end',\n    end: 'end',\n};\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'text';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Text.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x: 0, y: 0, text: null, fontSize: 12, fontFamily: 'sans-serif', fontStyle: 'normal', fontWeight: 'normal', fontVariant: 'normal', textAlign: 'start', textBaseline: 'bottom' });\n    };\n    Text.prototype.createPath = function (context, targetAttrs) {\n        var _this = this;\n        var attrs = this.attr();\n        var el = this.get('el');\n        this._setFont();\n        each(targetAttrs || attrs, function (value, attr) {\n            if (attr === 'text') {\n                _this._setText(\"\" + value);\n            }\n            else if (attr === 'matrix' && value) {\n                setTransform(_this);\n            }\n            else if (SVG_ATTR_MAP[attr]) {\n                el.setAttribute(SVG_ATTR_MAP[attr], value);\n            }\n        });\n        el.setAttribute('paint-order', 'stroke');\n        el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n    };\n    Text.prototype._setFont = function () {\n        var el = this.get('el');\n        var _a = this.attr(), textBaseline = _a.textBaseline, textAlign = _a.textAlign;\n        var browser = detect();\n        if (browser && browser.name === 'firefox') {\n            // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n            el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n        }\n        else {\n            el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n        }\n        el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n    };\n    Text.prototype._setText = function (text) {\n        var el = this.get('el');\n        var _a = this.attr(), x = _a.x, _b = _a.textBaseline, baseline = _b === void 0 ? 'bottom' : _b;\n        if (!text) {\n            el.innerHTML = '';\n        }\n        else if (~text.indexOf('\\n')) {\n            var textArr = text.split('\\n');\n            var textLen_1 = textArr.length - 1;\n            var arr_1 = '';\n            each(textArr, function (segment, i) {\n                if (i === 0) {\n                    if (baseline === 'alphabetic') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -textLen_1 + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'top') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"0.9em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'middle') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + -(textLen_1 - 1) / 2 + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'bottom') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"-\" + (textLen_1 + LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                    else if (baseline === 'hanging') {\n                        arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"\" + (-(textLen_1 - 1) - LETTER_SPACING) + \"em\\\">\" + segment + \"</tspan>\";\n                    }\n                }\n                else {\n                    arr_1 += \"<tspan x=\\\"\" + x + \"\\\" dy=\\\"1em\\\">\" + segment + \"</tspan>\";\n                }\n            });\n            el.innerHTML = arr_1;\n        }\n        else {\n            el.innerHTML = text;\n        }\n    };\n    return Text;\n}(ShapeBase));\nexport default Text;\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}