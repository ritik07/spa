{"ast":null,"code":"import isArray from './is-array';\nvar clone = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  var rst;\n  if (isArray(obj)) {\n    rst = [];\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (typeof obj[i] === 'object' && obj[i] != null) {\n        rst[i] = clone(obj[i]);\n      } else {\n        rst[i] = obj[i];\n      }\n    }\n  } else {\n    rst = {};\n    for (var k in obj) {\n      if (typeof obj[k] === 'object' && obj[k] != null) {\n        rst[k] = clone(obj[k]);\n      } else {\n        rst[k] = obj[k];\n      }\n    }\n  }\n  return rst;\n};\nexport default clone;","map":{"version":3,"sources":["../src/clone.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,YAAY;AAEhC,IAAM,KAAK,GAAG,UAAS,GAAG,EAAA;EACxB,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;IAC3C,OAAO,GAAG;EACX;EACD,IAAI,GAAG;EACP,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IAChB,GAAG,GAAG,EAAE;IACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;MAC1C,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;QAChD,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OACvB,MAAM;QACL,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;MAChB;IACF;GACF,MAAM;IACL,GAAG,GAAG,CAAA,CAAE;IACR,KAAK,IAAM,CAAC,IAAI,GAAG,EAAE;MACnB,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;QAChD,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OACvB,MAAM;QACL,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;MAChB;IACF;EACF;EAED,OAAO,GAAG;AACZ,CAAC;AAED,eAAe,KAAK","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nvar clone = function (obj) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n    var rst;\n    if (isArray(obj)) {\n        rst = [];\n        for (var i = 0, l = obj.length; i < l; i++) {\n            if (typeof obj[i] === 'object' && obj[i] != null) {\n                rst[i] = clone(obj[i]);\n            }\n            else {\n                rst[i] = obj[i];\n            }\n        }\n    }\n    else {\n        rst = {};\n        for (var k in obj) {\n            if (typeof obj[k] === 'object' && obj[k] != null) {\n                rst[k] = clone(obj[k]);\n            }\n            else {\n                rst[k] = obj[k];\n            }\n        }\n    }\n    return rst;\n};\nexport default clone;\n//# sourceMappingURL=clone.js.map"]},"metadata":{},"sourceType":"module"}