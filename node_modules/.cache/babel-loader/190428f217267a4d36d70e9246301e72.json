{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { createBBox, formatPadding } from '../util/util';\nvar LegendBase = /** @class */function (_super) {\n  __extends(LegendBase, _super);\n  function LegendBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'legend',\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'horizontal',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      offsetX: 0,\n      offsetY: 0,\n      title: null,\n      background: null\n    });\n  };\n  LegendBase.prototype.getLayoutBBox = function () {\n    var bbox = _super.prototype.getLayoutBBox.call(this);\n    var maxWidth = this.get('maxWidth');\n    var maxHeight = this.get('maxHeight');\n    var width = bbox.width,\n      height = bbox.height;\n    if (maxWidth) {\n      width = Math.min(width, maxWidth);\n    }\n    if (maxHeight) {\n      height = Math.min(height, maxHeight);\n    }\n    return createBBox(bbox.minX, bbox.minY, width, height);\n  };\n  LegendBase.prototype.setLocation = function (cfg) {\n    this.set('x', cfg.x);\n    this.set('y', cfg.y);\n    this.resetLocation();\n  };\n  LegendBase.prototype.resetLocation = function () {\n    var x = this.get('x');\n    var y = this.get('y');\n    var offsetX = this.get('offsetX');\n    var offsetY = this.get('offsetY');\n    this.moveElementTo(this.get('group'), {\n      x: x + offsetX,\n      y: y + offsetY\n    });\n  };\n  LegendBase.prototype.applyOffset = function () {\n    this.resetLocation();\n  };\n  // 获取当前绘制的点\n  LegendBase.prototype.getDrawPoint = function () {\n    return this.get('currentPoint');\n  };\n  LegendBase.prototype.setDrawPoint = function (point) {\n    return this.set('currentPoint', point);\n  };\n  // 复写父类定义的绘制方法\n  LegendBase.prototype.renderInner = function (group) {\n    this.resetDraw();\n    if (this.get('title')) {\n      this.drawTitle(group);\n    }\n    this.drawLegendContent(group);\n    if (this.get('background')) {\n      this.drawBackground(group);\n    }\n    // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n  };\n  // 绘制背景\n  LegendBase.prototype.drawBackground = function (group) {\n    var background = this.get('background');\n    var bbox = group.getBBox();\n    var padding = formatPadding(background.padding);\n    var attrs = __assign({\n      // 背景从 (0,0) 开始绘制\n      x: 0,\n      y: 0,\n      width: bbox.width + padding[1] + padding[3],\n      height: bbox.height + padding[0] + padding[2]\n    }, background.style);\n    var backgroundShape = this.addShape(group, {\n      type: 'rect',\n      id: this.getElementId('background'),\n      name: 'legend-background',\n      attrs: attrs\n    });\n    backgroundShape.toBack();\n  };\n  // 绘制标题，标题在图例项的上面\n  LegendBase.prototype.drawTitle = function (group) {\n    var currentPoint = this.get('currentPoint');\n    var titleCfg = this.get('title');\n    var spacing = titleCfg.spacing,\n      style = titleCfg.style,\n      text = titleCfg.text;\n    var shape = this.addShape(group, {\n      type: 'text',\n      id: this.getElementId('title'),\n      name: 'legend-title',\n      attrs: __assign({\n        text: text,\n        x: currentPoint.x,\n        y: currentPoint.y\n      }, style)\n    });\n    var bbox = shape.getBBox();\n    // 标题单独在一行\n    this.set('currentPoint', {\n      x: currentPoint.x,\n      y: bbox.maxY + spacing\n    });\n  };\n  // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n  LegendBase.prototype.resetDraw = function () {\n    var background = this.get('background');\n    var currentPoint = {\n      x: 0,\n      y: 0\n    };\n    if (background) {\n      var padding = formatPadding(background.padding);\n      currentPoint.x = padding[3]; // 左边 padding\n      currentPoint.y = padding[0]; // 上面 padding\n    }\n\n    this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n  };\n\n  return LegendBase;\n}(GroupComponent);\nexport default LegendBase;","map":{"version":3,"sources":["../../src/legend/base.ts"],"names":[],"mappings":";AACA,OAAO,cAAc,MAAM,6BAA6B;AAGxD,SAAS,UAAU,EAAE,aAAa,QAAQ,cAAc;AAExD,IAAA,UAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA2E,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;EAA3E,SAAA,UAAA,GAAA;;EAwIA;EAtIS,UAAA,CAAA,SAAA,CAAA,aAAa,GAApB,YAAA;IACE,IAAM,GAAG,GAAG,MAAA,CAAA,SAAA,CAAM,aAAa,CAAA,IAAA,CAAA,IAAA,CAAE;IACjC,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACK,GAAG,CAAA,EAAA;MACN,IAAI,EAAE,QAAQ;MACd;;;AAGG;MACH,MAAM,EAAE,YAAY;MACpB,YAAY,EAAE,OAAO;MACrB,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE,CAAC;MACJ,OAAO,EAAE,CAAC;MACV,OAAO,EAAE,CAAC;MACV,KAAK,EAAE,IAAI;MACX,UAAU,EAAE;IAAI,CAAA,CAAA;EAEpB,CAAC;EAEM,UAAA,CAAA,SAAA,CAAA,aAAa,GAApB,YAAA;IACE,IAAM,IAAI,GAAG,MAAA,CAAA,SAAA,CAAM,aAAa,CAAA,IAAA,CAAA,IAAA,CAAE;IAClC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;IACrC,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;IAEjC,IAAA,KAAK,GAAa,IAAI,CAAA,KAAjB;MAAE,MAAM,GAAK,IAAI,CAAA,MAAT;IACnB,IAAI,QAAQ,EAAE;MACZ,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;IAClC;IACD,IAAI,SAAS,EAAE;MACb,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC;IACrC;IAED,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;EACxD,CAAC;EAEM,UAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,GAAqB,EAAA;IACtC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACpB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACpB,IAAI,CAAC,aAAa,EAAE;EACtB,CAAC;EAES,UAAA,CAAA,SAAA,CAAA,aAAa,GAAvB,YAAA;IACE,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IACvB,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IACvB,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;IACnC,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;IACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;MACpC,CAAC,EAAE,CAAC,GAAG,OAAO;MACd,CAAC,EAAE,CAAC,GAAG;KACR,CAAC;EACJ,CAAC;EAES,UAAA,CAAA,SAAA,CAAA,WAAW,GAArB,YAAA;IACE,IAAI,CAAC,aAAa,EAAE;EACtB,CAAC;EAED;EACU,UAAA,CAAA,SAAA,CAAA,YAAY,GAAtB,YAAA;IACE,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;EACjC,CAAC;EAES,UAAA,CAAA,SAAA,CAAA,YAAY,GAAtB,UAAuB,KAAY,EAAA;IACjC,OAAO,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC;EACxC,CAAC;EACD;EACU,UAAA,CAAA,SAAA,CAAA,WAAW,GAArB,UAAsB,KAAa,EAAA;IACjC,IAAI,CAAC,SAAS,EAAE;IAChB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;MACrB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACtB;IACD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IAC7B,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;MAC1B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IAC3B;IACD;EACF,CAAC;EAID;EACU,UAAA,CAAA,SAAA,CAAA,cAAc,GAAxB,UAAyB,KAAa,EAAA;IACpC,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;IACzC,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE;IAC5B,IAAM,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC;IACjD,IAAM,KAAK,GAAA,QAAA,CAAA;MACT;MACA,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE,CAAC;MACJ,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;MAC3C,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;IAAC,CAAA,EAC1C,UAAU,CAAC,KAAK,CACpB;IACD,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MAC3C,IAAI,EAAE,MAAM;MACZ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;MACnC,IAAI,EAAE,mBAAmB;MACzB,KAAK,EAAA;KACN,CAAC;IACF,eAAe,CAAC,MAAM,EAAE;EAC1B,CAAC;EAED;EACU,UAAA,CAAA,SAAA,CAAA,SAAS,GAAnB,UAAoB,KAAa,EAAA;IAC/B,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;IAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;IAC1B,IAAA,OAAO,GAAkB,QAAQ,CAAA,OAA1B;MAAE,KAAK,GAAW,QAAQ,CAAA,KAAnB;MAAE,IAAI,GAAK,QAAQ,CAAA,IAAb;IAC5B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MACjC,IAAI,EAAE,MAAM;MACZ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;MAC9B,IAAI,EAAE,cAAc;MACpB,KAAK,EAAA,QAAA,CAAA;QACH,IAAI,EAAA,IAAA;QACJ,CAAC,EAAE,YAAY,CAAC,CAAC;QACjB,CAAC,EAAE,YAAY,CAAC;MAAC,CAAA,EACd,KAAK;KAEX,CAAC;IACF,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE;IAC5B;IACA,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;MAAE,CAAC,EAAE,YAAY,CAAC,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG;IAAO,CAAE,CAAC;EACzE,CAAC;EAED;EACQ,UAAA,CAAA,SAAA,CAAA,SAAS,GAAjB,YAAA;IACE,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;IACzC,IAAM,YAAY,GAAG;MAAE,CAAC,EAAE,CAAC;MAAE,CAAC,EAAE;IAAC,CAAE;IACnC,IAAI,UAAU,EAAE;MACd,IAAM,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC;MACjD,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B;;IACD,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;EAC1C,CAAC;;EACH,OAAA,UAAC;AAAD,CAAC,CAxI0E,cAAc,CAAA;AA0IzF,eAAe,UAAU","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { createBBox, formatPadding } from '../util/util';\nvar LegendBase = /** @class */ (function (_super) {\n    __extends(LegendBase, _super);\n    function LegendBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LegendBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'legend', \n            /**\n             * 布局方式： horizontal，vertical\n             * @type {String}\n             */\n            layout: 'horizontal', locationType: 'point', x: 0, y: 0, offsetX: 0, offsetY: 0, title: null, background: null });\n    };\n    LegendBase.prototype.getLayoutBBox = function () {\n        var bbox = _super.prototype.getLayoutBBox.call(this);\n        var maxWidth = this.get('maxWidth');\n        var maxHeight = this.get('maxHeight');\n        var width = bbox.width, height = bbox.height;\n        if (maxWidth) {\n            width = Math.min(width, maxWidth);\n        }\n        if (maxHeight) {\n            height = Math.min(height, maxHeight);\n        }\n        return createBBox(bbox.minX, bbox.minY, width, height);\n    };\n    LegendBase.prototype.setLocation = function (cfg) {\n        this.set('x', cfg.x);\n        this.set('y', cfg.y);\n        this.resetLocation();\n    };\n    LegendBase.prototype.resetLocation = function () {\n        var x = this.get('x');\n        var y = this.get('y');\n        var offsetX = this.get('offsetX');\n        var offsetY = this.get('offsetY');\n        this.moveElementTo(this.get('group'), {\n            x: x + offsetX,\n            y: y + offsetY,\n        });\n    };\n    LegendBase.prototype.applyOffset = function () {\n        this.resetLocation();\n    };\n    // 获取当前绘制的点\n    LegendBase.prototype.getDrawPoint = function () {\n        return this.get('currentPoint');\n    };\n    LegendBase.prototype.setDrawPoint = function (point) {\n        return this.set('currentPoint', point);\n    };\n    // 复写父类定义的绘制方法\n    LegendBase.prototype.renderInner = function (group) {\n        this.resetDraw();\n        if (this.get('title')) {\n            this.drawTitle(group);\n        }\n        this.drawLegendContent(group);\n        if (this.get('background')) {\n            this.drawBackground(group);\n        }\n        // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n    };\n    // 绘制背景\n    LegendBase.prototype.drawBackground = function (group) {\n        var background = this.get('background');\n        var bbox = group.getBBox();\n        var padding = formatPadding(background.padding);\n        var attrs = __assign({ \n            // 背景从 (0,0) 开始绘制\n            x: 0, y: 0, width: bbox.width + padding[1] + padding[3], height: bbox.height + padding[0] + padding[2] }, background.style);\n        var backgroundShape = this.addShape(group, {\n            type: 'rect',\n            id: this.getElementId('background'),\n            name: 'legend-background',\n            attrs: attrs,\n        });\n        backgroundShape.toBack();\n    };\n    // 绘制标题，标题在图例项的上面\n    LegendBase.prototype.drawTitle = function (group) {\n        var currentPoint = this.get('currentPoint');\n        var titleCfg = this.get('title');\n        var spacing = titleCfg.spacing, style = titleCfg.style, text = titleCfg.text;\n        var shape = this.addShape(group, {\n            type: 'text',\n            id: this.getElementId('title'),\n            name: 'legend-title',\n            attrs: __assign({ text: text, x: currentPoint.x, y: currentPoint.y }, style),\n        });\n        var bbox = shape.getBBox();\n        // 标题单独在一行\n        this.set('currentPoint', { x: currentPoint.x, y: bbox.maxY + spacing });\n    };\n    // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n    LegendBase.prototype.resetDraw = function () {\n        var background = this.get('background');\n        var currentPoint = { x: 0, y: 0 };\n        if (background) {\n            var padding = formatPadding(background.padding);\n            currentPoint.x = padding[3]; // 左边 padding\n            currentPoint.y = padding[0]; // 上面 padding\n        }\n        this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n    };\n    return LegendBase;\n}(GroupComponent));\nexport default LegendBase;\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}