{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\nvar SiblingTooltip = /** @class */function (_super) {\n  __extends(SiblingTooltip, _super);\n  function SiblingTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n  SiblingTooltip.prototype.showTooltip = function (view, point) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  };\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n  SiblingTooltip.prototype.hideTooltip = function (view) {\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      sibling.hideTooltip();\n    });\n  };\n  return SiblingTooltip;\n}(TooltipAction);\nexport default SiblingTooltip;","map":{"version":3,"sources":["../../../../../src/interaction/action/component/tooltip/sibling.ts"],"names":[],"mappings":";AAAA,SAAS,IAAI,QAAQ,YAAY;AAGjC,SAAS,eAAe,EAAE,WAAW,QAAQ,YAAY;AACzD,OAAO,aAAa,MAAM,YAAY;AAEtC;;;AAGG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6B,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAA7B,SAAA,cAAA,GAAA;;EAuBA;EAtBE;;;;AAIG;EACO,cAAA,CAAA,SAAA,CAAA,WAAW,GAArB,UAAsB,IAAU,EAAE,KAAY,EAAA;IAC5C,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;IAClC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO,EAAA;MACrB,IAAM,YAAY,GAAG,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;MAC1D,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EACD;;;AAGG;EACO,cAAA,CAAA,SAAA,CAAA,WAAW,GAArB,UAAsB,IAAI,EAAA;IACxB,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;IAClC,IAAI,CAAC,QAAQ,EAAE,UAAC,OAAO,EAAA;MACrB,OAAO,CAAC,WAAW,EAAE;IACvB,CAAC,CAAC;EACJ,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,CAvB4B,aAAa,CAAA;AAyB1C,eAAe,cAAc","sourcesContent":["import { each } from '@antv/util';\nimport { View } from '../../../../chart';\nimport { Point } from '../../../../interface';\nimport { getSiblingPoint, getSilbings } from '../../util';\nimport TooltipAction from './geometry';\n\n/**\n * 存在多个 view 时，控制其他 view 上的 tooltip 显示\n * @ignore\n */\nclass SiblingTooltip extends TooltipAction {\n  /**\n   * 所有同一层级的 tooltip 显示\n   * @param view\n   * @param point\n   */\n  protected showTooltip(view: View, point: Point) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const siblingPoint = getSiblingPoint(view, sibling, point);\n      sibling.showTooltip(siblingPoint);\n    });\n  }\n  /**\n   * 隐藏同一层级的 tooltip\n   * @param view\n   */\n  protected hideTooltip(view) {\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      sibling.hideTooltip();\n    });\n  }\n}\n\nexport default SiblingTooltip;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}