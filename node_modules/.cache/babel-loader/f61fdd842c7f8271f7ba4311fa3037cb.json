{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { each } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nvar CORNER_PERCENT = 1 / 3;\nfunction getVHVPath(from, to) {\n  var points = [];\n  points.push({\n    x: from.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT\n  });\n  points.push({\n    x: to.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT\n  });\n  points.push(to);\n  var path = [['M', from.x, from.y]];\n  each(points, function (point) {\n    path.push(['L', point.x, point.y]);\n  });\n  return path;\n}\nregisterShape('edge', 'vhv', {\n  draw: function (cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var points = cfg.points;\n    var path = this.parsePath(getVHVPath(points[0], points[1]));\n    return container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      })\n    });\n  },\n  getMarker: function (markerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/edge/vhv.ts"],"names":[],"mappings":";AAAA,SAAS,IAAI,QAAQ,YAAY;AAIjC,SAAS,aAAa,QAAQ,SAAS;AACvC,SAAS,QAAQ,QAAQ,mBAAmB;AAE5C,IAAM,cAAc,GAAG,CAAC,GAAG,CAAC;AAE5B,SAAS,UAAU,CAAC,IAAW,EAAE,EAAS,EAAA;EACxC,IAAM,MAAM,GAAG,EAAE;EACjB,MAAM,CAAC,IAAI,CAAC;IACV,CAAC,EAAE,IAAI,CAAC,CAAC;IACT,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG;GAC3C,CAAC;EACF,MAAM,CAAC,IAAI,CAAC;IACV,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG;GAC3C,CAAC;EACF,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;EAEf,IAAM,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EACpC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK,EAAA;IACjB,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,CAAC;EAEF,OAAO,IAAI;AACb;AAEA,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;EAC3B,IAAI,EAAA,UAAC,GAAc,EAAE,SAAiB,EAAA;IACpC,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,CAAC;IACrD,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM;IACzB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAU,EAAE,MAAM,CAAC,CAAC,CAAU,CAAC,CAAC;IAC/E,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;MAChC,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACA,KAAK,CAAA,EAAA;QACR,IAAI,EAAA;MAAA,CAAA;KAEP,CAAC;EACJ,CAAC;EACD,SAAS,EAAA,UAAC,SAAyB,EAAA;IACjC,OAAO;MACL,MAAM,EAAE,QAAQ;MAChB,KAAK,EAAE;QACL,CAAC,EAAE,GAAG;QACN,IAAI,EAAE,SAAS,CAAC;MACjB;KACF;EACH;CACD,CAAC","sourcesContent":["import { each } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n\nconst CORNER_PERCENT = 1 / 3;\n\nfunction getVHVPath(from: Point, to: Point) {\n  const points = [];\n  points.push({\n    x: from.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n  });\n  points.push({\n    x: to.x,\n    y: from.y * (1 - CORNER_PERCENT) + to.y * CORNER_PERCENT,\n  });\n  points.push(to);\n\n  const path = [['M', from.x, from.y]];\n  each(points, (point) => {\n    path.push(['L', point.x, point.y]);\n  });\n\n  return path;\n}\n\nregisterShape('edge', 'vhv', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const style = getStyle(cfg, true, false, 'lineWidth');\n    const points = cfg.points;\n    const path = this.parsePath(getVHVPath(points[0] as Point, points[1] as Point));\n    return container.addShape('path', {\n      attrs: {\n        ...style,\n        path,\n      },\n    });\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    return {\n      symbol: 'circle',\n      style: {\n        r: 4.5,\n        fill: markerCfg.color,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}