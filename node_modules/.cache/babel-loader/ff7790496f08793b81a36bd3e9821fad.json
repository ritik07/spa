{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport Theme from '../util/theme';\nimport { formatPadding } from '../util/util';\nvar CrosshairBase = /** @class */function (_super) {\n  __extends(CrosshairBase, _super);\n  function CrosshairBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CrosshairBase.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'crosshair',\n      type: 'base',\n      line: {},\n      text: null,\n      textBackground: {},\n      capture: false,\n      defaultCfg: {\n        line: {\n          style: {\n            lineWidth: 1,\n            stroke: Theme.lineColor\n          }\n        },\n        text: {\n          position: 'start',\n          offset: 10,\n          autoRotate: false,\n          content: null,\n          style: {\n            fill: Theme.textColor,\n            textAlign: 'center',\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily\n          }\n        },\n        textBackground: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor\n          }\n        }\n      }\n    });\n  };\n  CrosshairBase.prototype.renderInner = function (group) {\n    if (this.get('line')) {\n      this.renderLine(group);\n    }\n    if (this.get('text')) {\n      this.renderText(group);\n      this.renderBackground(group);\n    }\n  };\n  CrosshairBase.prototype.renderText = function (group) {\n    var text = this.get('text');\n    var style = text.style,\n      autoRotate = text.autoRotate,\n      content = text.content;\n    if (!isNil(content)) {\n      var textPoint = this.getTextPoint();\n      var matrix = null;\n      if (autoRotate) {\n        var angle = this.getRotateAngle();\n        matrix = getMatrixByAngle(textPoint, angle);\n      }\n      this.addShape(group, {\n        type: 'text',\n        name: 'crosshair-text',\n        id: this.getElementId('text'),\n        attrs: __assign(__assign(__assign({}, textPoint), {\n          text: content,\n          matrix: matrix\n        }), style)\n      });\n    }\n  };\n  CrosshairBase.prototype.renderLine = function (group) {\n    var path = this.getLinePath();\n    var line = this.get('line');\n    var style = line.style;\n    this.addShape(group, {\n      type: 'path',\n      name: 'crosshair-line',\n      id: this.getElementId('line'),\n      attrs: __assign({\n        path: path\n      }, style)\n    });\n  };\n  // 绘制文本的背景\n  CrosshairBase.prototype.renderBackground = function (group) {\n    var textId = this.getElementId('text');\n    var textShape = group.findById(textId); // 查找文本\n    var textBackground = this.get('textBackground');\n    if (textBackground && textShape) {\n      var textBBox = textShape.getBBox();\n      var padding = formatPadding(textBackground.padding); // 用户传入的 padding 格式不定\n      var style = textBackground.style;\n      var backgroundShape = this.addShape(group, {\n        type: 'rect',\n        name: 'crosshair-text-background',\n        id: this.getElementId('text-background'),\n        attrs: __assign({\n          x: textBBox.x - padding[3],\n          y: textBBox.y - padding[0],\n          width: textBBox.width + padding[1] + padding[3],\n          height: textBBox.height + padding[0] + padding[2],\n          matrix: textShape.attr('matrix')\n        }, style)\n      });\n      backgroundShape.toBack();\n    }\n  };\n  return CrosshairBase;\n}(GroupComponent);\nexport default CrosshairBase;","map":{"version":3,"sources":["../../src/crosshair/base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { getMatrixByAngle } from '../util/matrix';\nimport Theme from '../util/theme';\nimport { formatPadding } from '../util/util';\nvar CrosshairBase = /** @class */ (function (_super) {\n    __extends(CrosshairBase, _super);\n    function CrosshairBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CrosshairBase.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'crosshair', type: 'base', line: {}, text: null, textBackground: {}, capture: false, defaultCfg: {\n                line: {\n                    style: {\n                        lineWidth: 1,\n                        stroke: Theme.lineColor,\n                    },\n                },\n                text: {\n                    position: 'start',\n                    offset: 10,\n                    autoRotate: false,\n                    content: null,\n                    style: {\n                        fill: Theme.textColor,\n                        textAlign: 'center',\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                    },\n                },\n                textBackground: {\n                    padding: 5,\n                    style: {\n                        stroke: Theme.lineColor,\n                    },\n                },\n            } });\n    };\n    CrosshairBase.prototype.renderInner = function (group) {\n        if (this.get('line')) {\n            this.renderLine(group);\n        }\n        if (this.get('text')) {\n            this.renderText(group);\n            this.renderBackground(group);\n        }\n    };\n    CrosshairBase.prototype.renderText = function (group) {\n        var text = this.get('text');\n        var style = text.style, autoRotate = text.autoRotate, content = text.content;\n        if (!isNil(content)) {\n            var textPoint = this.getTextPoint();\n            var matrix = null;\n            if (autoRotate) {\n                var angle = this.getRotateAngle();\n                matrix = getMatrixByAngle(textPoint, angle);\n            }\n            this.addShape(group, {\n                type: 'text',\n                name: 'crosshair-text',\n                id: this.getElementId('text'),\n                attrs: __assign(__assign(__assign({}, textPoint), { text: content, matrix: matrix }), style),\n            });\n        }\n    };\n    CrosshairBase.prototype.renderLine = function (group) {\n        var path = this.getLinePath();\n        var line = this.get('line');\n        var style = line.style;\n        this.addShape(group, {\n            type: 'path',\n            name: 'crosshair-line',\n            id: this.getElementId('line'),\n            attrs: __assign({ path: path }, style),\n        });\n    };\n    // 绘制文本的背景\n    CrosshairBase.prototype.renderBackground = function (group) {\n        var textId = this.getElementId('text');\n        var textShape = group.findById(textId); // 查找文本\n        var textBackground = this.get('textBackground');\n        if (textBackground && textShape) {\n            var textBBox = textShape.getBBox();\n            var padding = formatPadding(textBackground.padding); // 用户传入的 padding 格式不定\n            var style = textBackground.style;\n            var backgroundShape = this.addShape(group, {\n                type: 'rect',\n                name: 'crosshair-text-background',\n                id: this.getElementId('text-background'),\n                attrs: __assign({ x: textBBox.x - padding[3], y: textBBox.y - padding[0], width: textBBox.width + padding[1] + padding[3], height: textBBox.height + padding[0] + padding[2], matrix: textShape.attr('matrix') }, style),\n            });\n            backgroundShape.toBack();\n        }\n    };\n    return CrosshairBase;\n}(GroupComponent));\nexport default CrosshairBase;\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}