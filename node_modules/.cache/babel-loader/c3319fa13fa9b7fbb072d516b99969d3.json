{"ast":null,"code":"import { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nexport function adjustColor(items, labels, shapes) {\n  if (shapes.length === 0) {\n    return;\n  }\n  var element = shapes[0].get('element');\n  var theme = element.geometry.theme;\n  var _a = theme.labels || {},\n    fillColorLight = _a.fillColorLight,\n    fillColorDark = _a.fillColorDark;\n  shapes.forEach(function (shape, index) {\n    var label = labels[index];\n    var textShape = label.find(function (el) {\n      return el.get('type') === 'text';\n    });\n    var shapeBBox = BBox.fromObject(shape.getBBox());\n    var textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    var overflow = !shapeBBox.contains(textBBox);\n    var bgColor = shape.attr('fill');\n    var fillWhite = isContrastColorWhite(bgColor);\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}","map":{"version":3,"sources":["../../../../src/geometry/label/layout/adjust-color.ts"],"names":[],"mappings":"AACA,SAAS,IAAI,QAAQ,oBAAoB;AACzC,SAAS,oBAAoB,QAAQ,qBAAqB;AAI1D,OAAM,SAAU,WAAW,CAAC,KAAkB,EAAE,MAAgB,EAAE,MAA2B,EAAA;EAC3F,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IACvB;EACD;EACD,IAAM,OAAO,GAAY,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC;EACjD,IAAM,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK;EAC9B,IAAA,EAAA,GAAoC,KAAK,CAAC,MAAM,IAAI,CAAA,CAAE;IAApD,cAAc,GAAA,EAAA,CAAA,cAAA;IAAE,aAAa,GAAA,EAAA,CAAA,aAAuB;EAE5D,MAAM,CAAC,OAAO,CAAC,UAAC,KAAsB,EAAE,KAAa,EAAA;IACnD,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC3B,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,UAAC,EAAE,EAAA;MAAK,OAAA,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM;IAAzB,CAAyB,CAAC;IAC/D,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAClD,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;IAC3D,IAAM,QAAQ,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAE9C,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;IAClC,IAAM,SAAS,GAAG,oBAAoB,CAAC,OAAO,CAAC;IAE/C,IAAI,CAAC,QAAQ,EAAE;MACb,IAAI,SAAS,EAAE;QACb,IAAI,cAAc,EAAE;UAClB,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC;QACvC;OACF,MAAM;QACL,IAAI,aAAa,EAAE;UACjB,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC;QACtC;MACF;KACF,MAAM;MACL;MACA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC;IAC3C;EACH,CAAC,CAAC;AACJ","sourcesContent":["import { IGroup, IShape } from '../../../dependents';\nimport { BBox } from '../../../util/bbox';\nimport { isContrastColorWhite } from '../../../util/color';\nimport Element from '../../element';\nimport { LabelItem } from '../interface';\n\nexport function adjustColor(items: LabelItem[], labels: IGroup[], shapes: IShape[] | IGroup[]) {\n  if (shapes.length === 0) {\n    return;\n  }\n  const element: Element = shapes[0].get('element');\n  const theme = element.geometry.theme;\n  const { fillColorLight, fillColorDark } = theme.labels || {};\n\n  shapes.forEach((shape: IShape | IGroup, index: number) => {\n    const label = labels[index];\n    const textShape = label.find((el) => el.get('type') === 'text');\n    const shapeBBox = BBox.fromObject(shape.getBBox());\n    const textBBox = BBox.fromObject(textShape.getCanvasBBox());\n    const overflow = !shapeBBox.contains(textBBox);\n\n    const bgColor = shape.attr('fill');\n    const fillWhite = isContrastColorWhite(bgColor);\n\n    if (!overflow) {\n      if (fillWhite) {\n        if (fillColorLight) {\n          textShape.attr('fill', fillColorLight);\n        }\n      } else {\n        if (fillColorDark) {\n          textShape.attr('fill', fillColorDark);\n        }\n      }\n    } else {\n      // 出现溢出直接应用 overflowLabel 样式\n      textShape.attr(theme.overflowLabels.style);\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}