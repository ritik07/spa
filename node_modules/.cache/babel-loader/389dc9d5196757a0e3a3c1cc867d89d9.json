{"ast":null,"code":"import { each, isArray, isNil, isNumber } from '@antv/util';\nexport function formatPadding(padding) {\n  var top = 0;\n  var left = 0;\n  var right = 0;\n  var bottom = 0;\n  if (isNumber(padding)) {\n    top = left = right = bottom = padding;\n  } else if (isArray(padding)) {\n    top = padding[0];\n    right = !isNil(padding[1]) ? padding[1] : padding[0];\n    bottom = !isNil(padding[2]) ? padding[2] : padding[0];\n    left = !isNil(padding[3]) ? padding[3] : right;\n  }\n  return [top, right, bottom, left];\n}\nexport function clearDom(container) {\n  var children = container.childNodes;\n  var length = children.length;\n  for (var i = length - 1; i >= 0; i--) {\n    container.removeChild(children[i]);\n  }\n}\nexport function hasClass(elements, cName) {\n  return !!elements.className.match(new RegExp(\"(\\\\s|^)\" + cName + \"(\\\\s|$)\"));\n}\nexport function regionToBBox(region) {\n  var start = region.start,\n    end = region.end;\n  var minX = Math.min(start.x, end.x);\n  var minY = Math.min(start.y, end.y);\n  var maxX = Math.max(start.x, end.x);\n  var maxY = Math.max(start.y, end.y);\n  return {\n    x: minX,\n    y: minY,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nexport function pointsToBBox(points) {\n  var xs = points.map(function (point) {\n    return point.x;\n  });\n  var ys = points.map(function (point) {\n    return point.y;\n  });\n  var minX = Math.min.apply(Math, xs);\n  var minY = Math.min.apply(Math, ys);\n  var maxX = Math.max.apply(Math, xs);\n  var maxY = Math.max.apply(Math, ys);\n  return {\n    x: minX,\n    y: minY,\n    minX: minX,\n    minY: minY,\n    maxX: maxX,\n    maxY: maxY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nexport function createBBox(x, y, width, height) {\n  var maxX = x + width;\n  var maxY = y + height;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    minX: x,\n    minY: y,\n    // 非常奇葩的 js 特性\n    // Infinity + Infinity = Infinity\n    // Infinity - Infinity = NaN\n    // fixed https://github.com/antvis/G2Plot/issues/1243\n    maxX: isNaN(maxX) ? 0 : maxX,\n    maxY: isNaN(maxY) ? 0 : maxY\n  };\n}\nexport function getValueByPercent(min, max, percent) {\n  return (1 - percent) * min + max * percent;\n}\nexport function getCirclePoint(center, radius, angle) {\n  return {\n    x: center.x + Math.cos(angle) * radius,\n    y: center.y + Math.sin(angle) * radius\n  };\n}\nexport function distance(p1, p2) {\n  var dx = p2.x - p1.x;\n  var dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\nexport var wait = function (interval) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, interval);\n  });\n};\n/**\n * 判断两个数值 是否接近\n * - 解决精度问题（由于无法确定精度上限，根据具体场景可传入 精度 参数）\n */\nexport var near = function (x, y, e) {\n  if (e === void 0) {\n    e = Math.pow(Number.EPSILON, 0.5);\n  }\n  return [x, y].includes(Infinity) ? Math.abs(x) === Math.abs(y) : Math.abs(x - y) < e;\n};\nexport function intersectBBox(box1, box2) {\n  var minX = Math.max(box1.minX, box2.minX);\n  var minY = Math.max(box1.minY, box2.minY);\n  var maxX = Math.min(box1.maxX, box2.maxX);\n  var maxY = Math.min(box1.maxY, box2.maxY);\n  return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\nexport function mergeBBox(box1, box2) {\n  var minX = Math.min(box1.minX, box2.minX);\n  var minY = Math.min(box1.minY, box2.minY);\n  var maxX = Math.max(box1.maxX, box2.maxX);\n  var maxY = Math.max(box1.maxY, box2.maxY);\n  return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\nexport function getBBoxWithClip(element) {\n  var clipShape = element.getClip();\n  var clipBBox = clipShape && clipShape.getBBox();\n  var bbox;\n  if (!element.isGroup()) {\n    // 如果是普通的图形\n    bbox = element.getBBox();\n  } else {\n    var minX_1 = Infinity;\n    var maxX_1 = -Infinity;\n    var minY_1 = Infinity;\n    var maxY_1 = -Infinity;\n    var children = element.getChildren();\n    if (children.length > 0) {\n      each(children, function (child) {\n        if (child.get('visible')) {\n          // 如果分组没有子元素，则直接跳过\n          if (child.isGroup() && child.get('children').length === 0) {\n            return true;\n          }\n          var box = getBBoxWithClip(child);\n          // 计算 4 个顶点\n          var leftTop = child.applyToMatrix([box.minX, box.minY, 1]);\n          var leftBottom = child.applyToMatrix([box.minX, box.maxY, 1]);\n          var rightTop = child.applyToMatrix([box.maxX, box.minY, 1]);\n          var rightBottom = child.applyToMatrix([box.maxX, box.maxY, 1]);\n          // 从中取最小的范围\n          var boxMinX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          var boxMaxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          var boxMinY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n          var boxMaxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n          if (boxMinX < minX_1) {\n            minX_1 = boxMinX;\n          }\n          if (boxMaxX > maxX_1) {\n            maxX_1 = boxMaxX;\n          }\n          if (boxMinY < minY_1) {\n            minY_1 = boxMinY;\n          }\n          if (boxMaxY > maxY_1) {\n            maxY_1 = boxMaxY;\n          }\n        }\n      });\n    } else {\n      minX_1 = 0;\n      maxX_1 = 0;\n      minY_1 = 0;\n      maxY_1 = 0;\n    }\n    bbox = createBBox(minX_1, minY_1, maxX_1 - minX_1, maxY_1 - minY_1);\n  }\n  if (clipBBox) {\n    return intersectBBox(bbox, clipBBox);\n  } else {\n    return bbox;\n  }\n}\nexport function updateClip(element, newElement) {\n  if (!element.getClip() && !newElement.getClip()) {\n    // 两者都没有 clip\n    return;\n  }\n  var newClipShape = newElement.getClip();\n  if (!newClipShape) {\n    // 新的 element 没有 clip\n    element.setClip(null); // 移除 clip\n    return;\n  }\n  var clipCfg = {\n    type: newClipShape.get('type'),\n    attrs: newClipShape.attr()\n  };\n  element.setClip(clipCfg);\n}\nexport function toPx(number) {\n  return number + \"px\";\n}\nexport function getTextPoint(start, end, position, offset) {\n  var lineLength = distance(start, end);\n  var offsetPercent = offset / lineLength; // 计算间距同线的比例，用于计算最终的位置\n  var percent = 0;\n  if (position === 'start') {\n    percent = 0 - offsetPercent;\n  } else if (position === 'end') {\n    percent = 1 + offsetPercent;\n  }\n  return {\n    x: getValueByPercent(start.x, end.x, percent),\n    y: getValueByPercent(start.y, end.y, percent)\n  };\n}","map":{"version":3,"sources":["../../src/util/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { each, isArray, isNil, isNumber } from '@antv/util';\nexport function formatPadding(padding) {\n    var top = 0;\n    var left = 0;\n    var right = 0;\n    var bottom = 0;\n    if (isNumber(padding)) {\n        top = left = right = bottom = padding;\n    }\n    else if (isArray(padding)) {\n        top = padding[0];\n        right = !isNil(padding[1]) ? padding[1] : padding[0];\n        bottom = !isNil(padding[2]) ? padding[2] : padding[0];\n        left = !isNil(padding[3]) ? padding[3] : right;\n    }\n    return [top, right, bottom, left];\n}\nexport function clearDom(container) {\n    var children = container.childNodes;\n    var length = children.length;\n    for (var i = length - 1; i >= 0; i--) {\n        container.removeChild(children[i]);\n    }\n}\nexport function hasClass(elements, cName) {\n    return !!elements.className.match(new RegExp(\"(\\\\s|^)\" + cName + \"(\\\\s|$)\"));\n}\nexport function regionToBBox(region) {\n    var start = region.start, end = region.end;\n    var minX = Math.min(start.x, end.x);\n    var minY = Math.min(start.y, end.y);\n    var maxX = Math.max(start.x, end.x);\n    var maxY = Math.max(start.y, end.y);\n    return {\n        x: minX,\n        y: minY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        width: maxX - minX,\n        height: maxY - minY,\n    };\n}\nexport function pointsToBBox(points) {\n    var xs = points.map(function (point) { return point.x; });\n    var ys = points.map(function (point) { return point.y; });\n    var minX = Math.min.apply(Math, xs);\n    var minY = Math.min.apply(Math, ys);\n    var maxX = Math.max.apply(Math, xs);\n    var maxY = Math.max.apply(Math, ys);\n    return {\n        x: minX,\n        y: minY,\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n        width: maxX - minX,\n        height: maxY - minY,\n    };\n}\nexport function createBBox(x, y, width, height) {\n    var maxX = x + width;\n    var maxY = y + height;\n    return {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        minX: x,\n        minY: y,\n        // 非常奇葩的 js 特性\n        // Infinity + Infinity = Infinity\n        // Infinity - Infinity = NaN\n        // fixed https://github.com/antvis/G2Plot/issues/1243\n        maxX: isNaN(maxX) ? 0 : maxX,\n        maxY: isNaN(maxY) ? 0 : maxY,\n    };\n}\nexport function getValueByPercent(min, max, percent) {\n    return (1 - percent) * min + max * percent;\n}\nexport function getCirclePoint(center, radius, angle) {\n    return {\n        x: center.x + Math.cos(angle) * radius,\n        y: center.y + Math.sin(angle) * radius,\n    };\n}\nexport function distance(p1, p2) {\n    var dx = p2.x - p1.x;\n    var dy = p2.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\nexport var wait = function (interval) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, interval);\n    });\n};\n/**\n * 判断两个数值 是否接近\n * - 解决精度问题（由于无法确定精度上限，根据具体场景可传入 精度 参数）\n */\nexport var near = function (x, y, e) {\n    if (e === void 0) { e = Math.pow(Number.EPSILON, 0.5); }\n    return [x, y].includes(Infinity) ? Math.abs(x) === Math.abs(y) : Math.abs(x - y) < e;\n};\nexport function intersectBBox(box1, box2) {\n    var minX = Math.max(box1.minX, box2.minX);\n    var minY = Math.max(box1.minY, box2.minY);\n    var maxX = Math.min(box1.maxX, box2.maxX);\n    var maxY = Math.min(box1.maxY, box2.maxY);\n    return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\nexport function mergeBBox(box1, box2) {\n    var minX = Math.min(box1.minX, box2.minX);\n    var minY = Math.min(box1.minY, box2.minY);\n    var maxX = Math.max(box1.maxX, box2.maxX);\n    var maxY = Math.max(box1.maxY, box2.maxY);\n    return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\nexport function getBBoxWithClip(element) {\n    var clipShape = element.getClip();\n    var clipBBox = clipShape && clipShape.getBBox();\n    var bbox;\n    if (!element.isGroup()) {\n        // 如果是普通的图形\n        bbox = element.getBBox();\n    }\n    else {\n        var minX_1 = Infinity;\n        var maxX_1 = -Infinity;\n        var minY_1 = Infinity;\n        var maxY_1 = -Infinity;\n        var children = element.getChildren();\n        if (children.length > 0) {\n            each(children, function (child) {\n                if (child.get('visible')) {\n                    // 如果分组没有子元素，则直接跳过\n                    if (child.isGroup() && child.get('children').length === 0) {\n                        return true;\n                    }\n                    var box = getBBoxWithClip(child);\n                    // 计算 4 个顶点\n                    var leftTop = child.applyToMatrix([box.minX, box.minY, 1]);\n                    var leftBottom = child.applyToMatrix([box.minX, box.maxY, 1]);\n                    var rightTop = child.applyToMatrix([box.maxX, box.minY, 1]);\n                    var rightBottom = child.applyToMatrix([box.maxX, box.maxY, 1]);\n                    // 从中取最小的范围\n                    var boxMinX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n                    var boxMaxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n                    var boxMinY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n                    var boxMaxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n                    if (boxMinX < minX_1) {\n                        minX_1 = boxMinX;\n                    }\n                    if (boxMaxX > maxX_1) {\n                        maxX_1 = boxMaxX;\n                    }\n                    if (boxMinY < minY_1) {\n                        minY_1 = boxMinY;\n                    }\n                    if (boxMaxY > maxY_1) {\n                        maxY_1 = boxMaxY;\n                    }\n                }\n            });\n        }\n        else {\n            minX_1 = 0;\n            maxX_1 = 0;\n            minY_1 = 0;\n            maxY_1 = 0;\n        }\n        bbox = createBBox(minX_1, minY_1, maxX_1 - minX_1, maxY_1 - minY_1);\n    }\n    if (clipBBox) {\n        return intersectBBox(bbox, clipBBox);\n    }\n    else {\n        return bbox;\n    }\n}\nexport function updateClip(element, newElement) {\n    if (!element.getClip() && !newElement.getClip()) {\n        // 两者都没有 clip\n        return;\n    }\n    var newClipShape = newElement.getClip();\n    if (!newClipShape) {\n        // 新的 element 没有 clip\n        element.setClip(null); // 移除 clip\n        return;\n    }\n    var clipCfg = {\n        type: newClipShape.get('type'),\n        attrs: newClipShape.attr(),\n    };\n    element.setClip(clipCfg);\n}\nexport function toPx(number) {\n    return number + \"px\";\n}\nexport function getTextPoint(start, end, position, offset) {\n    var lineLength = distance(start, end);\n    var offsetPercent = offset / lineLength; // 计算间距同线的比例，用于计算最终的位置\n    var percent = 0;\n    if (position === 'start') {\n        percent = 0 - offsetPercent;\n    }\n    else if (position === 'end') {\n        percent = 1 + offsetPercent;\n    }\n    return {\n        x: getValueByPercent(start.x, end.x, percent),\n        y: getValueByPercent(start.y, end.y, percent),\n    };\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}