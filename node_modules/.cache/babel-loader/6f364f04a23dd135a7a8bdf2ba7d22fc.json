{"ast":null,"code":"import { setTransform, setClip } from './svg';\nimport { sortDom, moveTo } from './dom';\nexport function drawChildren(context, children) {\n  children.forEach(function (child) {\n    child.draw(context);\n  });\n}\n/**\n * 更新元素，包括 group 和 shape\n * @param {IElement} element       SVG 元素\n * @param {ChangeType} changeType  更新类型\n */\nexport function refreshElement(element, changeType) {\n  // 对于还没有挂载到画布下的元素，canvas 可能为空\n  var canvas = element.get('canvas');\n  // 只有挂载到画布下，才对元素进行实际渲染\n  if (canvas && canvas.get('autoDraw')) {\n    var context = canvas.get('context');\n    var parent_1 = element.getParent();\n    var parentChildren = parent_1 ? parent_1.getChildren() : [canvas];\n    var el = element.get('el');\n    if (changeType === 'remove') {\n      var isClipShape = element.get('isClipShape');\n      // 对于 clip，不仅需要将 clipShape 对于的 SVG 元素删除，还需要将上层的 clipPath 元素也删除\n      if (isClipShape) {\n        var clipPathEl = el && el.parentNode;\n        var defsEl = clipPathEl && clipPathEl.parentNode;\n        if (clipPathEl && defsEl) {\n          defsEl.removeChild(clipPathEl);\n        }\n      } else if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    } else if (changeType === 'show') {\n      el.setAttribute('visibility', 'visible');\n    } else if (changeType === 'hide') {\n      el.setAttribute('visibility', 'hidden');\n    } else if (changeType === 'zIndex') {\n      moveTo(el, parentChildren.indexOf(element));\n    } else if (changeType === 'sort') {\n      var children_1 = element.get('children');\n      if (children_1 && children_1.length) {\n        sortDom(element, function (a, b) {\n          return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n        });\n      }\n    } else if (changeType === 'clear') {\n      // el maybe null for group\n      if (el) {\n        el.innerHTML = '';\n      }\n    } else if (changeType === 'matrix') {\n      setTransform(element);\n    } else if (changeType === 'clip') {\n      setClip(element, context);\n    } else if (changeType === 'attr') {\n      // 已在 afterAttrsChange 进行了处理，此处 do nothing\n    } else if (changeType === 'add') {\n      element.draw(context);\n    }\n  }\n}","map":{"version":3,"sources":["../../src/util/draw.ts"],"names":[],"mappings":"AAEA,SAAS,YAAY,EAAE,OAAO,QAAQ,OAAO;AAC7C,SAAS,OAAO,EAAE,MAAM,QAAQ,OAAO;AAGvC,OAAM,SAAU,YAAY,CAAC,OAAa,EAAE,QAAoB,EAAA;EAC9D,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAK,EAAA;IACrB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;EACrB,CAAC,CAAC;AACJ;AAEA;;;;AAIG;AACH,OAAM,SAAU,cAAc,CAAC,OAAiB,EAAE,UAAsB,EAAA;EACtE;EACA,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;EACpC;EACA,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IACpC,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;IACrC,IAAM,QAAM,GAAG,OAAO,CAAC,SAAS,EAAE;IAClC,IAAM,cAAc,GAAG,QAAM,GAAG,QAAM,CAAC,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC;IAC/D,IAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;IAC5B,IAAI,UAAU,KAAK,QAAQ,EAAE;MAC3B,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;MAC9C;MACA,IAAI,WAAW,EAAE;QACf,IAAM,UAAU,GAAG,EAAE,IAAI,EAAE,CAAC,UAAU;QACtC,IAAM,MAAM,GAAG,UAAU,IAAI,UAAU,CAAC,UAAU;QAClD,IAAI,UAAU,IAAI,MAAM,EAAE;UACxB,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC;QAC/B;OACF,MAAM,IAAI,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE;QAC9B,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC;MAC9B;KACF,MAAM,IAAI,UAAU,KAAK,MAAM,EAAE;MAChC,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,CAAC;KACzC,MAAM,IAAI,UAAU,KAAK,MAAM,EAAE;MAChC,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,CAAC;KACxC,MAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;MAClC,MAAM,CAAC,EAAE,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC5C,MAAM,IAAI,UAAU,KAAK,MAAM,EAAE;MAChC,IAAM,UAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;MACxC,IAAI,UAAQ,IAAI,UAAQ,CAAC,MAAM,EAAE;QAC/B,OAAO,CAAC,OAAO,EAAE,UAAC,CAAW,EAAE,CAAW,EAAA;UACxC,OAAO,UAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,UAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QAC1D,CAAC,CAAC;MACH;KACF,MAAM,IAAI,UAAU,KAAK,OAAO,EAAE;MACjC;MACA,IAAI,EAAE,EAAE;QACN,EAAE,CAAC,SAAS,GAAG,EAAE;MAClB;KACF,MAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;MAClC,YAAY,CAAC,OAAO,CAAC;KACtB,MAAM,IAAI,UAAU,KAAK,MAAM,EAAE;MAChC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;KAC1B,MAAM,IAAI,UAAU,KAAK,MAAM,EAAE;MAChC;IAAA,CACD,MAAM,IAAI,UAAU,KAAK,KAAK,EAAE;MAC/B,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB;EACF;AACH","sourceRoot":"","sourcesContent":["import { setTransform, setClip } from './svg';\nimport { sortDom, moveTo } from './dom';\nexport function drawChildren(context, children) {\n    children.forEach(function (child) {\n        child.draw(context);\n    });\n}\n/**\n * 更新元素，包括 group 和 shape\n * @param {IElement} element       SVG 元素\n * @param {ChangeType} changeType  更新类型\n */\nexport function refreshElement(element, changeType) {\n    // 对于还没有挂载到画布下的元素，canvas 可能为空\n    var canvas = element.get('canvas');\n    // 只有挂载到画布下，才对元素进行实际渲染\n    if (canvas && canvas.get('autoDraw')) {\n        var context = canvas.get('context');\n        var parent_1 = element.getParent();\n        var parentChildren = parent_1 ? parent_1.getChildren() : [canvas];\n        var el = element.get('el');\n        if (changeType === 'remove') {\n            var isClipShape = element.get('isClipShape');\n            // 对于 clip，不仅需要将 clipShape 对于的 SVG 元素删除，还需要将上层的 clipPath 元素也删除\n            if (isClipShape) {\n                var clipPathEl = el && el.parentNode;\n                var defsEl = clipPathEl && clipPathEl.parentNode;\n                if (clipPathEl && defsEl) {\n                    defsEl.removeChild(clipPathEl);\n                }\n            }\n            else if (el && el.parentNode) {\n                el.parentNode.removeChild(el);\n            }\n        }\n        else if (changeType === 'show') {\n            el.setAttribute('visibility', 'visible');\n        }\n        else if (changeType === 'hide') {\n            el.setAttribute('visibility', 'hidden');\n        }\n        else if (changeType === 'zIndex') {\n            moveTo(el, parentChildren.indexOf(element));\n        }\n        else if (changeType === 'sort') {\n            var children_1 = element.get('children');\n            if (children_1 && children_1.length) {\n                sortDom(element, function (a, b) {\n                    return children_1.indexOf(a) - children_1.indexOf(b) ? 1 : 0;\n                });\n            }\n        }\n        else if (changeType === 'clear') {\n            // el maybe null for group\n            if (el) {\n                el.innerHTML = '';\n            }\n        }\n        else if (changeType === 'matrix') {\n            setTransform(element);\n        }\n        else if (changeType === 'clip') {\n            setClip(element, context);\n        }\n        else if (changeType === 'attr') {\n            // 已在 afterAttrsChange 进行了处理，此处 do nothing\n        }\n        else if (changeType === 'add') {\n            element.draw(context);\n        }\n    }\n}\n//# sourceMappingURL=draw.js.map"]},"metadata":{},"sourceType":"module"}