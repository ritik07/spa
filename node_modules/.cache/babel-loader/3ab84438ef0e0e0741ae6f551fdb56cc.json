{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getElements, getMaskedElements, getSiblingMaskElements, getSilbings, isInRecords, isMask } from '../util';\n/**\n * Sibling filter\n * @ignore\n */\nvar SiblingFilter = /** @class */function (_super) {\n  __extends(SiblingFilter, _super);\n  function SiblingFilter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.byRecord = false;\n    return _this;\n  }\n  /**\n   * 过滤隐藏图形\n   */\n  SiblingFilter.prototype.filter = function () {\n    // 仅考虑 mask 导致的过滤\n    if (isMask(this.context)) {\n      if (this.byRecord) {\n        this.filterByRecord();\n      } else {\n        this.filterByBBox();\n      }\n    }\n  };\n  // 根据框选的记录来做过滤\n  SiblingFilter.prototype.filterByRecord = function () {\n    var view = this.context.view;\n    var maskElements = getMaskedElements(this.context, 10);\n    if (!maskElements) {\n      return;\n    }\n    var xFiled = view.getXScale().field;\n    var yField = view.getYScales()[0].field;\n    var records = maskElements.map(function (el) {\n      return el.getModel().data;\n    });\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var elements = getElements(sibling);\n      each(elements, function (el) {\n        var record = el.getModel().data;\n        // records.includes(record) 不生效，应该是数据的引用被改了\n        if (isInRecords(records, record, xFiled, yField)) {\n          el.show();\n        } else {\n          el.hide();\n        }\n      });\n    });\n  };\n  // 根据被框选的包围盒做过滤\n  SiblingFilter.prototype.filterByBBox = function () {\n    var _this = this;\n    var view = this.context.view;\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var maskElements = getSiblingMaskElements(_this.context, sibling, 10);\n      var elements = getElements(sibling);\n      if (maskElements) {\n        // mask 过小时返回为 null，不能是空数组，否则同未框选到混淆\n        each(elements, function (el) {\n          if (maskElements.includes(el)) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    });\n  };\n  /**\n   * 清理所有隐藏的图形\n   */\n  SiblingFilter.prototype.reset = function () {\n    var siblings = getSilbings(this.context.view);\n    each(siblings, function (sibling) {\n      var elements = getElements(sibling);\n      each(elements, function (el) {\n        el.show();\n      });\n    });\n  };\n  return SiblingFilter;\n}(Action);\nexport default SiblingFilter;","map":{"version":3,"sources":["../../../../src/interaction/action/element/sibling-filter.ts"],"names":[],"mappings":"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","sourcesContent":["import { each } from '@antv/util';\nimport Action from '../base';\nimport { getElements, getMaskedElements, getSiblingMaskElements, getSilbings, isInRecords, isMask } from '../util';\n\n/**\n * Sibling filter\n * @ignore\n */\nclass SiblingFilter extends Action {\n  protected byRecord = false;\n  /**\n   * 过滤隐藏图形\n   */\n  public filter() {\n    // 仅考虑 mask 导致的过滤\n    if (isMask(this.context)) {\n      if (this.byRecord) {\n        this.filterByRecord();\n      } else {\n        this.filterByBBox();\n      }\n    }\n  }\n  // 根据框选的记录来做过滤\n  private filterByRecord() {\n    const view = this.context.view;\n    const maskElements = getMaskedElements(this.context, 10);\n    if (!maskElements) {\n      return;\n    }\n    const xFiled = view.getXScale().field;\n    const yField = view.getYScales()[0].field;\n    const records = maskElements.map((el) => {\n      return el.getModel().data;\n    });\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const elements = getElements(sibling);\n      each(elements, (el) => {\n        const record = el.getModel().data;\n        // records.includes(record) 不生效，应该是数据的引用被改了\n        if (isInRecords(records, record, xFiled, yField)) {\n          el.show();\n        } else {\n          el.hide();\n        }\n      });\n    });\n  }\n\n  // 根据被框选的包围盒做过滤\n  private filterByBBox() {\n    const view = this.context.view;\n    const siblings = getSilbings(view);\n    each(siblings, (sibling) => {\n      const maskElements = getSiblingMaskElements(this.context, sibling, 10);\n      const elements = getElements(sibling);\n      if (maskElements) {\n        // mask 过小时返回为 null，不能是空数组，否则同未框选到混淆\n        each(elements, (el) => {\n          if (maskElements.includes(el)) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * 清理所有隐藏的图形\n   */\n  public reset() {\n    const siblings = getSilbings(this.context.view);\n    each(siblings, (sibling) => {\n      const elements = getElements(sibling);\n      each(elements, (el) => {\n        el.show();\n      });\n    });\n  }\n}\n\nexport default SiblingFilter;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}