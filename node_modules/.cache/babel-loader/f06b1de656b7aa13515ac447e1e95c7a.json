{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\nvar EVENTS;\n(function (EVENTS) {\n  EVENTS[\"BEFORE_HIGHLIGHT\"] = \"element-range-highlight:beforehighlight\";\n  EVENTS[\"AFTER_HIGHLIGHT\"] = \"element-range-highlight:afterhighlight\";\n  EVENTS[\"BEFORE_CLEAR\"] = \"element-range-highlight:beforeclear\";\n  EVENTS[\"AFTER_CLEAR\"] = \"element-range-highlight:afterclear\";\n})(EVENTS || (EVENTS = {}));\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nvar ElementRangeHighlight = /** @class */function (_super) {\n  __extends(ElementRangeHighlight, _super);\n  function ElementRangeHighlight() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.stateName = 'active';\n    return _this;\n  }\n  // 清理掉所有的 active， unactive 状态\n  ElementRangeHighlight.prototype.clearViewState = function (view) {\n    clearHighlight(view);\n  };\n  /**\n   * 设置 highlight\n   */\n  ElementRangeHighlight.prototype.highlight = function () {\n    var _a = this.context,\n      view = _a.view,\n      event = _a.event;\n    var elements = this.getIntersectElements();\n    var payload = {\n      view: view,\n      event: event,\n      highlightElements: elements\n    };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  };\n  /**\n   * @overrider 添加事件\n   */\n  ElementRangeHighlight.prototype.clear = function () {\n    var view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n    _super.prototype.clear.call(this);\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  };\n  ElementRangeHighlight.prototype.setElementsState = function (elements, enable, allElements) {\n    setHighlightBy(allElements, function (el) {\n      return elements.indexOf(el) >= 0;\n    }, enable);\n  };\n  return ElementRangeHighlight;\n}(ElementRangeState);\nexport default ElementRangeHighlight;","map":{"version":3,"sources":["../../../../src/interaction/action/element/range-highlight.ts"],"names":[],"mappings":";AACA,SAAS,KAAK,QAAQ,gBAAgB;AACtC,SAAS,cAAc,EAAE,cAAc,QAAQ,kBAAkB;AACjE,OAAO,iBAAiB,MAAM,eAAe;AAE7C,IAAK,MAKJ;AALD,CAAA,UAAK,MAAM,EAAA;EACT,MAAA,CAAA,kBAAA,CAAA,GAAA,yCAA4D;EAC5D,MAAA,CAAA,iBAAA,CAAA,GAAA,wCAA0D;EAC1D,MAAA,CAAA,cAAA,CAAA,GAAA,qCAAoD;EACpD,MAAA,CAAA,aAAA,CAAA,GAAA,oCAAkD;AACpD,CAAC,EALI,MAAM,KAAN,MAAM,GAAA,CAAA,CAAA,CAAA,CAAA;AAOX,SAAS,MAAM,IAAI,8BAA8B;AAEjD;;;AAGG;AACH,IAAA,qBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;EAApC,SAAA,qBAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACY,KAAA,CAAA,SAAS,GAAW,QAAQ;;EAgCxC;EA9BE;EACU,qBAAA,CAAA,SAAA,CAAA,cAAc,GAAxB,UAAyB,IAAI,EAAA;IAC3B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED;;AAEG;EACI,qBAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,YAAA;IACQ,IAAA,EAAA,GAAkB,IAAI,CAAC,OAAO;MAA5B,IAAI,GAAA,EAAA,CAAA,IAAA;MAAE,KAAK,GAAA,EAAA,CAAA,KAAiB;IACpC,IAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,EAAE;IAC5C,IAAM,OAAO,GAAG;MAAE,IAAI,EAAA,IAAA;MAAE,KAAK,EAAA,KAAA;MAAE,iBAAiB,EAAE;IAAQ,CAAE;IAC5D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;IAC1F,IAAI,CAAC,QAAQ,EAAE;IACf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;EAC1F,CAAC;EAED;;AAEG;EACI,qBAAA,CAAA,SAAA,CAAA,KAAK,GAAZ,YAAA;IACE,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;IAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,CAAA,CAAE,CAAC,CAAC;IAC7E,MAAA,CAAA,SAAA,CAAM,KAAK,CAAA,IAAA,CAAA,IAAA,CAAE;IACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,CAAA,CAAE,CAAC,CAAC;EAC7E,CAAC;EAES,qBAAA,CAAA,SAAA,CAAA,gBAAgB,GAA1B,UAA2B,QAAmB,EAAE,MAAe,EAAE,WAAsB,EAAA;IACrF,cAAc,CAAC,WAAW,EAAE,UAAC,EAAE,EAAA;MAAK,OAAA,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC;IAAzB,CAAyB,EAAE,MAAM,CAAC;EACxE,CAAC;EACH,OAAA,qBAAC;AAAD,CAAC,CAjCmC,iBAAiB,CAAA;AAmCrD,eAAe,qBAAqB","sourcesContent":["import Element from '../../../geometry/element';\nimport { Event } from '../../../chart';\nimport { clearHighlight, setHighlightBy } from './highlight-util';\nimport ElementRangeState from './range-state';\n\nenum EVENTS {\n  BEFORE_HIGHLIGHT = 'element-range-highlight:beforehighlight',\n  AFTER_HIGHLIGHT = 'element-range-highlight:afterhighlight',\n  BEFORE_CLEAR = 'element-range-highlight:beforeclear',\n  AFTER_CLEAR = 'element-range-highlight:afterclear',\n}\n\nexport { EVENTS as ELEMENT_RANGE_HIGHLIGHT_EVENTS };\n\n/**\n * @ignore\n * 区域 highlight 的 Action\n */\nclass ElementRangeHighlight extends ElementRangeState {\n  protected stateName: string = 'active';\n\n  // 清理掉所有的 active， unactive 状态\n  protected clearViewState(view) {\n    clearHighlight(view);\n  }\n\n  /**\n   * 设置 highlight\n   */\n  public highlight() {\n    const { view, event } = this.context;\n    const elements = this.getIntersectElements();\n    const payload = { view, event, highlightElements: elements };\n    view.emit(EVENTS.BEFORE_HIGHLIGHT, Event.fromData(view, EVENTS.BEFORE_HIGHLIGHT, payload));\n    this.setState();\n    view.emit(EVENTS.AFTER_HIGHLIGHT, Event.fromData(view, EVENTS.AFTER_HIGHLIGHT, payload));\n  }\n\n  /**\n   * @overrider 添加事件\n   */\n  public clear() {\n    const view = this.context.view;\n    view.emit(EVENTS.BEFORE_CLEAR, Event.fromData(view, EVENTS.BEFORE_CLEAR, {}));\n    super.clear();\n    view.emit(EVENTS.AFTER_CLEAR, Event.fromData(view, EVENTS.AFTER_CLEAR, {}));\n  }\n\n  protected setElementsState(elements: Element[], enable: boolean, allElements: Element[]) {\n    setHighlightBy(allElements, (el) => elements.indexOf(el) >= 0, enable);\n  }\n}\n\nexport default ElementRangeHighlight;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}