{"ast":null,"code":"export function getPixelRatio() {\n  return window ? window.devicePixelRatio : 1;\n}\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\nexport function distance(x1, y1, x2, y2) {\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\nexport function inBox(minX, minY, width, height, x, y) {\n  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\nexport function intersectRect(box1, box2) {\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n// 合并两个区域\nexport function mergeRegion(region1, region2) {\n  if (!region1 || !region2) {\n    return region1 || region2;\n  }\n  return {\n    minX: Math.min(region1.minX, region2.minX),\n    minY: Math.min(region1.minY, region2.minY),\n    maxX: Math.max(region1.maxX, region2.maxX),\n    maxY: Math.max(region1.maxY, region2.maxY)\n  };\n}\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\nexport function isSamePoint(point1, point2) {\n  return point1[0] === point2[0] && point1[1] === point2[1];\n}\nexport { isNil, isString, isFunction, isArray, each, toRadian, mod, isNumberEqual, requestAnimationFrame, clearAnimationFrame } from '@antv/util';","map":{"version":3,"sources":["../../src/util/util.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,aAAa,GAAA;EAC3B,OAAO,MAAM,GAAG,MAAM,CAAC,gBAAgB,GAAG,CAAC;AAC7C;AAEA;;;;;;AAMG;AACH,OAAM,SAAU,QAAQ,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;EACrE,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE;EAClB,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE;EAClB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACrC;AAEA;;;;;;;;AAQG;AACH,OAAM,SAAU,KAAK,CAAC,IAAY,EAAE,IAAY,EAAE,KAAa,EAAE,MAAc,EAAE,CAAC,EAAE,CAAC,EAAA;EACnF,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,MAAM;AAC1E;AAEA,OAAM,SAAU,aAAa,CAAC,IAAI,EAAE,IAAI,EAAA;EACtC,OAAO,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5G;AAEA;AACA,OAAM,SAAU,WAAW,CAAC,OAAO,EAAE,OAAO,EAAA;EAC1C,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE;IACxB,OAAO,OAAO,IAAI,OAAO;EAC1B;EACD,OAAO;IACL,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;IAC1C,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;IAC1C,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;IAC1C,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI;GAC1C;AACH;AAEA;;;;AAIG;AACH,OAAM,SAAU,WAAW,CAAC,MAAM,EAAE,MAAM,EAAA;EACxC,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;AAC3D;AAEA,SACE,KAAK,EACL,QAAQ,EACR,UAAU,EACV,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,GAAG,EACH,aAAa,EACb,qBAAqB,EACrB,mBAAmB,QACd,YAAY","sourceRoot":"","sourcesContent":["export function getPixelRatio() {\n    return window ? window.devicePixelRatio : 1;\n}\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n */\nexport function distance(x1, y1, x2, y2) {\n    var dx = x1 - x2;\n    var dy = y1 - y2;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n/**\n * 是否在包围盒内\n * @param {number} minX   包围盒开始的点 x\n * @param {number} minY   包围盒开始的点 y\n * @param {number} width  宽度\n * @param {number} height 高度\n * @param {[type]} x      检测点的 x\n * @param {[type]} y      监测点的 y\n */\nexport function inBox(minX, minY, width, height, x, y) {\n    return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\n}\nexport function intersectRect(box1, box2) {\n    return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\n}\n// 合并两个区域\nexport function mergeRegion(region1, region2) {\n    if (!region1 || !region2) {\n        return region1 || region2;\n    }\n    return {\n        minX: Math.min(region1.minX, region2.minX),\n        minY: Math.min(region1.minY, region2.minY),\n        maxX: Math.max(region1.maxX, region2.maxX),\n        maxY: Math.max(region1.maxY, region2.maxY),\n    };\n}\n/**\n * 判断两个点是否重合，点坐标的格式为 [x, y]\n * @param {Array} point1 第一个点\n * @param {Array} point2 第二个点\n */\nexport function isSamePoint(point1, point2) {\n    return point1[0] === point2[0] && point1[1] === point2[1];\n}\nexport { isNil, isString, isFunction, isArray, each, toRadian, mod, isNumberEqual, requestAnimationFrame, clearAnimationFrame, } from '@antv/util';\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}