{"ast":null,"code":"import { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\nexport function updateLabel(fromShape, toShape, cfg) {\n  var data = cfg.data,\n    origin = cfg.origin,\n    animateCfg = cfg.animateCfg,\n    coordinate = cfg.coordinate;\n  var updateAnimateCfg = get(animateCfg, 'update');\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n  (fromShape.getChildren() || []).forEach(function (fromChild, idx) {\n    var toChild = toShape.getChildByIndex(idx);\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n      var newAttrs = getReplaceAttrs(fromChild, toChild);\n      if (updateAnimateCfg) {\n        doAnimate(fromChild, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate: coordinate\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n      if (toChild.isGroup()) {\n        updateLabel(fromChild, toChild, cfg);\n      }\n    }\n  });\n  // append\n  each(toShape.getChildren(), function (child, idx) {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}","map":{"version":3,"sources":["../../src/component/update-label.ts"],"names":[],"mappings":"AAEA,SAAS,IAAI,EAAE,GAAG,QAAQ,YAAY;AACtC,SAAS,SAAS,QAAQ,YAAY;AACtC,SAAS,eAAe,QAAQ,kBAAkB;AAUlD;;;;;;;;;AASG;AACH,OAAM,SAAU,WAAW,CAAC,SAAiB,EAAE,OAAe,EAAE,GAAQ,EAAA;EAC9D,IAAA,IAAI,GAAqC,GAAG,CAAA,IAAxC;IAAE,MAAM,GAA6B,GAAG,CAAA,MAAhC;IAAE,UAAU,GAAiB,GAAG,CAAA,UAApB;IAAE,UAAU,GAAK,GAAG,CAAA,UAAR;EAC5C,IAAM,gBAAgB,GAAG,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC;EAElD,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;EAC3B,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;EAC/B,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC;EACvC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC;EACvC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;EAEhD,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,UAAC,SAAS,EAAE,GAAG,EAAA;IACrD,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,GAAG,CAAW;IACtD,IAAI,CAAC,OAAO,EAAE;MACZ,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC;MAChC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;KACvB,MAAM;MACL,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;MAC3B,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;MAC/B,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC;MACvC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC;MAEvC,IAAM,QAAQ,GAAG,eAAe,CAAC,SAAmB,EAAE,OAAO,CAAC;MAC9D,IAAI,gBAAgB,EAAE;QACpB,SAAS,CAAC,SAAmB,EAAE,gBAAgB,EAAE;UAC/C,OAAO,EAAE,QAAQ;UACjB,UAAU,EAAA;SACX,CAAC;OACH,MAAM;QACL,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;MACzB;MACD,IAAI,OAAO,CAAC,OAAO,EAAE,EAAE;QACrB,WAAW,CAAC,SAAgB,EAAE,OAAc,EAAE,GAAG,CAAC;MACnD;IACF;EACH,CAAC,CAAC;EAEF;EACA,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,UAAC,KAAK,EAAE,GAAG,EAAA;IACrC,IAAI,GAAG,IAAI,SAAS,CAAC,QAAQ,EAAE,EAAE;MAC/B,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;QACpB,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC;MACrB;IACF;EACH,CAAC,CAAC;AACJ","sourcesContent":["import { Coordinate } from '@antv/coord';\nimport { IGroup, IShape } from '@antv/g-base';\nimport { each, get } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getReplaceAttrs } from '../util/graphics';\n\n/** label 的必要配置 */\ntype Cfg = {\n  data: any;\n  origin: any;\n  animateCfg: any;\n  coordinate: Coordinate;\n};\n\n/**\n * @desc 更新 label (目前没有根据 id 索引，还是会存在一点小问题的，只能根据 idx 索引)\n * @done shape 属性更新\n * @done shape delete\n * @done shape append\n *\n * @param fromShape old labelShape\n * @param toShape new labelShape\n * @param cfg\n */\nexport function updateLabel(fromShape: IGroup, toShape: IGroup, cfg: Cfg): void {\n  const { data, origin, animateCfg, coordinate } = cfg;\n  const updateAnimateCfg = get(animateCfg, 'update');\n\n  fromShape.set('data', data);\n  fromShape.set('origin', origin);\n  fromShape.set('animateCfg', animateCfg);\n  fromShape.set('coordinate', coordinate);\n  fromShape.set('visible', toShape.get('visible'));\n\n  (fromShape.getChildren() || []).forEach((fromChild, idx) => {\n    const toChild = toShape.getChildByIndex(idx) as IShape;\n    if (!toChild) {\n      fromShape.removeChild(fromChild);\n      fromChild.remove(true);\n    } else {\n      fromChild.set('data', data);\n      fromChild.set('origin', origin);\n      fromChild.set('animateCfg', animateCfg);\n      fromChild.set('coordinate', coordinate);\n\n      const newAttrs = getReplaceAttrs(fromChild as IShape, toChild);\n      if (updateAnimateCfg) {\n        doAnimate(fromChild as IShape, updateAnimateCfg, {\n          toAttrs: newAttrs,\n          coordinate,\n        });\n      } else {\n        fromChild.attr(newAttrs);\n      }\n      if (toChild.isGroup()) {\n        updateLabel(fromChild as any, toChild as any, cfg);\n      }\n    }\n  });\n\n  // append\n  each(toShape.getChildren(), (child, idx) => {\n    if (idx >= fromShape.getCount()) {\n      if (!child.destroyed) {\n        fromShape.add(child);\n      }\n    }\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}