{"ast":null,"code":"import { registerShape } from '../base';\nimport { getConstraint, getShapeAttrs } from './util';\n/**\n * 填充的平滑曲面图\n */\nregisterShape('area', 'smooth', {\n  draw: function (cfg, container) {\n    var coordinate = this.coordinate;\n    var attrs = getShapeAttrs(cfg, false, true, this, getConstraint(coordinate));\n    var shape = container.addShape({\n      type: 'path',\n      attrs: attrs,\n      name: 'area'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        if (r === void 0) {\n          r = 5.5;\n        }\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color,\n        fillOpacity: 1\n      }\n    };\n  }\n});","map":{"version":3,"sources":["../../../../src/geometry/shape/area/smooth.ts"],"names":[],"mappings":"AAGA,SAAS,aAAa,QAAQ,SAAS;AACvC,SAAS,aAAa,EAAE,aAAa,QAAQ,QAAQ;AAErD;;AAEG;AACH,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE;EAC9B,IAAI,EAAA,UAAC,GAAc,EAAE,SAAiB,EAAA;IACpC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU;IAClC,IAAM,KAAK,GAAG,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;IAC9E,IAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC;MAC/B,IAAI,EAAE,MAAM;MACZ,KAAK,EAAA,KAAA;MACL,IAAI,EAAE;KACP,CAAC;IAEF,OAAO,KAAK;EACd,CAAC;EACD,SAAS,EAAA,UAAC,SAAyB,EAAA;IACzB,IAAA,KAAK,GAAK,SAAS,CAAA,KAAd;IACb,OAAO;MACL,MAAM,EAAE,UAAC,CAAS,EAAE,CAAS,EAAE,CAAe,EAAA;QAAf,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA;UAAA,CAAA,GAAA,GAAe;QAAA;QAC5C,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;MACpG,CAAC;MACD,KAAK,EAAE;QACL,CAAC,EAAE,CAAC;QACJ,IAAI,EAAE,KAAK;QACX,WAAW,EAAE;MACd;KACF;EACH;CACD,CAAC","sourcesContent":["import { IGroup } from '../../../dependents';\nimport { ShapeInfo, ShapeMarkerCfg } from '../../../interface';\n\nimport { registerShape } from '../base';\nimport { getConstraint, getShapeAttrs } from './util';\n\n/**\n * 填充的平滑曲面图\n */\nregisterShape('area', 'smooth', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const coordinate = this.coordinate;\n    const attrs = getShapeAttrs(cfg, false, true, this, getConstraint(coordinate));\n    const shape = container.addShape({\n      type: 'path',\n      attrs,\n      name: 'area',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number = 5.5) => {\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color,\n        fillOpacity: 1,\n      },\n    };\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}