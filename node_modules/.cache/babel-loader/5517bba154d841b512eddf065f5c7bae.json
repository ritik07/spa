{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n/**\n * Highlight color\n * @ignore\n */\nvar HighlightColor = /** @class */function (_super) {\n  __extends(HighlightColor, _super);\n  function HighlightColor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HighlightColor.prototype.setStateByElement = function (element, enable) {\n    var view = this.context.view;\n    var colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return;\n    }\n    var scale = view.getScaleByField(colorAttr.getFields()[0]);\n    var value = getElementValue(element, scale.field);\n    var elements = getElements(view);\n    var highlightElements = elements.filter(function (el) {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, function (el) {\n      return highlightElements.includes(el);\n    }, enable);\n  };\n  return HighlightColor;\n}(Highlight);\nexport default HighlightColor;","map":{"version":3,"sources":["../../../../src/interaction/action/element/highlight-by-color.ts"],"names":[],"mappings":";AACA,SAAS,WAAW,EAAE,eAAe,QAAQ,SAAS;AACtD,OAAO,SAAS,MAAM,aAAa;AAEnC;;;AAGG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6B,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAA7B,SAAA,cAAA,GAAA;;EAeA;EAdY,cAAA,CAAA,SAAA,CAAA,iBAAiB,GAA3B,UAA4B,OAAgB,EAAE,MAAe,EAAA;IAC3D,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;IAC9B,IAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;IACxD,IAAI,CAAC,SAAS,EAAE;MACd;IACD;IACD,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAM,KAAK,GAAG,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC;IACnD,IAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC;IAClC,IAAM,iBAAiB,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAC,EAAE,EAAA;MAC3C,OAAO,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK;IACnD,CAAC,CAAC;IACF,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAC,EAAE,EAAA;MAAK,OAAA,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC;IAA9B,CAA8B,EAAE,MAAM,CAAC;EAC/E,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,CAf4B,SAAS,CAAA;AAiBtC,eAAe,cAAc","sourcesContent":["import Element from '../../../geometry/element/';\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n\n/**\n * Highlight color\n * @ignore\n */\nclass HighlightColor extends Highlight {\n  protected setStateByElement(element: Element, enable: boolean) {\n    const view = this.context.view;\n    const colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return;\n    }\n    const scale = view.getScaleByField(colorAttr.getFields()[0]);\n    const value = getElementValue(element, scale.field);\n    const elements = getElements(view);\n    const highlightElements = elements.filter((el) => {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, (el) => highlightElements.includes(el), enable);\n  }\n}\n\nexport default HighlightColor;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}