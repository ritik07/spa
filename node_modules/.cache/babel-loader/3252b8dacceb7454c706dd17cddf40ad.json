{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { calBase } from '../util/math';\nimport Continuous from './base';\n/**\n * Pow 度量，处理非均匀分布\n */\nvar Pow = /** @class */function (_super) {\n  __extends(Pow, _super);\n  function Pow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'pow';\n    return _this;\n  }\n  /**\n   * @override\n   */\n  Pow.prototype.invert = function (value) {\n    var percent = this.getInvertPercent(value);\n    var exponent = this.exponent;\n    var max = calBase(exponent, this.max);\n    var min = calBase(exponent, this.min);\n    var tmp = percent * (max - min) + min;\n    var factor = tmp >= 0 ? 1 : -1;\n    return Math.pow(tmp, exponent) * factor;\n  };\n  Pow.prototype.initCfg = function () {\n    this.tickMethod = 'pow';\n    this.exponent = 2;\n    this.tickCount = 5;\n    this.nice = true;\n  };\n  // 获取度量计算时，value占的定义域百分比\n  Pow.prototype.getScalePercent = function (value) {\n    var max = this.max;\n    var min = this.min;\n    if (max === min) {\n      return 0;\n    }\n    var exponent = this.exponent;\n    var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\n    return percent;\n  };\n  return Pow;\n}(Continuous);\nexport default Pow;","map":{"version":3,"sources":["../../src/continuous/pow.ts"],"names":[],"mappings":";AAAA,SAAS,OAAO,QAAQ,cAAc;AACtC,OAAO,UAAU,MAAM,QAAQ;AAE/B;;AAEG;AACH,IAAA,GAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAkB,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;EAAlB,SAAA,GAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACkB,KAAA,CAAA,IAAI,GAAW,KAAK;;EAsCtC;EAhCE;;AAEG;EACI,GAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,KAAa,EAAA;IACzB,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;IAC5C,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;IAC9B,IAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC;IACvC,IAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC;IACvC,IAAM,GAAG,GAAG,OAAO,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;IACvC,IAAM,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,MAAM;EACzC,CAAC;EAES,GAAA,CAAA,SAAA,CAAA,OAAO,GAAjB,YAAA;IACE,IAAI,CAAC,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAAC,SAAS,GAAG,CAAC;IAClB,IAAI,CAAC,IAAI,GAAG,IAAI;EAClB,CAAC;EAED;EACU,GAAA,CAAA,SAAA,CAAA,eAAe,GAAzB,UAA0B,KAAa,EAAA;IACrC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG;IACpB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG;IACpB,IAAI,GAAG,KAAK,GAAG,EAAE;MACf,OAAO,CAAC;IACT;IACD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;IAC9B,IAAM,OAAO,GACX,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,KAAK,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACzG,OAAO,OAAO;EAChB,CAAC;EACH,OAAA,GAAC;AAAD,CAAC,CAvCiB,UAAU,CAAA;AAyC5B,eAAe,GAAG","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { calBase } from '../util/math';\nimport Continuous from './base';\n/**\n * Pow 度量，处理非均匀分布\n */\nvar Pow = /** @class */ (function (_super) {\n    __extends(Pow, _super);\n    function Pow() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'pow';\n        return _this;\n    }\n    /**\n     * @override\n     */\n    Pow.prototype.invert = function (value) {\n        var percent = this.getInvertPercent(value);\n        var exponent = this.exponent;\n        var max = calBase(exponent, this.max);\n        var min = calBase(exponent, this.min);\n        var tmp = percent * (max - min) + min;\n        var factor = tmp >= 0 ? 1 : -1;\n        return Math.pow(tmp, exponent) * factor;\n    };\n    Pow.prototype.initCfg = function () {\n        this.tickMethod = 'pow';\n        this.exponent = 2;\n        this.tickCount = 5;\n        this.nice = true;\n    };\n    // 获取度量计算时，value占的定义域百分比\n    Pow.prototype.getScalePercent = function (value) {\n        var max = this.max;\n        var min = this.min;\n        if (max === min) {\n            return 0;\n        }\n        var exponent = this.exponent;\n        var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\n        return percent;\n    };\n    return Pow;\n}(Continuous));\nexport default Pow;\n//# sourceMappingURL=pow.js.map"]},"metadata":{},"sourceType":"module"}