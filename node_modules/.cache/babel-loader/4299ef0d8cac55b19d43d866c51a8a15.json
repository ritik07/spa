{"ast":null,"code":"import { isArray } from '@antv/util';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getShapeAttrs } from './util';\nvar AreaShapeFactory = registerShapeFactory('area', {\n  defaultShapeType: 'area',\n  getDefaultPoints: function (pointInfo) {\n    // area 基本标记的绘制需要获取上下两边的顶点\n    var x = pointInfo.x,\n      y0 = pointInfo.y0;\n    var y = isArray(pointInfo.y) ? pointInfo.y : [y0, pointInfo.y];\n    return y.map(function (yItem) {\n      return {\n        x: x,\n        y: yItem\n      };\n    });\n  }\n});\n// Area 几何标记默认的 shape：填充的区域图\nregisterShape('area', 'area', {\n  draw: function (cfg, container) {\n    var attrs = getShapeAttrs(cfg, false, false, this);\n    var shape = container.addShape({\n      type: 'path',\n      attrs: attrs,\n      name: 'area'\n    });\n    return shape;\n  },\n  getMarker: function (markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function (x, y, r) {\n        if (r === void 0) {\n          r = 5.5;\n        }\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color,\n        fillOpacity: 1\n      }\n    };\n  }\n});\nexport default AreaShapeFactory;","map":{"version":3,"sources":["../../../../src/geometry/shape/area/index.ts"],"names":[],"mappings":"AAAA,SAAS,OAAO,QAAQ,YAAY;AAGpC,SAAS,aAAa,EAAE,oBAAoB,QAAQ,SAAS;AAC7D,SAAS,aAAa,QAAQ,QAAQ;AAEtC,IAAM,gBAAgB,GAAG,oBAAoB,CAAC,MAAM,EAAE;EACpD,gBAAgB,EAAE,MAAM;EACxB,gBAAgB,EAAA,UAAC,SAAqB,EAAA;IACpC;IACQ,IAAA,CAAC,GAAS,SAAS,CAAA,CAAlB;MAAE,EAAE,GAAK,SAAS,CAAA,EAAd;IACb,IAAM,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;IAEhE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,KAAa,EAAA;MACzB,OAAO;QACL,CAAC,EAAE,CAAW;QACd,CAAC,EAAE;OACJ;IACH,CAAC,CAAC;EACJ;CACD,CAAC;AAEF;AACA,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE;EAC5B,IAAI,EAAA,UAAC,GAAc,EAAE,SAAiB,EAAA;IACpC,IAAM,KAAK,GAAG,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC;IACpD,IAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC;MAC/B,IAAI,EAAE,MAAM;MACZ,KAAK,EAAA,KAAA;MACL,IAAI,EAAE;KACP,CAAC;IAEF,OAAO,KAAK;EACd,CAAC;EACD,SAAS,EAAA,UAAC,SAAyB,EAAA;IACzB,IAAA,KAAK,GAAK,SAAS,CAAA,KAAd;IACb,OAAO;MACL,MAAM,EAAE,UAAC,CAAS,EAAE,CAAS,EAAE,CAAe,EAAA;QAAf,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA;UAAA,CAAA,GAAA,GAAe;QAAA;QAC5C,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;MACpG,CAAC;MACD,KAAK,EAAE;QACL,CAAC,EAAE,CAAC;QACJ,IAAI,EAAE,KAAK;QACX,WAAW,EAAE;MACd;KACF;EACH;CACD,CAAC;AAEF,eAAe,gBAAgB","sourcesContent":["import { isArray } from '@antv/util';\nimport { IGroup } from '../../../dependents';\nimport { Point, ShapeInfo, ShapeMarkerCfg, ShapePoint } from '../../../interface';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { getShapeAttrs } from './util';\n\nconst AreaShapeFactory = registerShapeFactory('area', {\n  defaultShapeType: 'area',\n  getDefaultPoints(pointInfo: ShapePoint): Point[] {\n    // area 基本标记的绘制需要获取上下两边的顶点\n    const { x, y0 } = pointInfo;\n    const y = isArray(pointInfo.y) ? pointInfo.y : [y0, pointInfo.y];\n\n    return y.map((yItem: number) => {\n      return {\n        x: x as number,\n        y: yItem,\n      };\n    });\n  },\n});\n\n// Area 几何标记默认的 shape：填充的区域图\nregisterShape('area', 'area', {\n  draw(cfg: ShapeInfo, container: IGroup) {\n    const attrs = getShapeAttrs(cfg, false, false, this);\n    const shape = container.addShape({\n      type: 'path',\n      attrs,\n      name: 'area',\n    });\n\n    return shape;\n  },\n  getMarker(markerCfg: ShapeMarkerCfg) {\n    const { color } = markerCfg;\n    return {\n      symbol: (x: number, y: number, r: number = 5.5) => {\n        return [['M', x - r, y - 4], ['L', x + r, y - 4], ['L', x + r, y + 4], ['L', x - r, y + 4], ['Z']];\n      },\n      style: {\n        r: 5,\n        fill: color,\n        fillOpacity: 1,\n      },\n    };\n  },\n});\n\nexport default AreaShapeFactory;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}