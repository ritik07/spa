{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview 线\n * @author dxq613@gmail.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport ShapeBase from './base';\nimport inLine from '../util/in-stroke/line';\nimport * as ArrowUtil from '../util/arrow';\nvar Line = /** @class */function (_super) {\n  __extends(Line, _super);\n  function Line() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Line.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      startArrow: false,\n      endArrow: false\n    });\n  };\n  Line.prototype.initAttrs = function (attrs) {\n    this.setArrow();\n  };\n  // 更新属性时，检测是否更改了箭头\n  Line.prototype.onAttrChange = function (name, value, originValue) {\n    _super.prototype.onAttrChange.call(this, name, value, originValue);\n    // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\n    this.setArrow();\n  };\n  Line.prototype.setArrow = function () {\n    var attrs = this.attr();\n    var x1 = attrs.x1,\n      y1 = attrs.y1,\n      x2 = attrs.x2,\n      y2 = attrs.y2,\n      startArrow = attrs.startArrow,\n      endArrow = attrs.endArrow;\n    if (startArrow) {\n      ArrowUtil.addStartArrow(this, attrs, x2, y2, x1, y1);\n    }\n    if (endArrow) {\n      ArrowUtil.addEndArrow(this, attrs, x1, y1, x2, y2);\n    }\n  };\n  Line.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n    if (!isStroke || !lineWidth) {\n      return false;\n    }\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return inLine(x1, y1, x2, y2, lineWidth, x, y);\n  };\n  Line.prototype.createPath = function (context) {\n    var attrs = this.attr();\n    var x1 = attrs.x1,\n      y1 = attrs.y1,\n      x2 = attrs.x2,\n      y2 = attrs.y2,\n      startArrow = attrs.startArrow,\n      endArrow = attrs.endArrow;\n    var startArrowDistance = {\n      dx: 0,\n      dy: 0\n    };\n    var endArrowDistance = {\n      dx: 0,\n      dy: 0\n    };\n    if (startArrow && startArrow.d) {\n      startArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.startArrow.d);\n    }\n    if (endArrow && endArrow.d) {\n      endArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.endArrow.d);\n    }\n    context.beginPath();\n    // 如果自定义箭头，线条相应缩进\n    context.moveTo(x1 + startArrowDistance.dx, y1 + startArrowDistance.dy);\n    context.lineTo(x2 - endArrowDistance.dx, y2 - endArrowDistance.dy);\n  };\n  Line.prototype.afterDrawPath = function (context) {\n    var startArrowShape = this.get('startArrowShape');\n    var endArrowShape = this.get('endArrowShape');\n    if (startArrowShape) {\n      startArrowShape.draw(context);\n    }\n    if (endArrowShape) {\n      endArrowShape.draw(context);\n    }\n  };\n  /**\n   * Get length of line\n   * @return {number} length\n   */\n  Line.prototype.getTotalLength = function () {\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return LineUtil.length(x1, y1, x2, y2);\n  };\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  Line.prototype.getPoint = function (ratio) {\n    var _a = this.attr(),\n      x1 = _a.x1,\n      y1 = _a.y1,\n      x2 = _a.x2,\n      y2 = _a.y2;\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n  };\n  return Line;\n}(ShapeBase);\nexport default Line;","map":{"version":3,"sources":["../../src/shape/line.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\n/**\n * @fileoverview 线\n * @author dxq613@gmail.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport ShapeBase from './base';\nimport inLine from '../util/in-stroke/line';\nimport * as ArrowUtil from '../util/arrow';\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Line.prototype.getDefaultAttrs = function () {\n        var attrs = _super.prototype.getDefaultAttrs.call(this);\n        return __assign(__assign({}, attrs), { x1: 0, y1: 0, x2: 0, y2: 0, startArrow: false, endArrow: false });\n    };\n    Line.prototype.initAttrs = function (attrs) {\n        this.setArrow();\n    };\n    // 更新属性时，检测是否更改了箭头\n    Line.prototype.onAttrChange = function (name, value, originValue) {\n        _super.prototype.onAttrChange.call(this, name, value, originValue);\n        // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\n        this.setArrow();\n    };\n    Line.prototype.setArrow = function () {\n        var attrs = this.attr();\n        var x1 = attrs.x1, y1 = attrs.y1, x2 = attrs.x2, y2 = attrs.y2, startArrow = attrs.startArrow, endArrow = attrs.endArrow;\n        if (startArrow) {\n            ArrowUtil.addStartArrow(this, attrs, x2, y2, x1, y1);\n        }\n        if (endArrow) {\n            ArrowUtil.addEndArrow(this, attrs, x1, y1, x2, y2);\n        }\n    };\n    Line.prototype.isInStrokeOrPath = function (x, y, isStroke, isFill, lineWidth) {\n        if (!isStroke || !lineWidth) {\n            return false;\n        }\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return inLine(x1, y1, x2, y2, lineWidth, x, y);\n    };\n    Line.prototype.createPath = function (context) {\n        var attrs = this.attr();\n        var x1 = attrs.x1, y1 = attrs.y1, x2 = attrs.x2, y2 = attrs.y2, startArrow = attrs.startArrow, endArrow = attrs.endArrow;\n        var startArrowDistance = {\n            dx: 0,\n            dy: 0,\n        };\n        var endArrowDistance = {\n            dx: 0,\n            dy: 0,\n        };\n        if (startArrow && startArrow.d) {\n            startArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.startArrow.d);\n        }\n        if (endArrow && endArrow.d) {\n            endArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.endArrow.d);\n        }\n        context.beginPath();\n        // 如果自定义箭头，线条相应缩进\n        context.moveTo(x1 + startArrowDistance.dx, y1 + startArrowDistance.dy);\n        context.lineTo(x2 - endArrowDistance.dx, y2 - endArrowDistance.dy);\n    };\n    Line.prototype.afterDrawPath = function (context) {\n        var startArrowShape = this.get('startArrowShape');\n        var endArrowShape = this.get('endArrowShape');\n        if (startArrowShape) {\n            startArrowShape.draw(context);\n        }\n        if (endArrowShape) {\n            endArrowShape.draw(context);\n        }\n    };\n    /**\n     * Get length of line\n     * @return {number} length\n     */\n    Line.prototype.getTotalLength = function () {\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return LineUtil.length(x1, y1, x2, y2);\n    };\n    /**\n     * Get point according to ratio\n     * @param {number} ratio\n     * @return {Point} point\n     */\n    Line.prototype.getPoint = function (ratio) {\n        var _a = this.attr(), x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n    };\n    return Line;\n}(ShapeBase));\nexport default Line;\n//# sourceMappingURL=line.js.map"]},"metadata":{},"sourceType":"module"}