{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action } from '..';\nvar DIM_X = 'x';\nvar DIM_Y = 'y';\n/**\n * Scale translate\n * @ignore\n */\nvar ScaleTranslate = /** @class */function (_super) {\n  __extends(ScaleTranslate, _super);\n  function ScaleTranslate() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dims = [DIM_X, DIM_Y];\n    _this.cfgFields = ['dims'];\n    _this.cacheScaleDefs = {};\n    return _this;\n  }\n  // 是否支持对应字段的平移\n  ScaleTranslate.prototype.hasDim = function (dim) {\n    return this.dims.includes(dim);\n  };\n  ScaleTranslate.prototype.getScale = function (dim) {\n    var view = this.context.view;\n    if (dim === 'x') {\n      return view.getXScale();\n    } else {\n      return view.getYScales()[0];\n    }\n  };\n  ScaleTranslate.prototype.resetDim = function (dim) {\n    var view = this.context.view;\n    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {\n      var scale = this.getScale(dim);\n      view.scale(scale.field, this.cacheScaleDefs[dim]);\n      this.cacheScaleDefs[dim] = null;\n    }\n  };\n  /**\n   * 回滚\n   */\n  ScaleTranslate.prototype.reset = function () {\n    this.resetDim(DIM_X);\n    this.resetDim(DIM_Y);\n    var view = this.context.view;\n    view.render(true);\n  };\n  return ScaleTranslate;\n}(Action);\nexport default ScaleTranslate;","map":{"version":3,"sources":["../../../../src/interaction/action/view/scale-transform.ts"],"names":[],"mappings":";AAAA,SAAS,MAAM,QAAQ,IAAI;AAE3B,IAAM,KAAK,GAAG,GAAG;AACjB,IAAM,KAAK,GAAG,GAAG;AAEjB;;;AAGG;AACH,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6B,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAA7B,SAAA,cAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACY,KAAA,CAAA,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;IACrB,KAAA,CAAA,SAAS,GAAG,CAAC,MAAM,CAAC;IACpB,KAAA,CAAA,cAAc,GAAG,CAAA,CAAE;;EAkC/B;EAhCE;EACU,cAAA,CAAA,SAAA,CAAA,MAAM,GAAhB,UAAiB,GAAG,EAAA;IAClB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;EAChC,CAAC;EAES,cAAA,CAAA,SAAA,CAAA,QAAQ,GAAlB,UAAmB,GAAG,EAAA;IACpB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;IAC9B,IAAI,GAAG,KAAK,GAAG,EAAE;MACf,OAAO,IAAI,CAAC,SAAS,EAAE;KACxB,MAAM;MACL,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC5B;EACH,CAAC;EAEO,cAAA,CAAA,SAAA,CAAA,QAAQ,GAAhB,UAAiB,GAAG,EAAA;IAClB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;IAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;MAChD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;MAChC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;MACjD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI;IAChC;EACH,CAAC;EAED;;AAEG;EACI,cAAA,CAAA,SAAA,CAAA,KAAK,GAAZ,YAAA;IACE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IACpB,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;IAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;EACnB,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,CArC4B,MAAM,CAAA;AAuCnC,eAAe,cAAc","sourcesContent":["import { Action } from '..';\n\nconst DIM_X = 'x';\nconst DIM_Y = 'y';\n\n/**\n * Scale translate\n * @ignore\n */\nclass ScaleTranslate extends Action {\n  protected dims = [DIM_X, DIM_Y];\n  protected cfgFields = ['dims'];\n  protected cacheScaleDefs = {};\n\n  // 是否支持对应字段的平移\n  protected hasDim(dim) {\n    return this.dims.includes(dim);\n  }\n\n  protected getScale(dim) {\n    const view = this.context.view;\n    if (dim === 'x') {\n      return view.getXScale();\n    } else {\n      return view.getYScales()[0];\n    }\n  }\n\n  private resetDim(dim) {\n    const view = this.context.view;\n    if (this.hasDim(dim) && this.cacheScaleDefs[dim]) {\n      const scale = this.getScale(dim);\n      view.scale(scale.field, this.cacheScaleDefs[dim]);\n      this.cacheScaleDefs[dim] = null;\n    }\n  }\n\n  /**\n   * 回滚\n   */\n  public reset() {\n    this.resetDim(DIM_X);\n    this.resetDim(DIM_Y);\n    const view = this.context.view;\n    view.render(true);\n  }\n}\n\nexport default ScaleTranslate;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}