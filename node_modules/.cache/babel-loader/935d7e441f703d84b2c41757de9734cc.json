{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar Mirror = /** @class */function (_super) {\n  __extends(Mirror, _super);\n  function Mirror() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Mirror.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'mirror',\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this),\n      transpose: false\n    });\n  };\n  Mirror.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  Mirror.prototype.beforeEachView = function (view, facet) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  };\n  Mirror.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Mirror.prototype.generateFacets = function (data) {\n    var _this = this;\n    var _a = __read(this.cfg.fields, 1),\n      f = _a[0];\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    var columnField;\n    var rowField;\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Mirror.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Mirror.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // do nothing\n    return option;\n  };\n  Mirror.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      if (_this.cfg.transpose) {\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n        view.annotation().text(config);\n      } else {\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.title);\n        view.annotation().text(config);\n      }\n    });\n  };\n  return Mirror;\n}(Facet);\nexport default Mirror;","map":{"version":3,"sources":["../../src/facet/mirror.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MirrorCfg, MirrorData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Mirror extends Facet<MirrorCfg, MirrorData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'mirror',\n      showTitle: true,\n      title: super.getDefaultTitleCfg(),\n      transpose: false,\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected beforeEachView(view: View, facet: MirrorData) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  }\n\n  protected afterEachView(view: View, facet: MirrorData) {\n    this.processAxis(view, facet);\n  }\n\n  protected generateFacets(data: Datum[]): MirrorData[] {\n    const [f] = this.cfg.fields;\n\n    const rst = [];\n    let columnValuesLength = 1;\n    let rowValuesLength = 1;\n\n    let columnValues: string[] = [''];\n    let rowValues: string[] = [''];\n\n    let columnField;\n    let rowField;\n\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach((xVal, xIndex) => {\n      rowValues.forEach((yVal, yIndex) => {\n        const conditions = [\n          { field: columnField, value: xVal, values: columnValues },\n          { field: rowField, value: yVal, values: rowValues },\n        ];\n\n        const facetData = filter(data, this.getFacetDataFilter(conditions));\n\n        const facet: MirrorData = {\n          type: this.cfg.type,\n          data: facetData,\n          region: this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField,\n          rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      });\n    });\n\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MirrorData): object {\n    // do nothing\n    return option;\n  }\n\n  private renderTitle() {\n    each(this.facets, (facet: MirrorData, facetIndex: number) => {\n      const { columnValue, rowValue, view } = facet;\n      const formatter = get(this.cfg.title, 'formatter');\n\n      if (this.cfg.transpose) {\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      } else {\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.title\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}