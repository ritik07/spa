{"ast":null,"code":"import { each, isNumber } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme';\n// 统一设置文本的角度\nfunction setLabelsAngle(labels, angle) {\n  each(labels, function (label) {\n    var x = label.attr('x');\n    var y = label.attr('y');\n    var matrix = getMatrixByAngle({\n      x: x,\n      y: y\n    }, angle);\n    label.attr('matrix', matrix);\n  });\n}\n// 旋转文本\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n  var labels = labelsGroup.getChildren();\n  if (!labels.length) {\n    return false;\n  }\n  if (!isVertical && labels.length < 2) {\n    // 水平时至少有两个时才旋转\n    return false;\n  }\n  var maxWidth = getMaxLabelWidth(labels);\n  var isOverlap = false;\n  if (isVertical) {\n    // limitLength 为 0 或者 null 时不生效\n    isOverlap = !!limitLength && maxWidth > limitLength;\n  } else {\n    // 同 limitLength 无关\n    var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n    isOverlap = maxWidth > tickWidth;\n  }\n  if (isOverlap) {\n    var angle = getAngle(limitLength, maxWidth);\n    setLabelsAngle(labels, angle);\n  }\n  return isOverlap;\n}\nexport function getDefault() {\n  return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @param  {number}  customRotate 自定义旋转角度\n * @return {boolean}             是否发生了旋转\n */\nexport function fixedAngle(isVertical, labelsGroup, limitLength, customRotate) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function () {\n    if (isNumber(customRotate)) {\n      return customRotate;\n    }\n    return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n  });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n  return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n    if (!length) {\n      // 如果没有设置 limitLength，则使用固定的角度旋转\n      return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    }\n    if (isVertical) {\n      // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n      return -Math.acos(length / maxWidth);\n    } else {\n      var angle = 0;\n      if (length > maxWidth) {\n        // 需要判定，asin 的参数 -1， 1\n        angle = Math.PI / 4;\n      } else {\n        angle = Math.asin(length / maxWidth);\n        if (angle > Math.PI / 4) {\n          // 大于 Math.PI / 4 时没意义\n          angle = Math.PI / 4;\n        }\n      }\n      return angle;\n    }\n  });\n}","map":{"version":3,"sources":["../../../src/axis/overlap/auto-rotate.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { each, isNumber } from '@antv/util';\nimport { getMaxLabelWidth } from '../../util/label';\nimport { getMatrixByAngle } from '../../util/matrix';\nimport Theme from '../../util/theme';\n// 统一设置文本的角度\nfunction setLabelsAngle(labels, angle) {\n    each(labels, function (label) {\n        var x = label.attr('x');\n        var y = label.attr('y');\n        var matrix = getMatrixByAngle({ x: x, y: y }, angle);\n        label.attr('matrix', matrix);\n    });\n}\n// 旋转文本\nfunction labelRotate(isVertical, labelsGroup, limitLength, getAngle) {\n    var labels = labelsGroup.getChildren();\n    if (!labels.length) {\n        return false;\n    }\n    if (!isVertical && labels.length < 2) {\n        // 水平时至少有两个时才旋转\n        return false;\n    }\n    var maxWidth = getMaxLabelWidth(labels);\n    var isOverlap = false;\n    if (isVertical) {\n        // limitLength 为 0 或者 null 时不生效\n        isOverlap = !!limitLength && maxWidth > limitLength;\n    }\n    else {\n        // 同 limitLength 无关\n        var tickWidth = Math.abs(labels[1].attr('x') - labels[0].attr('x'));\n        isOverlap = maxWidth > tickWidth;\n    }\n    if (isOverlap) {\n        var angle = getAngle(limitLength, maxWidth);\n        setLabelsAngle(labels, angle);\n    }\n    return isOverlap;\n}\nexport function getDefault() {\n    return fixedAngle;\n}\n/**\n * 固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @param  {number}  customRotate 自定义旋转角度\n * @return {boolean}             是否发生了旋转\n */\nexport function fixedAngle(isVertical, labelsGroup, limitLength, customRotate) {\n    return labelRotate(isVertical, labelsGroup, limitLength, function () {\n        if (isNumber(customRotate)) {\n            return customRotate;\n        }\n        return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n    });\n}\n/**\n * 非固定角度旋转文本\n * @param  {boolean} isVertical  是否垂直方向\n * @param  {IGroup}  labelsGroup 文本的 group\n * @param  {number}  limitLength 限定长度\n * @return {boolean}             是否发生了旋转\n */\nexport function unfixedAngle(isVertical, labelsGroup, limitLength) {\n    return labelRotate(isVertical, labelsGroup, limitLength, function (length, maxWidth) {\n        if (!length) {\n            // 如果没有设置 limitLength，则使用固定的角度旋转\n            return isVertical ? Theme.verticalAxisRotate : Theme.horizontalAxisRotate;\n        }\n        if (isVertical) {\n            // 垂直时不需要判定 limitLength > maxWidth ，因为此时不会 overlap\n            return -Math.acos(length / maxWidth);\n        }\n        else {\n            var angle = 0;\n            if (length > maxWidth) {\n                // 需要判定，asin 的参数 -1， 1\n                angle = Math.PI / 4;\n            }\n            else {\n                angle = Math.asin(length / maxWidth);\n                if (angle > Math.PI / 4) {\n                    // 大于 Math.PI / 4 时没意义\n                    angle = Math.PI / 4;\n                }\n            }\n            return angle;\n        }\n    });\n}\n//# sourceMappingURL=auto-rotate.js.map"]},"metadata":{},"sourceType":"module"}