{"ast":null,"code":"/**\n * 对比当前元素和之前的元素，返回 added, updated, removed\n * @param keyItem 之前的元素的，按照 key-item 的 object 的形式存储\n * @param keys 现在的元素，按照 array 的形式存储\n * @returns 由 added, updated, removed array 构成的 object\n */\nexport function diff(keyItem, keys) {\n  var added = [];\n  var updated = [];\n  var removed = [];\n  var keyIncluded = new Map();\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (keyItem[key]) updated.push(key);else added.push(key);\n    keyIncluded.set(key, true);\n  }\n  Object.keys(keyItem).forEach(function (key) {\n    if (!keyIncluded.has(key)) removed.push(key);\n  });\n  return {\n    added: added,\n    updated: updated,\n    removed: removed\n  };\n}","map":{"version":3,"sources":["../../../src/geometry/util/diff.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AACH,OAAM,SAAU,IAAI,CAAC,OAA4B,EAAE,IAAc,EAAA;EAC/D,IAAM,KAAK,GAAG,EAAE;EAChB,IAAM,OAAO,GAAG,EAAE;EAClB,IAAM,OAAO,GAAG,EAAE;EAClB,IAAM,WAAW,GAAG,IAAI,GAAG,EAAmB;EAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpC,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAC/B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;IACpB,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;EAC3B;EAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAA;IAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;EAC9C,CAAC,CAAC;EAEF,OAAO;IACL,KAAK,EAAA,KAAA;IACL,OAAO,EAAA,OAAA;IACP,OAAO,EAAA;GACR;AACH","sourcesContent":["/**\n * 对比当前元素和之前的元素，返回 added, updated, removed\n * @param keyItem 之前的元素的，按照 key-item 的 object 的形式存储\n * @param keys 现在的元素，按照 array 的形式存储\n * @returns 由 added, updated, removed array 构成的 object\n */\nexport function diff(keyItem: Record<string, any>, keys: string[]) {\n  const added = [];\n  const updated = [];\n  const removed = [];\n  const keyIncluded = new Map<string, boolean>();\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (keyItem[key]) updated.push(key);\n    else added.push(key);\n    keyIncluded.set(key, true);\n  }\n\n  Object.keys(keyItem).forEach((key) => {\n    if (!keyIncluded.has(key)) removed.push(key);\n  });\n\n  return {\n    added,\n    updated,\n    removed,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}