{"ast":null,"code":"var ANIMATIONS_MAP = {};\n/**\n * 根据名称获取对应的动画执行函数\n * @param type 动画函数名称\n */\nexport function getAnimation(type) {\n  return ANIMATIONS_MAP[type.toLowerCase()];\n}\n/**\n * 注册动画执行函数\n * @param type 动画执行函数名称\n * @param animation 动画执行函数\n */\nexport function registerAnimation(type, animation) {\n  ANIMATIONS_MAP[type.toLowerCase()] = animation;\n}","map":{"version":3,"sources":["../../../src/animate/animation/index.ts"],"names":[],"mappings":"AAWA,IAAM,cAAc,GAAiB,CAAA,CAAE;AAEvC;;;AAGG;AACH,OAAM,SAAU,YAAY,CAAC,IAAY,EAAA;EACvC,OAAO,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3C;AAEA;;;;AAIG;AACH,OAAM,SAAU,iBAAiB,CAAC,IAAY,EAAE,SAAoB,EAAA;EAClE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,SAAS;AAChD","sourcesContent":["import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/** @ignore */\ninterface AnimationMap {\n  [key: string]: Animation;\n}\n\ntype Animation = (element: IGroup | IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) => void;\n\nconst ANIMATIONS_MAP: AnimationMap = {};\n\n/**\n * 根据名称获取对应的动画执行函数\n * @param type 动画函数名称\n */\nexport function getAnimation(type: string) {\n  return ANIMATIONS_MAP[type.toLowerCase()];\n}\n\n/**\n * 注册动画执行函数\n * @param type 动画执行函数名称\n * @param animation 动画执行函数\n */\nexport function registerAnimation(type: string, animation: Animation) {\n  ANIMATIONS_MAP[type.toLowerCase()] = animation;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}