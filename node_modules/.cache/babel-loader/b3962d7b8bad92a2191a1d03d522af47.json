{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest, __values } from \"tslib\";\nimport { deepMix, each, get, isArray, isNull } from '@antv/util';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getLabelBackgroundInfo } from '../geometry/label/util';\nimport { polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\nimport { FIELD_ORIGIN } from '../constant';\nimport { updateLabel } from './update-label';\n/**\n * Geometry labels 渲染组件\n */\nvar Labels = /** @class */function () {\n  function Labels(cfg) {\n    /** 存储当前 shape 的映射表，键值为 shape id */\n    this.shapesMap = {};\n    var layout = cfg.layout,\n      container = cfg.container;\n    this.layout = layout;\n    this.container = container;\n  }\n  /**\n   * 渲染文本\n   */\n  Labels.prototype.render = function (items, shapes, isUpdate) {\n    if (isUpdate === void 0) {\n      isUpdate = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var shapesMap, offscreenGroup, items_1, items_1_1, item, lastShapesMap;\n      var e_1, _a;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            shapesMap = {};\n            offscreenGroup = this.createOffscreenGroup();\n            if (!items.length) return [3 /*break*/, 2];\n            try {\n              // 如果 items 空的话就不进行绘制调整操作\n              // step 1: 在虚拟 group 中创建 shapes\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                if (item) {\n                  shapesMap[item.id] = this.renderLabel(item, offscreenGroup);\n                }\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n            // [todo] Move layout into Worker.\n            // step 2: 根据布局，调整 labels\n            return [4 /*yield*/, this.doLayout(items, shapes, shapesMap)];\n          case 1:\n            // [todo] Move layout into Worker.\n            // step 2: 根据布局，调整 labels\n            _b.sent();\n            // step 3.1: 绘制 labelLine\n            this.renderLabelLine(items, shapesMap);\n            // step 3.2: 绘制 labelBackground\n            this.renderLabelBackground(items, shapesMap);\n            // step 4: 根据用户设置的偏移量调整 label\n            this.adjustLabel(items, shapesMap);\n            _b.label = 2;\n          case 2:\n            lastShapesMap = this.shapesMap;\n            each(shapesMap, function (shape, id) {\n              if (shape.destroyed) {\n                // label 在布局调整环节被删除了（doLayout）\n                delete shapesMap[id];\n              } else {\n                if (lastShapesMap[id]) {\n                  // 图形发生更新\n                  var data = shape.get('data');\n                  var origin_1 = shape.get('origin');\n                  var coordinate = shape.get('coordinate');\n                  var currentAnimateCfg = shape.get('animateCfg');\n                  var currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n                  updateLabel(currentShape, shapesMap[id], {\n                    data: data,\n                    origin: origin_1,\n                    animateCfg: currentAnimateCfg,\n                    coordinate: coordinate\n                  });\n                  shapesMap[id] = currentShape; // 保存引用\n                } else {\n                  // 新生成的 shape\n                  // If container has been destroyed, no need to render labels.\n                  if (_this.container.destroyed) return;\n                  _this.container.add(shape);\n                  var animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n                  if (animateCfg) {\n                    doAnimate(shape, animateCfg, {\n                      toAttrs: __assign({}, shape.attr()),\n                      coordinate: shape.get('coordinate')\n                    });\n                  }\n                }\n                delete lastShapesMap[id];\n              }\n            });\n            // 移除\n            each(lastShapesMap, function (deleteShape) {\n              var animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n              if (animateCfg) {\n                doAnimate(deleteShape, animateCfg, {\n                  toAttrs: null,\n                  coordinate: deleteShape.get('coordinate')\n                });\n              } else {\n                deleteShape.remove(true); // 移除\n              }\n            });\n\n            this.shapesMap = shapesMap;\n            offscreenGroup.destroy();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /** 清除当前 labels */\n  Labels.prototype.clear = function () {\n    this.container.clear();\n    this.shapesMap = {};\n  };\n  /** 销毁 */\n  Labels.prototype.destroy = function () {\n    this.container.destroy();\n    this.shapesMap = null;\n  };\n  Labels.prototype.renderLabel = function (cfg, container) {\n    var id = cfg.id,\n      elementId = cfg.elementId,\n      data = cfg.data,\n      mappingData = cfg.mappingData,\n      coordinate = cfg.coordinate,\n      animate = cfg.animate,\n      content = cfg.content,\n      capture = cfg.capture;\n    var shapeAppendCfg = {\n      id: id,\n      elementId: elementId,\n      capture: capture,\n      data: data,\n      origin: __assign(__assign({}, mappingData), {\n        data: mappingData[FIELD_ORIGIN]\n      }),\n      coordinate: coordinate\n    };\n    var labelGroup = container.addGroup(__assign({\n      name: 'label',\n      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n      animateCfg: this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate)\n    }, shapeAppendCfg));\n    var labelShape;\n    if (content.isGroup && content.isGroup() || content.isShape && content.isShape()) {\n      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n      var _a = content.getCanvasBBox(),\n        width = _a.width,\n        height = _a.height;\n      var textAlign = get(cfg, 'textAlign', 'left');\n      var x = cfg.x;\n      var y = cfg.y - height / 2;\n      if (textAlign === 'center') {\n        x = x - width / 2;\n      } else if (textAlign === 'right' || textAlign === 'end') {\n        x = x - width;\n      }\n      translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n      labelShape = content;\n      labelGroup.add(content);\n    } else {\n      var fill = get(cfg, ['style', 'fill']);\n      labelShape = labelGroup.addShape('text', __assign({\n        attrs: __assign(__assign({\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          textBaseline: get(cfg, 'textBaseline', 'middle'),\n          text: cfg.content\n        }, cfg.style), {\n          fill: isNull(fill) ? cfg.color : fill\n        })\n      }, shapeAppendCfg));\n    }\n    if (cfg.rotate) {\n      rotate(labelShape, cfg.rotate);\n    }\n    return labelGroup;\n  };\n  // 根据type对label布局\n  Labels.prototype.doLayout = function (items, shapes, shapesMap) {\n    return __awaiter(this, void 0, void 0, function () {\n      var layouts;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.layout) return [3 /*break*/, 2];\n            layouts = isArray(this.layout) ? this.layout : [this.layout];\n            return [4 /*yield*/, Promise.all(layouts.map(function (layout) {\n              var layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n              if (!layoutFn) return;\n              var labelShapes = [];\n              var geometryShapes = [];\n              each(shapesMap, function (labelShape, id) {\n                labelShapes.push(labelShape);\n                geometryShapes.push(shapes[labelShape.get('elementId')]);\n              });\n              // [todo] Refactor more layout into Worker.\n              return layoutFn(items, labelShapes, geometryShapes, _this.region, layout.cfg);\n            }))];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Labels.prototype.renderLabelLine = function (labelItems, shapesMap) {\n    each(labelItems, function (labelItem) {\n      var coordinate = get(labelItem, 'coordinate');\n      if (!labelItem || !coordinate) {\n        return;\n      }\n      var center = coordinate.getCenter();\n      var radius = coordinate.getRadius();\n      if (!labelItem.labelLine) {\n        // labelLine: null | false，关闭 label 对应的 labelLine\n        return;\n      }\n      var labelLineCfg = get(labelItem, 'labelLine', {});\n      var id = labelItem.id;\n      var path = labelLineCfg.path;\n      if (!path) {\n        var start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n        path = [['M', start.x, start.y], ['L', labelItem.x, labelItem.y]];\n      }\n      var labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        labelGroup.addShape('path', {\n          capture: false,\n          attrs: __assign({\n            path: path,\n            stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'),\n            fill: null\n          }, labelLineCfg.style),\n          id: id,\n          origin: labelItem.mappingData,\n          data: labelItem.data,\n          coordinate: labelItem.coordinate\n        });\n      }\n    });\n  };\n  /**\n   * 绘制标签背景\n   * @param labelItems\n   */\n  Labels.prototype.renderLabelBackground = function (labelItems, shapesMap) {\n    each(labelItems, function (labelItem) {\n      var coordinate = get(labelItem, 'coordinate');\n      var background = get(labelItem, 'background');\n      if (!background || !coordinate) {\n        return;\n      }\n      var id = labelItem.id;\n      var labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        var labelContentShape = labelGroup.getChildren()[0];\n        if (labelContentShape) {\n          var _a = getLabelBackgroundInfo(labelGroup, labelItem, background.padding),\n            rotation = _a.rotation,\n            box = __rest(_a, [\"rotation\"]);\n          var backgroundShape = labelGroup.addShape('rect', {\n            attrs: __assign(__assign({}, box), background.style || {}),\n            id: id,\n            origin: labelItem.mappingData,\n            data: labelItem.data,\n            coordinate: labelItem.coordinate\n          });\n          backgroundShape.setZIndex(-1);\n          if (rotation) {\n            var matrix = labelContentShape.getMatrix();\n            backgroundShape.setMatrix(matrix);\n          }\n        }\n      }\n    });\n  };\n  Labels.prototype.createOffscreenGroup = function () {\n    var container = this.container;\n    var GroupClass = container.getGroupBase(); // 获取分组的构造函数\n    var newGroup = new GroupClass({});\n    return newGroup;\n  };\n  Labels.prototype.adjustLabel = function (items, shapesMap) {\n    each(items, function (item) {\n      if (item) {\n        var id = item.id;\n        var labelGroup = shapesMap[id];\n        if (!labelGroup.destroyed) {\n          // fix: 如果说开发者的 label content 是一个 group，此处的偏移无法对 整个 content group 生效；场景类似 饼图 spider label 是一个含 2 个 textShape 的 gorup\n          var labelShapes = labelGroup.findAll(function (ele) {\n            return ele.get('type') !== 'path';\n          });\n          each(labelShapes, function (labelShape) {\n            if (labelShape) {\n              if (item.offsetX) {\n                labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n              }\n              if (item.offsetY) {\n                labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n              }\n            }\n          });\n        }\n      }\n    });\n  };\n  return Labels;\n}();\nexport default Labels;","map":{"version":3,"sources":["../../src/component/labels.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each, get, isArray, isNull } from '@antv/util';\nimport { BBox, Coordinate, IGroup, IShape } from '../dependents';\nimport { LabelItem } from '../geometry/label/interface';\nimport { AnimateOption, GeometryLabelLayoutCfg } from '../interface';\nimport { doAnimate } from '../animate';\nimport { getGeometryLabelLayout } from '../geometry/label';\nimport { getLabelBackgroundInfo } from '../geometry/label/util';\nimport { polarToCartesian } from '../util/graphics';\nimport { rotate, translate } from '../util/transform';\nimport { FIELD_ORIGIN } from '../constant';\nimport { updateLabel } from './update-label';\n\n/**\n * Labels 实例创建时，传入构造函数的参数定义\n */\nexport interface LabelsGroupCfg {\n  /** label 容器 */\n  container: IGroup;\n  /** label 布局配置 */\n  layout?: GeometryLabelLayoutCfg | GeometryLabelLayoutCfg[];\n}\n\n/**\n * Geometry labels 渲染组件\n */\nexport default class Labels {\n  /** 用于指定 labels 布局的类型 */\n  public layout: GeometryLabelLayoutCfg | GeometryLabelLayoutCfg[];\n  /** 图形容器 */\n  public container: IGroup;\n  /** 动画配置 */\n  public animate: AnimateOption | false;\n  /** label 绘制的区域 */\n  public region: BBox;\n\n  /** 存储当前 shape 的映射表，键值为 shape id */\n  public shapesMap: Record<string, IGroup> = {};\n\n  constructor(cfg: LabelsGroupCfg) {\n    const { layout, container } = cfg;\n\n    this.layout = layout;\n    this.container = container;\n  }\n  /**\n   * 渲染文本\n   */\n  public async render(items: LabelItem[], shapes: Record<string, IShape | IGroup>, isUpdate: boolean = false) {\n    const shapesMap = {};\n    const offscreenGroup = this.createOffscreenGroup(); // 创建虚拟分组\n    if (items.length) {\n      // 如果 items 空的话就不进行绘制调整操作\n      // step 1: 在虚拟 group 中创建 shapes\n      for (const item of items) {\n        if (item) {\n          shapesMap[item.id] = this.renderLabel(item, offscreenGroup);\n        }\n      }\n      // [todo] Move layout into Worker.\n      // step 2: 根据布局，调整 labels\n      await this.doLayout(items, shapes, shapesMap);\n\n      // step 3.1: 绘制 labelLine\n      this.renderLabelLine(items, shapesMap);\n      // step 3.2: 绘制 labelBackground\n      this.renderLabelBackground(items, shapesMap);\n      // step 4: 根据用户设置的偏移量调整 label\n      this.adjustLabel(items, shapesMap);\n    }\n\n    // 进行添加、更新、销毁操作\n    const lastShapesMap = this.shapesMap;\n    each(shapesMap, (shape, id) => {\n      if (shape.destroyed) {\n        // label 在布局调整环节被删除了（doLayout）\n        delete shapesMap[id];\n      } else {\n        if (lastShapesMap[id]) {\n          // 图形发生更新\n          const data = shape.get('data');\n          const origin = shape.get('origin');\n          const coordinate = shape.get('coordinate');\n          const currentAnimateCfg = shape.get('animateCfg');\n\n          const currentShape = lastShapesMap[id]; // 已经在渲染树上的 shape\n          updateLabel(currentShape, shapesMap[id], {\n            data,\n            origin,\n            animateCfg: currentAnimateCfg,\n            coordinate,\n          });\n\n          shapesMap[id] = currentShape; // 保存引用\n        } else {\n          // 新生成的 shape\n          // If container has been destroyed, no need to render labels.\n          if (this.container.destroyed) return;\n          this.container.add(shape);\n          const animateCfg = get(shape.get('animateCfg'), isUpdate ? 'enter' : 'appear');\n          if (animateCfg) {\n            doAnimate(shape, animateCfg, {\n              toAttrs: {\n                ...shape.attr(),\n              },\n              coordinate: shape.get('coordinate'),\n            });\n          }\n        }\n        delete lastShapesMap[id];\n      }\n    });\n\n    // 移除\n    each(lastShapesMap, (deleteShape) => {\n      const animateCfg = get(deleteShape.get('animateCfg'), 'leave');\n      if (animateCfg) {\n        doAnimate(deleteShape, animateCfg, {\n          toAttrs: null,\n          coordinate: deleteShape.get('coordinate'),\n        });\n      } else {\n        deleteShape.remove(true); // 移除\n      }\n    });\n\n    this.shapesMap = shapesMap;\n    offscreenGroup.destroy();\n  }\n\n  /** 清除当前 labels */\n  public clear() {\n    this.container.clear();\n    this.shapesMap = {};\n  }\n\n  /** 销毁 */\n  public destroy() {\n    this.container.destroy();\n    this.shapesMap = null;\n  }\n\n  private renderLabel(cfg: LabelItem, container: IGroup): IGroup {\n    const { id, elementId, data, mappingData, coordinate, animate, content, capture } = cfg;\n    const shapeAppendCfg = {\n      id,\n      elementId,\n      capture,\n      data,\n      origin: {\n        ...mappingData,\n        data: mappingData[FIELD_ORIGIN],\n      },\n      coordinate,\n    };\n    const labelGroup = container.addGroup({\n      name: 'label',\n      // 如果 this.animate === false 或者 cfg.animate === false/null 则不进行动画，否则进行动画配置的合并\n      animateCfg:\n        this.animate === false || animate === null || animate === false ? false : deepMix({}, this.animate, animate),\n      ...shapeAppendCfg,\n    });\n    let labelShape;\n    if ((content.isGroup && content.isGroup()) || (content.isShape && content.isShape())) {\n      // 如果 content 是 Group 或者 Shape，根据 textAlign 调整位置后，直接将其加入 labelGroup\n      const { width, height } = content.getCanvasBBox();\n      const textAlign = get(cfg, 'textAlign', 'left');\n\n      let x = cfg.x;\n      const y = cfg.y - height / 2;\n\n      if (textAlign === 'center') {\n        x = x - width / 2;\n      } else if (textAlign === 'right' || textAlign === 'end') {\n        x = x - width;\n      }\n\n      translate(content, x, y); // 将 label 平移至 x, y 指定的位置\n      labelShape = content;\n      labelGroup.add(content);\n    } else {\n      const fill = get(cfg, ['style', 'fill']);\n      labelShape = labelGroup.addShape('text', {\n        attrs: {\n          x: cfg.x,\n          y: cfg.y,\n          textAlign: cfg.textAlign,\n          textBaseline: get(cfg, 'textBaseline', 'middle'),\n          text: cfg.content,\n          ...cfg.style,\n          fill: isNull(fill) ? cfg.color : fill,\n        },\n        ...shapeAppendCfg,\n      });\n    }\n\n    if (cfg.rotate) {\n      rotate(labelShape, cfg.rotate);\n    }\n    return labelGroup;\n  }\n\n  // 根据type对label布局\n  private async doLayout(items: LabelItem[], shapes: Record<string, IShape | IGroup>, shapesMap: Record<string, IGroup>) {\n    if (this.layout) {\n      const layouts = isArray(this.layout) ? this.layout : [this.layout];\n      await Promise.all(layouts.map((layout: GeometryLabelLayoutCfg) => {\n        const layoutFn = getGeometryLabelLayout(get(layout, 'type', ''));\n        if (!layoutFn) return;\n\n        const labelShapes = [];\n        const geometryShapes = [];\n        each(shapesMap, (labelShape, id) => {\n          labelShapes.push(labelShape);\n          geometryShapes.push(shapes[labelShape.get('elementId')]);\n        });\n        // [todo] Refactor more layout into Worker.\n        return layoutFn(items, labelShapes, geometryShapes, this.region, layout.cfg);\n      }));\n    }\n  }\n\n  private renderLabelLine(labelItems: LabelItem[], shapesMap) {\n    each(labelItems, (labelItem) => {\n      const coordinate: Coordinate = get(labelItem, 'coordinate');\n      if (!labelItem || !coordinate) {\n        return;\n      }\n      const center = coordinate.getCenter();\n      const radius = coordinate.getRadius();\n      if (!labelItem.labelLine) {\n        // labelLine: null | false，关闭 label 对应的 labelLine\n        return;\n      }\n      const labelLineCfg = get(labelItem, 'labelLine', {});\n      const id = labelItem.id;\n      let path = labelLineCfg.path;\n      if (!path) {\n        const start = polarToCartesian(center.x, center.y, radius, labelItem.angle);\n        path = [\n          ['M', start.x, start.y],\n          ['L', labelItem.x, labelItem.y],\n        ];\n      }\n      const labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        labelGroup.addShape('path', {\n          capture: false, // labelLine 默认不参与事件捕获\n          attrs: {\n            path,\n            stroke: labelItem.color ? labelItem.color : get(labelItem, ['style', 'fill'], '#000'),\n            fill: null,\n            ...labelLineCfg.style,\n          },\n          id,\n          origin: labelItem.mappingData,\n          data: labelItem.data,\n          coordinate: labelItem.coordinate,\n        });\n      }\n    });\n  }\n\n  /**\n   * 绘制标签背景\n   * @param labelItems\n   */\n  private renderLabelBackground(labelItems: LabelItem[], shapesMap) {\n    each(labelItems, (labelItem) => {\n      const coordinate: Coordinate = get(labelItem, 'coordinate');\n      const background: LabelItem['background'] = get(labelItem, 'background');\n      if (!background || !coordinate) {\n        return;\n      }\n\n      const id = labelItem.id;\n      const labelGroup = shapesMap[id];\n      if (!labelGroup.destroyed) {\n        const labelContentShape = labelGroup.getChildren()[0];\n        if (labelContentShape) {\n          const { rotation, ...box } = getLabelBackgroundInfo(labelGroup, labelItem, background.padding);\n          const backgroundShape = labelGroup.addShape('rect', {\n            attrs: {\n              ...box,\n              ...(background.style || {}),\n            },\n            id,\n            origin: labelItem.mappingData,\n            data: labelItem.data,\n            coordinate: labelItem.coordinate,\n          });\n          backgroundShape.setZIndex(-1);\n\n          if (rotation) {\n            const matrix = labelContentShape.getMatrix();\n            backgroundShape.setMatrix(matrix);\n          }\n        }\n      }\n    });\n  }\n\n  private createOffscreenGroup() {\n    const container = this.container;\n    const GroupClass = container.getGroupBase(); // 获取分组的构造函数\n    const newGroup = new GroupClass({});\n    return newGroup;\n  }\n\n  private adjustLabel(items: LabelItem[], shapesMap) {\n    each(items, (item) => {\n      if (item) {\n        const id = item.id;\n        const labelGroup = shapesMap[id];\n        if (!labelGroup.destroyed) {\n          // fix: 如果说开发者的 label content 是一个 group，此处的偏移无法对 整个 content group 生效；场景类似 饼图 spider label 是一个含 2 个 textShape 的 gorup\n          const labelShapes = labelGroup.findAll((ele) => ele.get('type') !== 'path');\n          each(labelShapes, (labelShape) => {\n            if (labelShape) {\n              if (item.offsetX) {\n                labelShape.attr('x', labelShape.attr('x') + item.offsetX);\n              }\n              if (item.offsetY) {\n                labelShape.attr('y', labelShape.attr('y') + item.offsetY);\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}