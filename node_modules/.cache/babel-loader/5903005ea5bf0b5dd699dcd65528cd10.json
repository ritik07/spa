{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/violin';\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\nvar Violin = /** @class */function (_super) {\n  __extends(Violin, _super);\n  function Violin() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'violin';\n    _this.shapeType = 'violin';\n    _this.generatePoints = true;\n    return _this;\n  }\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  Violin.prototype.createShapePointsCfg = function (record) {\n    var cfg = _super.prototype.createShapePointsCfg.call(this, record);\n    // 计算每个 shape 的 size\n    var size;\n    var sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      var coordinate = this.coordinate;\n      var coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  };\n  /**\n   * @override\n   */\n  Violin.prototype.initAttributes = function () {\n    var attributeOption = this.attributeOption;\n    var sizeField = attributeOption.size ? attributeOption.size.fields[0] : this._sizeField ? this._sizeField : 'size';\n    this._sizeField = sizeField;\n    // fixme 干啥要删掉\n    delete attributeOption.size;\n    _super.prototype.initAttributes.call(this);\n  };\n  return Violin;\n}(Geometry);\nexport default Violin;","map":{"version":3,"sources":["../../src/geometry/violin.ts"],"names":[],"mappings":";AAAA,SAAS,GAAG,QAAQ,YAAY;AAChC,SAAS,YAAY,QAAQ,aAAa;AAE1C,SAAS,mBAAmB,QAAQ,oBAAoB;AACxD,SAAS,cAAc,QAAQ,mBAAmB;AAClD,OAAO,QAAQ,MAAM,QAAQ;AAC7B;AACA,OAAO,gBAAgB;AAEvB;;;AAGG;AACH,IAAA,MAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;EAApC,SAAA,MAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACkB,KAAA,CAAA,IAAI,GAAW,QAAQ;IACvB,KAAA,CAAA,SAAS,GAAW,QAAQ;IAClC,KAAA,CAAA,cAAc,GAAY,IAAI;;EA+C1C;EA3CE;;;;AAIG;EACO,MAAA,CAAA,SAAA,CAAA,oBAAoB,GAA9B,UAA+B,MAAa,EAAA;IAC1C,IAAM,GAAG,GAAG,MAAA,CAAA,SAAA,CAAM,oBAAoB,CAAA,IAAA,CAAA,IAAA,EAAC,MAAM,CAAC;IAE9C;IACA,IAAI,IAAI;IACR,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IAC1C,IAAI,QAAQ,EAAE;MACZ,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;MACnD;MACA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU;MAClC,IAAM,eAAe,GAAG,mBAAmB,CAAC,UAAU,CAAC;MACvD,IAAI,GAAG,IAAI,GAAG,eAAe;KAC9B,MAAM;MACL,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;QACrB,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC;MACxC;MACD,IAAI,GAAG,IAAI,CAAC,WAAW;IACxB;IACD,GAAG,CAAC,IAAI,GAAG,IAAI;IACf,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACxD,OAAO,GAAG;EACZ,CAAC;EAED;;AAEG;EACO,MAAA,CAAA,SAAA,CAAA,cAAc,GAAxB,YAAA;IACU,IAAA,eAAe,GAAK,IAAI,CAAA,eAAT;IACvB,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,GAClC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAC9B,IAAI,CAAC,UAAU,GACf,IAAI,CAAC,UAAU,GACf,MAAM;IACV,IAAI,CAAC,UAAU,GAAG,SAAS;IAC3B;IACA,OAAO,eAAe,CAAC,IAAI;IAC3B,MAAA,CAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,CAAE;EACxB,CAAC;EACH,OAAA,MAAC;AAAD,CAAC,CAlDmC,QAAQ,CAAA","sourcesContent":["import { get } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Datum, ViolinShapePoint } from '../interface';\nimport { getXDimensionLength } from '../util/coordinate';\nimport { getDefaultSize } from './util/shape-size';\nimport Geometry from './base';\n/** 引入 Path 对应的 ShapeFactory */\nimport './shape/violin';\n\n/**\n * Violin 几何标记。\n * 用于绘制小提琴图。\n */\nexport default class Violin extends Geometry<ViolinShapePoint> {\n  public readonly type: string = 'violin';\n  public readonly shapeType: string = 'violin';\n  protected generatePoints: boolean = true;\n  /** size 私有映射字段 */\n  private _sizeField: string;\n\n  /**\n   * 获取 Shape 的关键点数据。\n   * @param record\n   * @returns\n   */\n  protected createShapePointsCfg(record: Datum) {\n    const cfg = super.createShapePointsCfg(record);\n\n    // 计算每个 shape 的 size\n    let size;\n    const sizeAttr = this.getAttribute('size');\n    if (sizeAttr) {\n      size = this.getAttributeValues(sizeAttr, record)[0];\n      // 归一化\n      const coordinate = this.coordinate;\n      const coordinateWidth = getXDimensionLength(coordinate);\n      size = size / coordinateWidth;\n    } else {\n      if (!this.defaultSize) {\n        this.defaultSize = getDefaultSize(this);\n      }\n      size = this.defaultSize;\n    }\n    cfg.size = size;\n    cfg._size = get(record[FIELD_ORIGIN], [this._sizeField]);\n    return cfg;\n  }\n\n  /**\n   * @override\n   */\n  protected initAttributes() {\n    const { attributeOption } = this;\n    const sizeField = attributeOption.size\n      ? attributeOption.size.fields[0]\n      : this._sizeField\n      ? this._sizeField\n      : 'size';\n    this._sizeField = sizeField;\n    // fixme 干啥要删掉\n    delete attributeOption.size;\n    super.initAttributes();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}