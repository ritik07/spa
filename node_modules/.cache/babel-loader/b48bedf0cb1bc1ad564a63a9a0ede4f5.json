{"ast":null,"code":"// 检测各边是否超出\nexport function getOutSides(x, y, width, height, limitBox) {\n  var hits = {\n    left: x < limitBox.x,\n    right: x + width > limitBox.x + limitBox.width,\n    top: y < limitBox.y,\n    bottom: y + height > limitBox.y + limitBox.height\n  };\n  return hits;\n}\nexport function getPointByPosition(x, y, offset, width, height, position) {\n  var px = x;\n  var py = y;\n  switch (position) {\n    case 'left':\n      // left center\n      px = x - width - offset;\n      py = y - height / 2;\n      break;\n    case 'right':\n      px = x + offset;\n      py = y - height / 2;\n      break;\n    case 'top':\n      px = x - width / 2;\n      py = y - height - offset;\n      break;\n    case 'bottom':\n      // bottom\n      px = x - width / 2;\n      py = y + offset;\n      break;\n    default:\n      // auto, 在 top-right\n      px = x + offset;\n      py = y - height - offset;\n      break;\n  }\n  return {\n    x: px,\n    y: py\n  };\n}\nexport function getAlignPoint(x, y, offset, width, height, position, limitBox) {\n  var point = getPointByPosition(x, y, offset, width, height, position);\n  if (limitBox) {\n    var outSides = getOutSides(point.x, point.y, width, height, limitBox);\n    if (position === 'auto') {\n      // 如果是 auto，默认 tooltip 在右上角，仅需要判定右侧和上测冲突即可\n      if (outSides.right) {\n        point.x = Math.max(0, x - width - offset);\n      }\n      if (outSides.top) {\n        point.y = Math.max(0, y - height - offset);\n      }\n    } else if (position === 'top' || position === 'bottom') {\n      if (outSides.left) {\n        // 左侧躲避\n        point.x = limitBox.x;\n      }\n      if (outSides.right) {\n        // 右侧躲避\n        point.x = limitBox.x + limitBox.width - width;\n      }\n      if (position === 'top' && outSides.top) {\n        // 如果上面对齐检测上面，不检测下面\n        point.y = y + offset;\n      }\n      if (position === 'bottom' && outSides.bottom) {\n        point.y = y - height - offset;\n      }\n    } else {\n      // 检测左右位置\n      if (outSides.top) {\n        point.y = limitBox.y;\n      }\n      if (outSides.bottom) {\n        point.y = limitBox.y + limitBox.height - height;\n      }\n      if (position === 'left' && outSides.left) {\n        point.x = x + offset;\n      }\n      if (position === 'right' && outSides.right) {\n        point.x = x - width - offset;\n      }\n    }\n  }\n  return point;\n}","map":{"version":3,"sources":["../../src/util/align.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// 检测各边是否超出\nexport function getOutSides(x, y, width, height, limitBox) {\n    var hits = {\n        left: x < limitBox.x,\n        right: x + width > limitBox.x + limitBox.width,\n        top: y < limitBox.y,\n        bottom: y + height > limitBox.y + limitBox.height,\n    };\n    return hits;\n}\nexport function getPointByPosition(x, y, offset, width, height, position) {\n    var px = x;\n    var py = y;\n    switch (position) {\n        case 'left': // left center\n            px = x - width - offset;\n            py = y - height / 2;\n            break;\n        case 'right':\n            px = x + offset;\n            py = y - height / 2;\n            break;\n        case 'top':\n            px = x - width / 2;\n            py = y - height - offset;\n            break;\n        case 'bottom':\n            // bottom\n            px = x - width / 2;\n            py = y + offset;\n            break;\n        default:\n            // auto, 在 top-right\n            px = x + offset;\n            py = y - height - offset;\n            break;\n    }\n    return {\n        x: px,\n        y: py,\n    };\n}\nexport function getAlignPoint(x, y, offset, width, height, position, limitBox) {\n    var point = getPointByPosition(x, y, offset, width, height, position);\n    if (limitBox) {\n        var outSides = getOutSides(point.x, point.y, width, height, limitBox);\n        if (position === 'auto') {\n            // 如果是 auto，默认 tooltip 在右上角，仅需要判定右侧和上测冲突即可\n            if (outSides.right) {\n                point.x = Math.max(0, x - width - offset);\n            }\n            if (outSides.top) {\n                point.y = Math.max(0, y - height - offset);\n            }\n        }\n        else if (position === 'top' || position === 'bottom') {\n            if (outSides.left) {\n                // 左侧躲避\n                point.x = limitBox.x;\n            }\n            if (outSides.right) {\n                // 右侧躲避\n                point.x = limitBox.x + limitBox.width - width;\n            }\n            if (position === 'top' && outSides.top) {\n                // 如果上面对齐检测上面，不检测下面\n                point.y = y + offset;\n            }\n            if (position === 'bottom' && outSides.bottom) {\n                point.y = y - height - offset;\n            }\n        }\n        else {\n            // 检测左右位置\n            if (outSides.top) {\n                point.y = limitBox.y;\n            }\n            if (outSides.bottom) {\n                point.y = limitBox.y + limitBox.height - height;\n            }\n            if (position === 'left' && outSides.left) {\n                point.x = x + offset;\n            }\n            if (position === 'right' && outSides.right) {\n                point.x = x - width - offset;\n            }\n        }\n    }\n    return point;\n}\n//# sourceMappingURL=align.js.map"]},"metadata":{},"sourceType":"module"}