{"ast":null,"code":"var Symbols = {\n  // 圆\n  circle: function (x, y, r) {\n    return [['M', x, y], ['m', -r, 0], ['a', r, r, 0, 1, 0, r * 2, 0], ['a', r, r, 0, 1, 0, -r * 2, 0]];\n  },\n  // 正方形\n  square: function (x, y, r) {\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n  },\n  // 菱形\n  diamond: function (x, y, r) {\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n  },\n  // 三角形\n  triangle: function (x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['z']];\n  },\n  // 倒三角形\n  triangleDown: function (x, y, r) {\n    var diffY = r * Math.sin(1 / 3 * Math.PI);\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n  }\n};\nexport default {\n  get: function (type) {\n    return Symbols[type];\n  },\n  register: function (type, func) {\n    Symbols[type] = func;\n  },\n  remove: function (type) {\n    delete Symbols[type];\n  },\n  getAll: function () {\n    return Symbols;\n  }\n};","map":{"version":3,"sources":["../../../src/shape/marker/symbols.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var Symbols = {\n    // 圆\n    circle: function (x, y, r) {\n        return [\n            ['M', x, y],\n            ['m', -r, 0],\n            ['a', r, r, 0, 1, 0, r * 2, 0],\n            ['a', r, r, 0, 1, 0, -r * 2, 0],\n        ];\n    },\n    // 正方形\n    square: function (x, y, r) {\n        return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n    },\n    // 菱形\n    diamond: function (x, y, r) {\n        return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n    },\n    // 三角形\n    triangle: function (x, y, r) {\n        var diffY = r * Math.sin((1 / 3) * Math.PI);\n        return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['z']];\n    },\n    // 倒三角形\n    triangleDown: function (x, y, r) {\n        var diffY = r * Math.sin((1 / 3) * Math.PI);\n        return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n    },\n};\nexport default {\n    get: function (type) {\n        return Symbols[type];\n    },\n    register: function (type, func) {\n        Symbols[type] = func;\n    },\n    remove: function (type) {\n        delete Symbols[type];\n    },\n    getAll: function () {\n        return Symbols;\n    },\n};\n//# sourceMappingURL=symbols.js.map"]},"metadata":{},"sourceType":"module"}