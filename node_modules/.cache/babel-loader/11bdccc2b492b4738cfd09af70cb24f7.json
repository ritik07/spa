{"ast":null,"code":"import isArray from './is-array';\nimport isFunction from './is-function';\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nexport default (function (arr, fn) {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n  var maxItem;\n  var max = -Infinity;\n  for (var i = 0; i < arr.length; i++) {\n    var item = arr[i];\n    var v = isFunction(fn) ? fn(item) : item[fn];\n    if (v > max) {\n      maxItem = item;\n      max = v;\n    }\n  }\n  return maxItem;\n});","map":{"version":3,"sources":["../src/max-by.ts"],"names":[],"mappings":"AACA,OAAO,OAAO,MAAM,YAAY;AAChC,OAAO,UAAU,MAAM,eAAe;AACtC;;;;;;;;;;;;;AAaG;AACH,gBAAe,UAAI,GAAQ,EAAE,EAA+B,EAAA;EAC1D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;IACjB,OAAO,SAAS;EACjB;EAED,IAAI,OAAO;EACX,IAAI,GAAG,GAAG,CAAC,QAAQ;EAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACnC,IAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;IACnB,IAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAE9C,IAAI,CAAC,GAAG,GAAG,EAAE;MACX,OAAO,GAAG,IAAI;MACd,GAAG,GAAG,CAAC;IACR;EACF;EAED,OAAO,OAAO;AAChB,CAAC","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nimport isFunction from './is-function';\n/**\n * @param {Array} arr The array to iterate over.\n * @param {Function} [fn] The iteratee invoked per element.\n * @return {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nexport default (function (arr, fn) {\n    if (!isArray(arr)) {\n        return undefined;\n    }\n    var maxItem;\n    var max = -Infinity;\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        var v = isFunction(fn) ? fn(item) : item[fn];\n        if (v > max) {\n            maxItem = item;\n            max = v;\n        }\n    }\n    return maxItem;\n});\n//# sourceMappingURL=max-by.js.map"]},"metadata":{},"sourceType":"module"}