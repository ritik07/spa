{"ast":null,"code":"/**\n * 封装事件，便于使用上下文this,和便于解除事件时使用\n * @protected\n * @param  {Object} obj   对象\n * @param  {String} action 事件名称\n * @return {Function}        返回事件处理函数\n */\nfunction wrapBehavior(obj, action) {\n  if (obj['_wrap_' + action]) {\n    return obj['_wrap_' + action];\n  }\n  var method = function (e) {\n    obj[action](e);\n  };\n  obj['_wrap_' + action] = method;\n  return method;\n}\nexport default wrapBehavior;","map":{"version":3,"sources":["../src/wrap-behavior.ts"],"names":[],"mappings":"AACA;;;;;;AAMG;AACH,SAAS,YAAY,CAAC,GAAW,EAAE,MAAc,EAAA;EAC/C,IAAI,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,EAAE;IAC1B,OAAO,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;EAC9B;EACD,IAAM,MAAM,GAAG,UAAA,CAAC,EAAA;IACd,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EACD,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,MAAM;EAC/B,OAAO,MAAM;AACf;AAEA,eAAe,YAAY","sourceRoot":"","sourcesContent":["/**\n * 封装事件，便于使用上下文this,和便于解除事件时使用\n * @protected\n * @param  {Object} obj   对象\n * @param  {String} action 事件名称\n * @return {Function}        返回事件处理函数\n */\nfunction wrapBehavior(obj, action) {\n    if (obj['_wrap_' + action]) {\n        return obj['_wrap_' + action];\n    }\n    var method = function (e) {\n        obj[action](e);\n    };\n    obj['_wrap_' + action] = method;\n    return method;\n}\nexport default wrapBehavior;\n//# sourceMappingURL=wrap-behavior.js.map"]},"metadata":{},"sourceType":"module"}