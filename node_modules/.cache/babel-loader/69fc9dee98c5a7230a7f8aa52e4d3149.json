{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n/** 线条形 marker symbol */\nvar STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle, style) {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker, color) {\n  var symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    var markerStyle = get(marker, 'style', {});\n    var lineWidth = get(markerStyle, 'lineWidth', 1);\n    var stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, {\n      lineWidth: lineWidth,\n      stroke: stroke,\n      fill: null\n    });\n  }\n}\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker) {\n  var symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction) {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(view, geometry, attr, themeMarker, userMarker) {\n  var scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    var field_1 = scale.field;\n    var colorAttr_1 = geometry.getAttribute('color');\n    var shapeAttr_1 = geometry.getAttribute('shape');\n    var defaultColor_1 = view.getTheme().defaultColor;\n    var isInPolar_1 = geometry.coordinate.isPolar;\n    return scale.getTicks().map(function (tick, index) {\n      var _a;\n      var text = tick.text,\n        scaleValue = tick.value;\n      var name = text;\n      var value = scale.invert(scaleValue);\n      // 通过过滤图例项的数据，来看是否 unchecked\n      var unchecked = view.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length === 0;\n      each(view.views, function (subView) {\n        var _a;\n        if (!subView.filterFieldData(field_1, [(_a = {}, _a[field_1] = value, _a)]).length) {\n          unchecked = true;\n        }\n      });\n      // @ts-ignore\n      var color = getMappingValue(colorAttr_1, value, defaultColor_1);\n      var shape = getMappingValue(shapeAttr_1, value, 'point');\n      var marker = geometry.getShapeMarker(shape, {\n        color: color,\n        isInPolar: isInPolar_1\n      });\n      var markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, __assign({\n          name: name,\n          value: value\n        }, deepMix({}, themeMarker, marker)));\n      }\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit(__assign({}, markerCfg), ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n      return {\n        id: value,\n        name: name,\n        value: value,\n        marker: marker,\n        unchecked: unchecked\n      };\n    });\n  }\n  return [];\n}\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker, userMarker, customItems) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map(function (item, index) {\n    var markerCfg = userMarker;\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n    var itemMarker = isFunction(item.marker) ? item.marker(item.name, index, deepMix({}, themeMarker, item)) : item.marker;\n    var marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n    item.marker = marker;\n    return item;\n  });\n}\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme, direction) {\n  var legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}","map":{"version":3,"sources":["../../src/util/legend.ts"],"names":[],"mappings":";AACA,SAAS,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,QAAQ,YAAY;AAErE,SAAS,SAAS,QAAQ,aAAa;AAIvC,SAAS,eAAe,QAAQ,QAAQ;AACxC,SAAS,IAAI,QAAQ,UAAU;AAC/B,SAAS,aAAa,QAAQ,UAAU;AAExC;AACA,IAAM,eAAe,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEnE;;;;;AAKG;AACH,SAAS,qBAAqB,CAAC,WAAuB,EAAE,KAAyB,EAAA;EAC/E,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;IACrB,OAAO,KAAK,CAAC,WAAW,CAAC;EAC1B;EACD,OAAO,OAAO,CAAC,CAAA,CAAE,EAAE,WAAW,EAAE,KAAK,CAAC;AACxC;AAEA;;;;;AAKG;AACH,SAAS,kBAAkB,CAAC,MAAuB,EAAE,KAAa,EAAA;EAChE,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;IAC9D,IAAM,WAAW,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,CAAA,CAAE,CAAC;IAC5C,IAAM,SAAS,GAAG,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;IAClD,IAAM,MAAM,GAAG,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,IAAI,IAAI,KAAK;IAC9D,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,CAAA,CAAE,EAAE,MAAM,CAAC,KAAK,EAAE;MAAE,SAAS,EAAA,SAAA;MAAE,MAAM,EAAA,MAAA;MAAE,IAAI,EAAE;IAAI,CAAE,CAAC;EAC5E;AACH;AAEA;;;AAGG;AACH,SAAS,eAAe,CAAC,MAAuB,EAAA;EAC9C,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM;EAC5B,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;IAC7C,MAAM,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;EACtC;AACH;AAEA;;;;;AAKG;AACH,OAAM,SAAU,eAAe,CAAC,SAAoB,EAAA;EAClD,OAAO,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,YAAY;AAClH;AAOA;;;;;;;;;AASG;AACH,OAAM,SAAU,cAAc,CAC5B,IAAU,EACV,QAAkB,EAClB,IAAe,EACf,WAAmB,EACnB,UAA+B,EAAA;EAE/B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;EACtC,IAAI,KAAK,CAAC,UAAU,EAAE;IACpB,IAAM,OAAK,GAAG,KAAK,CAAC,KAAK;IACzB,IAAM,WAAS,GAAG,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;IAChD,IAAM,WAAS,GAAG,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;IAChD,IAAM,cAAY,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY;IACjD,IAAM,WAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,OAAO;IAE7C,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAC,IAAU,EAAE,KAAa,EAAA;;MAC5C,IAAA,IAAI,GAAwB,IAAI,CAAA,IAA5B;QAAS,UAAU,GAAK,IAAI,CAAA,KAAT;MAC/B,IAAM,IAAI,GAAG,IAAI;MACjB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;MAEtC;MACA,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,OAAK,EAAE,EAAA,EAAA,GAAA,CAAA,CAAA,EAAG,EAAA,CAAC,OAAK,CAAA,GAAG,KAAK,EAAA,EAAA,EAAG,CAAC,CAAC,MAAM,KAAK,CAAC;MAC9E,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,OAAO,EAAA;;QACvB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAK,EAAE,EAAA,EAAA,GAAA,CAAA,CAAA,EAAG,EAAA,CAAC,OAAK,CAAA,GAAG,KAAK,EAAA,EAAA,EAAG,CAAC,CAAC,MAAM,EAAE;UAChE,SAAS,GAAG,IAAI;QACjB;MACH,CAAC,CAAC;MAEF;MACA,IAAM,KAAK,GAAG,eAAe,CAAC,WAAS,EAAE,KAAK,EAAE,cAAY,CAAC;MAC7D,IAAM,KAAK,GAAG,eAAe,CAAC,WAAS,EAAE,KAAK,EAAE,OAAO,CAAC;MACxD,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE;QAC1C,KAAK,EAAA,KAAA;QACL,SAAS,EAAA;OACV,CAAC;MAEF,IAAI,SAAS,GAAG,UAAU;MAC1B,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;QACzB,SAAS,GAAG,SAAS,CAAC,IAAI,EAAE,KAAK,EAAA,QAAA,CAAA;UAAI,IAAI,EAAA,IAAA;UAAE,KAAK,EAAA;QAAA,CAAA,EAAK,OAAO,CAAC,CAAA,CAAE,EAAE,WAAW,EAAE,MAAM,CAAC,CAAA,CAAG;MACzF;MAED;MACA,MAAM,GAAG,OAAO,CAAC,CAAA,CAAE,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,EAAM,SAAS,CAAA,EAAI,CAAC,OAAO,CAAC,CAAC,CAAC;MAC5E,kBAAkB,CAAC,MAAM,EAAE,KAAK,CAAC;MACjC,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;QAChC;QACA,MAAM,CAAC,KAAK,GAAG,qBAAqB,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC;MACpE;MACD,eAAe,CAAC,MAAM,CAAC;MAEvB,OAAO;QAAE,EAAE,EAAE,KAAK;QAAE,IAAI,EAAA,IAAA;QAAE,KAAK,EAAA,KAAA;QAAE,MAAM,EAAA,MAAA;QAAE,SAAS,EAAA;MAAA,CAAE;IACtD,CAAC,CAAC;EACH;EACD,OAAO,EAAE;AACX;AAEA;;;;;;;AAOG;AACH,OAAM,SAAU,oBAAoB,CAAC,WAAmB,EAAE,UAAkB,EAAE,WAAyB,EAAA;EACrG;EACA,OAAO,WAAW,CAAC,GAAG,CAAC,UAAC,IAAgB,EAAE,KAAa,EAAA;IACrD,IAAI,SAAS,GAAG,UAAU;IAC1B,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;MACzB,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA,CAAE,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACxE;IAED,IAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA,CAAE,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,GAC7D,IAAI,CAAC,MAAM;IAEf,IAAM,MAAM,GAAG,OAAO,CAAC,CAAA,CAAE,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC;IAC9D,eAAe,CAAC,MAAM,CAAC;IAEvB,IAAI,CAAC,MAAM,GAAG,MAAM;IACpB,OAAO,IAAI;EACb,CAAC,CAAC;AACJ;AAEA;;;;;;AAMG;AACH,OAAM,SAAU,iBAAiB,CAAC,KAAa,EAAE,SAAiB,EAAA;EAChE,IAAM,WAAW,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,EAAE,CAAA,CAAE,CAAC;EAC5D,OAAO,OAAO,CAAC,CAAA,CAAE,EAAE,GAAG,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAA,CAAE,CAAC,EAAE,OAAO,CAAC,CAAA,CAAE,EAAE,GAAG,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,EAAE,CAAA,CAAE,CAAC,CAAC,CAAC;AACtG","sourcesContent":["import { LegendMarkerCfg } from '@antv/component';\nimport { deepMix, isString, each, get, isFunction } from '@antv/util';\nimport View from '../chart/view';\nimport { DIRECTION } from '../constant';\nimport { Attribute, ShapeAttrs, Tick } from '../dependents';\nimport Geometry from '../geometry/base';\nimport { LegendCfg, LegendItem, MarkerCfg } from '../interface';\nimport { getMappingValue } from './attr';\nimport { omit } from './helper';\nimport { MarkerSymbols } from './marker';\n\n/** 线条形 marker symbol */\nconst STROKES_SYMBOLS = ['line', 'cross', 'tick', 'plus', 'hyphen'];\n\n/**\n * 处理用户配置的 marker style\n * @param markerStyle\n * @param userMarker.style\n * @returns {ShapeAttrs} newStyle\n */\nfunction handleUserMarkerStyle(markerStyle: ShapeAttrs, style: MarkerCfg['style']): ShapeAttrs {\n  if (isFunction(style)) {\n    return style(markerStyle);\n  }\n  return deepMix({}, markerStyle, style);\n}\n\n/**\n * 根据 marker 是否为线条形 symbol, 来调整下样式\n * @param symbol\n * @param style\n * @param color\n */\nfunction adpatorMarkerStyle(marker: LegendMarkerCfg, color: string): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && STROKES_SYMBOLS.indexOf(symbol) !== -1) {\n    const markerStyle = get(marker, 'style', {});\n    const lineWidth = get(markerStyle, 'lineWidth', 1);\n    const stroke = markerStyle.stroke || markerStyle.fill || color;\n    marker.style = deepMix({}, marker.style, { lineWidth, stroke, fill: null });\n  }\n}\n\n/**\n * 设置 marker 的 symbol，将 字符串的 symbol 转换为真正的绘制命令\n * @param marker\n */\nfunction setMarkerSymbol(marker: LegendMarkerCfg): void {\n  const symbol = marker.symbol;\n  if (isString(symbol) && MarkerSymbols[symbol]) {\n    marker.symbol = MarkerSymbols[symbol];\n  }\n}\n\n/**\n * @ignore\n * get the legend layout from direction\n * @param direction\n * @returns layout 'horizontal' | 'vertical'\n */\nexport function getLegendLayout(direction: DIRECTION): 'vertical' | 'horizontal' {\n  return direction.startsWith(DIRECTION.LEFT) || direction.startsWith(DIRECTION.RIGHT) ? 'vertical' : 'horizontal';\n}\n\n/** item of @antv/component legend  */\ntype ComponentLegendItem = Omit<LegendItem, 'marker'> & {\n  marker: any;\n};\n\n/**\n * @ignore\n * get the legend items\n * @param view\n * @param geometry\n * @param attr\n * @param themeMarker\n * @param markerCfg\n * @returns legend items\n */\nexport function getLegendItems(\n  view: View,\n  geometry: Geometry,\n  attr: Attribute,\n  themeMarker: object,\n  userMarker: LegendCfg['marker']\n): ComponentLegendItem[] {\n  const scale = attr.getScale(attr.type);\n  if (scale.isCategory) {\n    const field = scale.field;\n    const colorAttr = geometry.getAttribute('color');\n    const shapeAttr = geometry.getAttribute('shape');\n    const defaultColor = view.getTheme().defaultColor;\n    const isInPolar = geometry.coordinate.isPolar;\n\n    return scale.getTicks().map((tick: Tick, index: number) => {\n      const { text, value: scaleValue } = tick;\n      const name = text;\n      const value = scale.invert(scaleValue);\n\n      // 通过过滤图例项的数据，来看是否 unchecked\n      let unchecked = view.filterFieldData(field, [{ [field]: value }]).length === 0;\n      each(view.views, (subView) => {\n        if (!subView.filterFieldData(field, [{ [field]: value }]).length) {\n          unchecked = true;\n        }\n      });\n\n      // @ts-ignore\n      const color = getMappingValue(colorAttr, value, defaultColor);\n      const shape = getMappingValue(shapeAttr, value, 'point');\n      let marker = geometry.getShapeMarker(shape, {\n        color,\n        isInPolar,\n      });\n\n      let markerCfg = userMarker;\n      if (isFunction(markerCfg)) {\n        markerCfg = markerCfg(name, index, { name, value, ...deepMix({}, themeMarker, marker) });\n      }\n\n      // the marker configure order should be ensure\n      marker = deepMix({}, themeMarker, marker, omit({ ...markerCfg }, ['style']));\n      adpatorMarkerStyle(marker, color);\n      if (markerCfg && markerCfg.style) {\n        // handle user's style settings\n        marker.style = handleUserMarkerStyle(marker.style, markerCfg.style);\n      }\n      setMarkerSymbol(marker);\n\n      return { id: value, name, value, marker, unchecked };\n    });\n  }\n  return [];\n}\n\n/**\n *\n * @ignore\n * custom legend 的 items 获取\n * @param themeMarker\n * @param userMarker\n * @param customItems\n */\nexport function getCustomLegendItems(themeMarker: object, userMarker: object, customItems: LegendItem[]) {\n  // 如果有自定义的 item，那么就直接使用，并合并主题的 marker 配置\n  return customItems.map((item: LegendItem, index: number) => {\n    let markerCfg = userMarker;\n    if (isFunction(markerCfg)) {\n      markerCfg = markerCfg(item.name, index, deepMix({}, themeMarker, item));\n    }\n\n    const itemMarker = isFunction(item.marker)\n      ? item.marker(item.name, index, deepMix({}, themeMarker, item))\n      : item.marker;\n\n    const marker = deepMix({}, themeMarker, markerCfg, itemMarker);\n    setMarkerSymbol(marker);\n\n    item.marker = marker;\n    return item;\n  });\n}\n\n/**\n * get the legend cfg from theme, will mix the common cfg of legend theme\n *\n * @param theme view theme object\n * @param direction legend direction\n * @returns legend theme cfg\n */\nexport function getLegendThemeCfg(theme: object, direction: string): object {\n  const legendTheme = get(theme, ['components', 'legend'], {});\n  return deepMix({}, get(legendTheme, ['common'], {}), deepMix({}, get(legendTheme, [direction], {})));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}