{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\n */\nvar Identity = /** @class */function (_super) {\n  __extends(Identity, _super);\n  function Identity() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'identity';\n    _this.isIdentity = true;\n    return _this;\n  }\n  Identity.prototype.calculateTicks = function () {\n    return this.values;\n  };\n  Identity.prototype.scale = function (value) {\n    // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\n    if (this.values[0] !== value && isNumber(value)) {\n      return value;\n    }\n    return this.range[0];\n  };\n  Identity.prototype.invert = function (value) {\n    var range = this.range;\n    if (value < range[0] || value > range[1]) {\n      return NaN;\n    }\n    return this.values[0];\n  };\n  return Identity;\n}(Base);\nexport default Identity;","map":{"version":3,"sources":["../../src/identity/index.ts"],"names":[],"mappings":";AAAA,SAAc,QAAQ,QAAQ,YAAY;AAC1C,OAAO,IAAI,MAAM,SAAS;AAG1B;;;;AAIG;AACH,IAAA,QAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAsC,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;EAAtC,SAAA,QAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACkB,KAAA,CAAA,IAAI,GAAc,UAAU;IAC5B,KAAA,CAAA,UAAU,GAAY,IAAI;;EAqB5C;EAnBS,QAAA,CAAA,SAAA,CAAA,cAAc,GAArB,YAAA;IACE,OAAO,IAAI,CAAC,MAAM;EACpB,CAAC;EAEM,QAAA,CAAA,SAAA,CAAA,KAAK,GAAZ,UAAa,KAAU,EAAA;IACrB;IACA,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC/C,OAAO,KAAK;IACb;IACD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAEM,QAAA,CAAA,SAAA,CAAA,MAAM,GAAb,UAAc,KAAc,EAAA;IAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK;IACxB,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;MACxC,OAAO,GAAG;IACX;IACD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EACvB,CAAC;EACH,OAAA,QAAC;AAAD,CAAC,CAvBqC,IAAI,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\n */\nvar Identity = /** @class */ (function (_super) {\n    __extends(Identity, _super);\n    function Identity() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'identity';\n        _this.isIdentity = true;\n        return _this;\n    }\n    Identity.prototype.calculateTicks = function () {\n        return this.values;\n    };\n    Identity.prototype.scale = function (value) {\n        // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\n        if (this.values[0] !== value && isNumber(value)) {\n            return value;\n        }\n        return this.range[0];\n    };\n    Identity.prototype.invert = function (value) {\n        var range = this.range;\n        if (value < range[0] || value > range[1]) {\n            return NaN;\n        }\n        return this.values[0];\n    };\n    return Identity;\n}(Base));\nexport default Identity;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}