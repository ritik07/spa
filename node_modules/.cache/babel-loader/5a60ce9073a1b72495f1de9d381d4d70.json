{"ast":null,"code":"import { DIRECTION } from '../constant';\n/**\n * @ignore\n * 方位常量转实际的 bbox 位置大小\n * @param parentBBox\n * @param bbox\n * @param direction\n */\nexport function directionToPosition(parentBBox, bbox, direction) {\n  if (direction === DIRECTION.TOP) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.minY];\n  }\n  if (direction === DIRECTION.BOTTOM) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.maxY - bbox.height];\n  }\n  if (direction === DIRECTION.LEFT) {\n    return [parentBBox.minX, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.RIGHT) {\n    return [parentBBox.maxX - bbox.width, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.TOP_LEFT || direction === DIRECTION.LEFT_TOP) {\n    return [parentBBox.tl.x, parentBBox.tl.y];\n  }\n  if (direction === DIRECTION.TOP_RIGHT || direction === DIRECTION.RIGHT_TOP) {\n    return [parentBBox.tr.x - bbox.width, parentBBox.tr.y];\n  }\n  if (direction === DIRECTION.BOTTOM_LEFT || direction === DIRECTION.LEFT_BOTTOM) {\n    return [parentBBox.bl.x, parentBBox.bl.y - bbox.height];\n  }\n  if (direction === DIRECTION.BOTTOM_RIGHT || direction === DIRECTION.RIGHT_BOTTOM) {\n    return [parentBBox.br.x - bbox.width, parentBBox.br.y - bbox.height];\n  }\n  return [0, 0];\n}\n/**\n * get direction after coordinate transpose\n * @param direction\n * @param coordinate\n * @returns direction after transpose or not\n */\nfunction getTransposedDirection(direction, coordinate) {\n  if (coordinate.isTransposed) {\n    switch (direction) {\n      case DIRECTION.BOTTOM:\n        return DIRECTION.LEFT;\n      case DIRECTION.LEFT:\n        return DIRECTION.BOTTOM;\n      case DIRECTION.RIGHT:\n        return DIRECTION.TOP;\n      case DIRECTION.TOP:\n        return DIRECTION.RIGHT;\n    }\n  }\n  return direction;\n}\nfunction reflectX(direct) {\n  if (direct === DIRECTION.LEFT) {\n    return DIRECTION.RIGHT;\n  }\n  if (direct === DIRECTION.RIGHT) {\n    return DIRECTION.LEFT;\n  }\n  return direct;\n}\nfunction reflectY(direct) {\n  if (direct === DIRECTION.TOP) {\n    return DIRECTION.BOTTOM;\n  }\n  if (direct === DIRECTION.BOTTOM) {\n    return DIRECTION.TOP;\n  }\n  return direct;\n}\n/**\n * get direction after coordinate.scale\n * @param direction\n * @param coordinate\n */\nfunction getScaleDirection(direction, coordinate) {\n  var x = coordinate.matrix[0];\n  var y = coordinate.matrix[4];\n  var d = direction;\n  if (x < 0) {\n    d = reflectX(d);\n  }\n  if (y < 0) {\n    d = reflectY(d);\n  }\n  return d;\n}\n/**\n *\n * @param direction\n * @param coordinate\n */\nfunction getReflectDirection(direction, coordinate) {\n  var d = direction;\n  if (coordinate.isReflect('x')) {\n    d = reflectX(d);\n  }\n  if (coordinate.isReflect('y')) {\n    d = reflectY(d);\n  }\n  return d;\n}\n/**\n * @ignore\n * get direction after coordinate translate\n * @param direction\n * @param coordinate\n */\nexport function getTranslateDirection(direction, coordinate) {\n  var d = direction;\n  d = getTransposedDirection(d, coordinate);\n  d = getScaleDirection(d, coordinate);\n  d = getReflectDirection(d, coordinate);\n  return d;\n}","map":{"version":3,"sources":["../../src/util/direction.ts"],"names":[],"mappings":"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","sourcesContent":["import { DIRECTION } from '../constant';\nimport { Coordinate } from '../dependents';\nimport { Position } from '../interface';\nimport { BBox } from './bbox';\n\n/**\n * @ignore\n * 方位常量转实际的 bbox 位置大小\n * @param parentBBox\n * @param bbox\n * @param direction\n */\nexport function directionToPosition(parentBBox: BBox, bbox: BBox, direction: DIRECTION): Position {\n  if (direction === DIRECTION.TOP) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.minY];\n  }\n  if (direction === DIRECTION.BOTTOM) {\n    return [parentBBox.minX + parentBBox.width / 2 - bbox.width / 2, parentBBox.maxY - bbox.height];\n  }\n  if (direction === DIRECTION.LEFT) {\n    return [parentBBox.minX, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n  if (direction === DIRECTION.RIGHT) {\n    return [parentBBox.maxX - bbox.width, parentBBox.minY + parentBBox.height / 2 - bbox.height / 2];\n  }\n\n  if (direction === DIRECTION.TOP_LEFT || direction === DIRECTION.LEFT_TOP) {\n    return [parentBBox.tl.x, parentBBox.tl.y];\n  }\n  if (direction === DIRECTION.TOP_RIGHT || direction === DIRECTION.RIGHT_TOP) {\n    return [parentBBox.tr.x - bbox.width, parentBBox.tr.y];\n  }\n  if (direction === DIRECTION.BOTTOM_LEFT || direction === DIRECTION.LEFT_BOTTOM) {\n    return [parentBBox.bl.x, parentBBox.bl.y - bbox.height];\n  }\n  if (direction === DIRECTION.BOTTOM_RIGHT || direction === DIRECTION.RIGHT_BOTTOM) {\n    return [parentBBox.br.x - bbox.width, parentBBox.br.y - bbox.height];\n  }\n\n  return [0, 0];\n}\n\n/**\n * get direction after coordinate transpose\n * @param direction\n * @param coordinate\n * @returns direction after transpose or not\n */\nfunction getTransposedDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  if (coordinate.isTransposed) {\n    switch (direction) {\n      case DIRECTION.BOTTOM:\n        return DIRECTION.LEFT;\n      case DIRECTION.LEFT:\n        return DIRECTION.BOTTOM;\n      case DIRECTION.RIGHT:\n        return DIRECTION.TOP;\n      case DIRECTION.TOP:\n        return DIRECTION.RIGHT;\n    }\n  }\n  return direction;\n}\n\nfunction reflectX(direct: DIRECTION): DIRECTION {\n  if (direct === DIRECTION.LEFT) {\n    return DIRECTION.RIGHT;\n  }\n\n  if (direct === DIRECTION.RIGHT) {\n    return DIRECTION.LEFT;\n  }\n\n  return direct;\n}\n\nfunction reflectY(direct: DIRECTION): DIRECTION {\n  if (direct === DIRECTION.TOP) {\n    return DIRECTION.BOTTOM;\n  }\n  if (direct === DIRECTION.BOTTOM) {\n    return DIRECTION.TOP;\n  }\n\n  return direct;\n}\n\n/**\n * get direction after coordinate.scale\n * @param direction\n * @param coordinate\n */\nfunction getScaleDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  const x = coordinate.matrix[0];\n  const y = coordinate.matrix[4];\n\n  let d = direction;\n  if (x < 0) {\n    d = reflectX(d);\n  }\n  if (y < 0) {\n    d = reflectY(d);\n  }\n  return d;\n}\n\n/**\n *\n * @param direction\n * @param coordinate\n */\nfunction getReflectDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  let d = direction;\n\n  if (coordinate.isReflect('x')) {\n    d = reflectX(d);\n  }\n  if (coordinate.isReflect('y')) {\n    d = reflectY(d);\n  }\n\n  return d;\n}\n\n/**\n * @ignore\n * get direction after coordinate translate\n * @param direction\n * @param coordinate\n */\nexport function getTranslateDirection(direction: DIRECTION, coordinate: Coordinate): DIRECTION {\n  let d = direction;\n  d = getTransposedDirection(d, coordinate);\n  d = getScaleDirection(d, coordinate);\n  d = getReflectDirection(d, coordinate);\n\n  return d;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}