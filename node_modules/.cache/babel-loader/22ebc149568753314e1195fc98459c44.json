{"ast":null,"code":"import { isNil } from '@antv/util';\n/**\n * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks\n *\n * @param cfg Scale 配置项\n * @return ticks\n */\nexport default function strictLimit(cfg, defaultMin, defaultMax) {\n  var _a;\n  var minLimit = cfg.minLimit,\n    maxLimit = cfg.maxLimit,\n    min = cfg.min,\n    max = cfg.max,\n    _b = cfg.tickCount,\n    tickCount = _b === void 0 ? 5 : _b;\n  var tickMin = isNil(minLimit) ? isNil(defaultMin) ? min : defaultMin : minLimit;\n  var tickMax = isNil(maxLimit) ? isNil(defaultMax) ? max : defaultMax : maxLimit;\n  if (tickMin > tickMax) {\n    _a = [tickMin, tickMax], tickMax = _a[0], tickMin = _a[1];\n  }\n  if (tickCount <= 2) {\n    return [tickMin, tickMax];\n  }\n  var step = (tickMax - tickMin) / (tickCount - 1);\n  var ticks = [];\n  for (var i = 0; i < tickCount; i++) {\n    ticks.push(tickMin + step * i);\n  }\n  return ticks;\n}","map":{"version":3,"sources":["../../src/util/strict-limit.ts"],"names":[],"mappings":"AAAA,SAAS,KAAK,QAAQ,YAAY;AAGlC;;;;;AAKG;AACH,eAAc,SAAU,WAAW,CAAC,GAAgB,EAAE,UAAmB,EAAE,UAAmB,EAAA;;EACpF,IAAA,QAAQ,GAAwC,GAAG,CAAA,QAA3C;IAAE,QAAQ,GAA8B,GAAG,CAAA,QAAjC;IAAE,GAAG,GAAyB,GAAG,CAAA,GAA5B;IAAE,GAAG,GAAoB,GAAG,CAAA,GAAvB;IAAE,EAAA,GAAkB,GAAG,CAAA,SAAR;IAAb,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,CAAC,GAAA,EAAA;EACnD,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAI,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,UAAU,GAAI,QAAQ;EACjF,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAI,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,UAAU,GAAI,QAAQ;EAEjF,IAAI,OAAO,GAAG,OAAO,EAAE;IACrB,EAAA,GAAqB,CAAC,OAAO,EAAE,OAAO,CAAC,EAAtC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA;EAClB;EAED,IAAI,SAAS,IAAI,CAAC,EAAE;IAClB,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;EAC1B;EAED,IAAM,IAAI,GAAG,CAAC,OAAO,GAAG,OAAO,KAAK,SAAS,GAAG,CAAC,CAAC;EAClD,IAAM,KAAK,GAAa,EAAE;EAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IAClC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC;EAC/B;EAED,OAAO,KAAK;AACd","sourceRoot":"","sourcesContent":["import { isNil } from '@antv/util';\n/**\n * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks\n *\n * @param cfg Scale 配置项\n * @return ticks\n */\nexport default function strictLimit(cfg, defaultMin, defaultMax) {\n    var _a;\n    var minLimit = cfg.minLimit, maxLimit = cfg.maxLimit, min = cfg.min, max = cfg.max, _b = cfg.tickCount, tickCount = _b === void 0 ? 5 : _b;\n    var tickMin = isNil(minLimit) ? (isNil(defaultMin) ? min : defaultMin) : minLimit;\n    var tickMax = isNil(maxLimit) ? (isNil(defaultMax) ? max : defaultMax) : maxLimit;\n    if (tickMin > tickMax) {\n        _a = [tickMin, tickMax], tickMax = _a[0], tickMin = _a[1];\n    }\n    if (tickCount <= 2) {\n        return [tickMin, tickMax];\n    }\n    var step = (tickMax - tickMin) / (tickCount - 1);\n    var ticks = [];\n    for (var i = 0; i < tickCount; i++) {\n        ticks.push(tickMin + step * i);\n    }\n    return ticks;\n}\n//# sourceMappingURL=strict-limit.js.map"]},"metadata":{},"sourceType":"module"}