{"ast":null,"code":"import { max, min } from '@antv/util';\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n * @return {number} 距离\n */\nexport function distance(x1, y1, x2, y2) {\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\nexport function isNumberEqual(v1, v2) {\n  return Math.abs(v1 - v2) < 0.001;\n}\nexport function getBBoxByArray(xArr, yArr) {\n  var minX = min(xArr);\n  var minY = min(yArr);\n  var maxX = max(xArr);\n  var maxY = max(yArr);\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nexport function getBBoxRange(x1, y1, x2, y2) {\n  return {\n    minX: min([x1, x2]),\n    maxX: max([x1, x2]),\n    minY: min([y1, y2]),\n    maxY: max([y1, y2])\n  };\n}\nexport function piMod(angle) {\n  return (angle + Math.PI * 2) % (Math.PI * 2);\n}","map":{"version":3,"sources":["../src/util.ts"],"names":[],"mappings":"AAAA,SAAS,GAAG,EAAE,GAAG,QAAQ,YAAY;AAGrC;;;;;;;AAOG;AACH,OAAM,SAAU,QAAQ,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;EACrE,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE;EAClB,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE;EAClB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACrC;AAEA,OAAM,SAAU,aAAa,CAAC,EAAU,EAAE,EAAU,EAAA;EAClD,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,KAAK;AAClC;AAEA,OAAM,SAAU,cAAc,CAAC,IAAc,EAAE,IAAc,EAAA;EAC3D,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EACtB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EACtB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EACtB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EACtB,OAAO;IACL,CAAC,EAAE,IAAI;IACP,CAAC,EAAE,IAAI;IACP,KAAK,EAAE,IAAI,GAAG,IAAI;IAClB,MAAM,EAAE,IAAI,GAAG;GAChB;AACH;AAEA,OAAM,SAAU,YAAY,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAA;EACzE,OAAO;IACL,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACnB,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACnB,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACnB,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;GACnB;AACH;AAEA,OAAM,SAAU,KAAK,CAAC,KAAa,EAAA;EACjC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAC9C","sourceRoot":"","sourcesContent":["import { max, min } from '@antv/util';\n/**\n * 两点之间的距离\n * @param {number} x1 起始点 x\n * @param {number} y1 起始点 y\n * @param {number} x2 结束点 x\n * @param {number} y2 结束点 y\n * @return {number} 距离\n */\nexport function distance(x1, y1, x2, y2) {\n    var dx = x1 - x2;\n    var dy = y1 - y2;\n    return Math.sqrt(dx * dx + dy * dy);\n}\nexport function isNumberEqual(v1, v2) {\n    return Math.abs(v1 - v2) < 0.001;\n}\nexport function getBBoxByArray(xArr, yArr) {\n    var minX = min(xArr);\n    var minY = min(yArr);\n    var maxX = max(xArr);\n    var maxY = max(yArr);\n    return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY,\n    };\n}\nexport function getBBoxRange(x1, y1, x2, y2) {\n    return {\n        minX: min([x1, x2]),\n        maxX: max([x1, x2]),\n        minY: min([y1, y2]),\n        maxY: max([y1, y2]),\n    };\n}\nexport function piMod(angle) {\n    return (angle + Math.PI * 2) % (Math.PI * 2);\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}