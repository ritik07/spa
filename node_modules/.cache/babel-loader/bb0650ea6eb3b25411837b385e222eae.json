{"ast":null,"code":"import { __values } from \"tslib\";\nimport { groupToMap } from '@antv/util';\n/** @ignore */\nexport function group(data, fields, appendConditions) {\n  var e_1, _a;\n  if (appendConditions === void 0) {\n    appendConditions = {};\n  }\n  if (!fields) {\n    return [data];\n  }\n  var groups = groupToMap(data, fields);\n  var array = [];\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    var values = appendConditions[fields[0]];\n    try {\n      for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n        var value = values_1_1.value;\n        var arr = groups[\"_\".concat(value)];\n        if (arr) {\n          // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n          array.push(arr);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  } else {\n    for (var k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        var eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n  return array;\n}","map":{"version":3,"sources":["../../../src/geometry/util/group-data.ts"],"names":[],"mappings":";AAAA,SAAS,UAAU,QAAQ,YAAY;AAGvC;AACA,OAAM,SAAU,KAAK,CAAC,IAAU,EAAE,MAAgB,EAAE,gBAA4C,EAAA;;EAA5C,IAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;IAAA,gBAAA,GAAA,CAAA,CAA4C;EAAA;EAC9F,IAAI,CAAC,MAAM,EAAE;IACX,OAAO,CAAC,IAAI,CAAC;EACd;EACD,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC;EACvC,IAAM,KAAK,GAAG,EAAE;EAChB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IACtD,IAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;MAC1C,KAAoB,IAAA,QAAA,GAAA,QAAA,CAAA,MAAM,CAAA,EAAA,UAAA,GAAA,QAAA,CAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,IAAA,EAAA,UAAA,GAAA,QAAA,CAAA,IAAA,EAAA,EAAE;QAAvB,IAAM,KAAK,GAAA,UAAA,CAAA,KAAA;QACd,IAAM,GAAG,GAAG,MAAM,CAAC,GAAA,CAAA,MAAA,CAAI,KAAK,CAAE,CAAC;QAC/B,IAAI,GAAG,EAAE;UACP;UACA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;QAChB;MACF;;;;;;;;;;;;GACF,MAAM;IACL,KAAK,IAAM,CAAC,IAAI,MAAM,EAAE;MACtB,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;QAC5B,IAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;MACtB;IACF;EACF;EAED,OAAO,KAAK;AACd","sourcesContent":["import { groupToMap } from '@antv/util';\nimport { Data } from '../../interface';\n\n/** @ignore */\nexport function group(data: Data, fields: string[], appendConditions: Record<string, any[]> = {}) {\n  if (!fields) {\n    return [data];\n  }\n  const groups = groupToMap(data, fields);\n  const array = [];\n  if (fields.length === 1 && appendConditions[fields[0]]) {\n    const values = appendConditions[fields[0]];\n    for (const value of values) {\n      const arr = groups[`_${value}`];\n      if (arr) {\n        // 可能存在用户设置 values ，但是数据中没有对应的字段，则这时候 arr 就为 null\n        array.push(arr);\n      }\n    }\n  } else {\n    for (const k in groups) {\n      if (groups.hasOwnProperty(k)) {\n        const eachGroup = groups[k];\n        array.push(eachGroup);\n      }\n    }\n  }\n\n  return array;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}