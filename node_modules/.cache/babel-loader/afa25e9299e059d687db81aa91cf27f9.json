{"ast":null,"code":"import { isArray } from '@antv/util';\n/**\n * @ignore\n * 拆分点数据\n * @example\n * // result: [{x: 20, y: 20}, {x: 20, y: 30}]\n * splitPoints({x: 20,y: [20, 30]});\n * @example\n * // result: [{x: 20, y: 20}, {x: 30, y: 30}]\n * splitPoints({x: [20, 30],y: [20, 30]});\n * @param obj\n */\nexport function splitPoints(obj) {\n  // y 有可能是数组，对应原始数据中 y 为一个区间数据，如 [19, 30]，为了统一也将 x 转换为数组\n  var x = obj.x;\n  var y = isArray(obj.y) ? obj.y : [obj.y];\n  return y.map(function (eachY, index) {\n    return {\n      x: isArray(x) ? x[index] : x,\n      y: eachY\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/geometry/shape/util/split-points.ts"],"names":[],"mappings":"AAAA,SAAS,OAAO,QAAQ,YAAY;AAGpC;;;;;;;;;;AAUG;AACH,OAAM,SAAU,WAAW,CAAC,GAAe,EAAA;EACzC;EACA,IAAM,CAAC,GAAG,GAAG,CAAC,CAAC;EACf,IAAM,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAE1C,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,EAAA;IACxB,OAAO;MACL,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;MAC5B,CAAC,EAAE;KACJ;EACH,CAAC,CAAC;AACJ","sourcesContent":["import { isArray } from '@antv/util';\nimport { Point, RangePoint } from '../../../interface';\n\n/**\n * @ignore\n * 拆分点数据\n * @example\n * // result: [{x: 20, y: 20}, {x: 20, y: 30}]\n * splitPoints({x: 20,y: [20, 30]});\n * @example\n * // result: [{x: 20, y: 20}, {x: 30, y: 30}]\n * splitPoints({x: [20, 30],y: [20, 30]});\n * @param obj\n */\nexport function splitPoints(obj: RangePoint): Point[] {\n  // y 有可能是数组，对应原始数据中 y 为一个区间数据，如 [19, 30]，为了统一也将 x 转换为数组\n  const x = obj.x;\n  const y = isArray(obj.y) ? obj.y : [obj.y];\n\n  return y.map((eachY, index) => {\n    return {\n      x: isArray(x) ? x[index] : x,\n      y: eachY,\n    };\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}