{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getElementsByState } from '../util';\n/**\n * 状态量 Action 的基类\n * @abstract\n * @class\n * @ignore\n */\nvar StateBase = /** @class */function (_super) {\n  __extends(StateBase, _super);\n  function StateBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * 状态名称\n     */\n    _this.stateName = '';\n    return _this;\n  }\n  /**\n   * 是否具有某个状态\n   * @param element 图表 Element 元素\n   */\n  StateBase.prototype.hasState = function (element) {\n    return element.hasState(this.stateName);\n  };\n  /**\n   * 设置状态激活\n   * @param enable 状态值\n   */\n  StateBase.prototype.setElementState = function (element, enable) {\n    // 防止闪烁\n    element.setState(this.stateName, enable);\n  };\n  /**\n   * 设置状态\n   */\n  StateBase.prototype.setState = function () {\n    this.setStateEnable(true);\n  };\n  /**\n   * 清除所有 Element 的状态\n   */\n  StateBase.prototype.clear = function () {\n    var view = this.context.view;\n    this.clearViewState(view);\n  };\n  StateBase.prototype.clearViewState = function (view) {\n    var _this = this;\n    var elements = getElementsByState(view, this.stateName);\n    each(elements, function (el) {\n      _this.setElementState(el, false);\n    });\n  };\n  return StateBase;\n}(Action);\nexport default StateBase;","map":{"version":3,"sources":["../../../../src/interaction/action/element/state-base.ts"],"names":[],"mappings":";AAAA,SAAS,IAAI,QAAQ,YAAY;AAEjC,OAAO,MAAM,MAAM,SAAS;AAC5B,SAAS,kBAAkB,QAAQ,SAAS;AAE5C;;;;;AAKG;AACH,IAAA,SAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAiC,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;EAAjC,SAAA,SAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACE;;AAEG;IACO,KAAA,CAAA,SAAS,GAAW,EAAE;;EA6ClC;EArCE;;;AAGG;EACO,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAlB,UAAmB,OAAgB,EAAA;IACjC,OAAO,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;EACzC,CAAC;EACD;;;AAGG;EACO,SAAA,CAAA,SAAA,CAAA,eAAe,GAAzB,UAA0B,OAAgB,EAAE,MAAe,EAAA;IACzD;IACA,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC;EAC1C,CAAC;EAED;;AAEG;EACI,SAAA,CAAA,SAAA,CAAA,QAAQ,GAAf,YAAA;IACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED;;AAEG;EACI,SAAA,CAAA,SAAA,CAAA,KAAK,GAAZ,YAAA;IACE,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;IAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;EAC3B,CAAC;EAES,SAAA,CAAA,SAAA,CAAA,cAAc,GAAxB,UAAyB,IAAI,EAAA;IAA7B,IAAA,KAAA,GAAA,IAAA;IACE,IAAM,QAAQ,GAAG,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;IACzD,IAAI,CAAC,QAAQ,EAAE,UAAC,EAAW,EAAA;MACzB,KAAI,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EACH,OAAA,SAAC;AAAD,CAAC,CAjDgC,MAAM,CAAA;AAmDvC,eAAe,SAAS","sourcesContent":["import { each } from '@antv/util';\nimport Element from '../../../geometry/element/';\nimport Action from '../base';\nimport { getElementsByState } from '../util';\n\n/**\n * 状态量 Action 的基类\n * @abstract\n * @class\n * @ignore\n */\nabstract class StateBase extends Action {\n  /**\n   * 状态名称\n   */\n  protected stateName: string = '';\n\n  /**\n   * 设置状态是否激活\n   * @param enable 状态值\n   */\n  protected abstract setStateEnable(enable: boolean);\n\n  /**\n   * 是否具有某个状态\n   * @param element 图表 Element 元素\n   */\n  protected hasState(element: Element): boolean {\n    return element.hasState(this.stateName);\n  }\n  /**\n   * 设置状态激活\n   * @param enable 状态值\n   */\n  protected setElementState(element: Element, enable: boolean) {\n    // 防止闪烁\n    element.setState(this.stateName, enable);\n  }\n\n  /**\n   * 设置状态\n   */\n  public setState() {\n    this.setStateEnable(true);\n  }\n\n  /**\n   * 清除所有 Element 的状态\n   */\n  public clear() {\n    const view = this.context.view;\n    this.clearViewState(view);\n  }\n\n  protected clearViewState(view) {\n    const elements = getElementsByState(view, this.stateName);\n    each(elements, (el: Element) => {\n      this.setElementState(el, false);\n    });\n  }\n}\n\nexport default StateBase;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}