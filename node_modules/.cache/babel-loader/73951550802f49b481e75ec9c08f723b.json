{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { isArray, isNumber } from '@antv/util';\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\nexport function isAutoPadding(padding) {\n  return !isNumber(padding) && !isArray(padding);\n}\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function parsePadding(padding) {\n  if (padding === void 0) {\n    padding = 0;\n  }\n  var paddingArray = isArray(padding) ? padding : [padding];\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n    case 2:\n      paddingArray = __spreadArray(__spreadArray([], __read(paddingArray), false), __read(paddingArray), false);\n      break;\n    case 3:\n      paddingArray = __spreadArray(__spreadArray([], __read(paddingArray), false), [paddingArray[1]], false);\n      break;\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n  return paddingArray;\n}","map":{"version":3,"sources":["../../src/util/padding.ts"],"names":[],"mappings":";AAAA,SAAS,OAAO,EAAE,QAAQ,QAAQ,YAAY;AAG9C;;;;AAIG;AACH,OAAM,SAAU,aAAa,CAAC,OAAoB,EAAA;EAChD,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;AAChD;AAEA;;;;;AAKG;AACH,OAAM,SAAU,YAAY,CAAC,OAA8B,EAAA;EAA9B,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;IAAA,OAAA,GAAA,CAA8B;EAAA;EACzD,IAAI,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC;EAEzD,QAAQ,YAAY,CAAC,MAAM;IACzB,KAAK,CAAC;MACJ,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC3B;IACF,KAAK,CAAC;MACJ,YAAY,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MACjD;IACF,KAAK,CAAC;MACJ,YAAY,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAO,YAAY,CAAA,EAAA,KAAA,CAAA,EAAA,MAAA,CAAK,YAAY,CAAA,EAAA,KAAA,CAAC;MACjD;IACF,KAAK,CAAC;MACJ,YAAY,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAO,YAAY,CAAA,EAAA,KAAA,CAAA,EAAA,CAAE,YAAY,CAAC,CAAC,CAAC,CAAA,EAAA,KAAA,CAAC;MACjD;IACF;MACE;MACA,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACvC;EAAM;EAGV,OAAO,YAAgD;AACzD","sourcesContent":["import { isArray, isNumber } from '@antv/util';\nimport { Padding, ViewPadding } from '../interface';\n\n/**\n * @ignore\n * 是否是自动 padding\n * @param padding\n */\nexport function isAutoPadding(padding: ViewPadding): padding is 'auto' {\n  return !isNumber(padding) && !isArray(padding);\n}\n\n/**\n * @ignore\n * padding 的解析逻辑\n * @param padding\n * @return [ top, right, bottom, left ]\n */\nexport function parsePadding(padding: number[] | number = 0): Padding {\n  let paddingArray = isArray(padding) ? padding : [padding];\n\n  switch (paddingArray.length) {\n    case 0:\n      paddingArray = [0, 0, 0, 0];\n      break;\n    case 1:\n      paddingArray = new Array(4).fill(paddingArray[0]);\n      break;\n    case 2:\n      paddingArray = [...paddingArray, ...paddingArray];\n      break;\n    case 3:\n      paddingArray = [...paddingArray, paddingArray[1]];\n      break;\n    default:\n      // 其他情况，只去四个\n      paddingArray = paddingArray.slice(0, 4);\n      break;\n  }\n\n  return paddingArray as [number, number, number, number];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}