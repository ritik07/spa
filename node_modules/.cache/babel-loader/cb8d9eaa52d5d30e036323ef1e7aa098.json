{"ast":null,"code":"import isArray from './is-array';\nimport { default as getMax } from './max';\nimport { default as getMin } from './min';\nvar getRange = function (values) {\n  // 存在 NaN 时，min,max 判定会出问题\n  var filterValues = values.filter(function (v) {\n    return !isNaN(v);\n  });\n  if (!filterValues.length) {\n    // 如果没有数值则直接返回0\n    return {\n      min: 0,\n      max: 0\n    };\n  }\n  if (isArray(values[0])) {\n    var tmp = [];\n    for (var i = 0; i < values.length; i++) {\n      tmp = tmp.concat(values[i]);\n    }\n    filterValues = tmp;\n  }\n  var max = getMax(filterValues);\n  var min = getMin(filterValues);\n  return {\n    min: min,\n    max: max\n  };\n};\nexport default getRange;","map":{"version":3,"sources":["../src/get-range.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,YAAY;AAChC,SAAS,OAAO,IAAI,MAAM,QAAQ,OAAO;AACzC,SAAS,OAAO,IAAI,MAAM,QAAQ,OAAO;AAOzC,IAAM,QAAQ,GAAG,UAAU,MAAgB,EAAA;EACzC;EACA,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,EAAA;IAAK,OAAA,CAAC,KAAK,CAAC,CAAC,CAAC;EAAT,CAAS,CAAC;EAClD,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;IACxB;IACA,OAAO;MACL,GAAG,EAAE,CAAC;MACN,GAAG,EAAE;KACN;EACF;EACD,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IACtB,IAAI,GAAG,GAAG,EAAE;IACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACtC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B;IACD,YAAY,GAAG,GAAG;EACnB;EACD,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC;EAChC,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC;EAChC,OAAO;IACL,GAAG,EAAA,GAAA;IACH,GAAG,EAAA;GACJ;AACH,CAAC;AAED,eAAe,QAAQ","sourceRoot":"","sourcesContent":["import isArray from './is-array';\nimport { default as getMax } from './max';\nimport { default as getMin } from './min';\nvar getRange = function (values) {\n    // 存在 NaN 时，min,max 判定会出问题\n    var filterValues = values.filter(function (v) { return !isNaN(v); });\n    if (!filterValues.length) {\n        // 如果没有数值则直接返回0\n        return {\n            min: 0,\n            max: 0,\n        };\n    }\n    if (isArray(values[0])) {\n        var tmp = [];\n        for (var i = 0; i < values.length; i++) {\n            tmp = tmp.concat(values[i]);\n        }\n        filterValues = tmp;\n    }\n    var max = getMax(filterValues);\n    var min = getMin(filterValues);\n    return {\n        min: min,\n        max: max,\n    };\n};\nexport default getRange;\n//# sourceMappingURL=get-range.js.map"]},"metadata":{},"sourceType":"module"}