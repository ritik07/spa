{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { each } from '@antv/util';\nfunction doShapeZoom(shape, animateCfg, type) {\n  if (shape.isGroup()) {\n    each(shape.getChildren(), function (child) {\n      doShapeZoom(child, animateCfg, type);\n    });\n  } else {\n    var bbox = shape.getBBox();\n    var x = (bbox.minX + bbox.maxX) / 2;\n    var y = (bbox.minY + bbox.maxY) / 2;\n    shape.applyToMatrix([x, y, 1]);\n    if (type === 'zoomIn') {\n      // 放大\n      var matrix = ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]]);\n      shape.setMatrix(matrix);\n      shape.animate({\n        matrix: ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 100, 100], ['t', x, y]])\n      }, animateCfg);\n    } else {\n      shape.animate({\n        matrix: ext.transform(shape.getMatrix(), [['t', -x, -y], ['s', 0.01, 0.01], ['t', x, y]])\n      }, __assign(__assign({}, animateCfg), {\n        callback: function () {\n          shape.remove(true);\n        }\n      }));\n    }\n  }\n}\n/**\n * @ignore\n * 单个 shape 动画\n * shape 以自身中心点逐渐放大的进入动画\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomIn(shape, animateCfg, cfg) {\n  doShapeZoom(shape, animateCfg, 'zoomIn');\n}\n/**\n * @ignore\n * 单个 shape 动画\n * 消失动画，shape 以自身为中心点的逐渐缩小\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomOut(shape, animateCfg, cfg) {\n  doShapeZoom(shape, animateCfg, 'zoomOut');\n}","map":{"version":3,"sources":["../../../src/animate/animation/zoom.ts"],"names":[],"mappings":";AAAA,SAAS,GAAG,QAAQ,mBAAmB;AACvC,SAAS,IAAI,QAAQ,YAAY;AAKjC,SAAS,WAAW,CAAC,KAAsB,EAAE,UAAuB,EAAE,IAA0B,EAAA;EAC9F,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;IACnB,IAAI,CAAE,KAAgB,CAAC,WAAW,EAAE,EAAE,UAAC,KAAK,EAAA;MAC1C,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC;IACtC,CAAC,CAAC;GACH,MAAM;IACL,IAAM,IAAI,GAAG,KAAK,CAAC,OAAO,EAAE;IAC5B,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;IACrC,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;IACrC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9B,IAAI,IAAI,KAAK,QAAQ,EAAE;MACrB;MACA,IAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAC9C,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EACjB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ,CAAC;MACF,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;MACvB,KAAK,CAAC,OAAO,CACX;QACE,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CACvC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACf,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ;OACF,EACD,UAAU,CACX;KACF,MAAM;MACL,KAAK,CAAC,OAAO,CACX;QACE,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CACvC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACb,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EACjB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ;OACF,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAEI,UAAU,CAAA,EAAA;QACb,QAAQ,EAAE,YAAA;UACR,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACpB;MAAC,CAAA,CAAA,CAEJ;IACF;EACF;AACH;AAEA;;;;;;;AAOG;AACH,OAAM,SAAU,MAAM,CAAC,KAAsB,EAAE,UAAuB,EAAE,GAAoB,EAAA;EAC1F,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC;AAC1C;AAEA;;;;;;;AAOG;AACH,OAAM,SAAU,OAAO,CAAC,KAAsB,EAAE,UAAuB,EAAE,GAAoB,EAAA;EAC3F,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,SAAS,CAAC;AAC3C","sourcesContent":["import { ext } from '@antv/matrix-util';\nimport { each } from '@antv/util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nfunction doShapeZoom(shape: IShape | IGroup, animateCfg: GAnimateCfg, type: 'zoomIn' | 'zoomOut') {\n  if (shape.isGroup()) {\n    each((shape as IGroup).getChildren(), (child) => {\n      doShapeZoom(child, animateCfg, type);\n    });\n  } else {\n    const bbox = shape.getBBox();\n    const x = (bbox.minX + bbox.maxX) / 2;\n    const y = (bbox.minY + bbox.maxY) / 2;\n    shape.applyToMatrix([x, y, 1]);\n\n    if (type === 'zoomIn') {\n      // 放大\n      const matrix = ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 0.01],\n        ['t', x, y],\n      ]);\n      shape.setMatrix(matrix);\n      shape.animate(\n        {\n          matrix: ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 100, 100],\n            ['t', x, y],\n          ]),\n        },\n        animateCfg\n      );\n    } else {\n      shape.animate(\n        {\n          matrix: ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 0.01, 0.01],\n            ['t', x, y],\n          ]),\n        },\n        {\n          ...animateCfg,\n          callback: () => {\n            shape.remove(true);\n          },\n        }\n      );\n    }\n  }\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * shape 以自身中心点逐渐放大的进入动画\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomIn(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  doShapeZoom(shape, animateCfg, 'zoomIn');\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * 消失动画，shape 以自身为中心点的逐渐缩小\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomOut(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  doShapeZoom(shape, animateCfg, 'zoomOut');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}