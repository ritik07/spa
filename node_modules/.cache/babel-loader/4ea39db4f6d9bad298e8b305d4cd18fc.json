{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clone, each } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { regionToBBox } from '../util/util';\nvar RegionFilterAnnotation = /** @class */function (_super) {\n  __extends(RegionFilterAnnotation, _super);\n  function RegionFilterAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  RegionFilterAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'regionFilter',\n      locationType: 'region',\n      start: null,\n      end: null,\n      color: null,\n      shape: []\n    });\n  };\n  RegionFilterAnnotation.prototype.renderInner = function (group) {\n    var _this = this;\n    var start = this.get('start');\n    var end = this.get('end');\n    // 1. add region layer\n    var layer = this.addGroup(group, {\n      id: this.getElementId('region-filter'),\n      capture: false\n    });\n    // 2. clone shape & color it\n    each(this.get('shapes'), function (shape, shapeIdx) {\n      var type = shape.get('type');\n      var attrs = clone(shape.attr());\n      _this.adjustShapeAttrs(attrs);\n      _this.addShape(layer, {\n        id: _this.getElementId(\"shape-\" + type + \"-\" + shapeIdx),\n        capture: false,\n        type: type,\n        attrs: attrs\n      });\n    });\n    // 3. clip\n    var clipBBox = regionToBBox({\n      start: start,\n      end: end\n    });\n    layer.setClip({\n      type: 'rect',\n      attrs: {\n        x: clipBBox.minX,\n        y: clipBBox.minY,\n        width: clipBBox.width,\n        height: clipBBox.height\n      }\n    });\n  };\n  RegionFilterAnnotation.prototype.adjustShapeAttrs = function (attr) {\n    var color = this.get('color');\n    if (attr.fill) {\n      attr.fill = attr.fillStyle = color;\n    }\n    attr.stroke = attr.strokeStyle = color;\n  };\n  return RegionFilterAnnotation;\n}(GroupComponent);\nexport default RegionFilterAnnotation;","map":{"version":3,"sources":["../../src/annotation/region-filter.ts"],"names":[],"mappings":";AACA,SAAS,KAAK,EAAE,IAAI,QAAQ,YAAY;AACxC,OAAO,cAAc,MAAM,6BAA6B;AAGxD,SAAS,YAAY,QAAQ,cAAc;AAE3C,IAAA,sBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAqC,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;EAArC,SAAA,sBAAA,GAAA;;EA8DA;EA7DE;;;AAGG;EACI,sBAAA,CAAA,SAAA,CAAA,aAAa,GAApB,YAAA;IACE,IAAM,GAAG,GAAG,MAAA,CAAA,SAAA,CAAM,aAAa,CAAA,IAAA,CAAA,IAAA,CAAE;IACjC,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACK,GAAG,CAAA,EAAA;MACN,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,cAAc;MACpB,YAAY,EAAE,QAAQ;MACtB,KAAK,EAAE,IAAI;MACX,GAAG,EAAE,IAAI;MACT,KAAK,EAAE,IAAI;MACX,KAAK,EAAE;IAAE,CAAA,CAAA;EAEb,CAAC;EAES,sBAAA,CAAA,SAAA,CAAA,WAAW,GAArB,UAAsB,KAAa,EAAA;IAAnC,IAAA,KAAA,GAAA,IAAA;IACE,IAAM,KAAK,GAAU,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;IACtC,IAAM,GAAG,GAAU,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAElC;IACA,IAAM,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MACzC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;MACtC,OAAO,EAAE;KACV,CAAC;IAEF;IACA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,UAAC,KAAa,EAAE,QAAgB,EAAA;MACvD,IAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;MAC9B,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;MACjC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;MAC5B,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;QACnB,EAAE,EAAE,KAAI,CAAC,YAAY,CAAC,QAAA,GAAS,IAAI,GAAA,GAAA,GAAI,QAAU,CAAC;QAClD,OAAO,EAAE,KAAK;QACd,IAAI,EAAA,IAAA;QACJ,KAAK,EAAA;OACN,CAAC;IACJ,CAAC,CAAC;IAEF;IACA,IAAM,QAAQ,GAAG,YAAY,CAAC;MAAE,KAAK,EAAA,KAAA;MAAE,GAAG,EAAA;IAAA,CAAE,CAAC;IAC7C,KAAK,CAAC,OAAO,CAAC;MACZ,IAAI,EAAE,MAAM;MACZ,KAAK,EAAE;QACL,CAAC,EAAE,QAAQ,CAAC,IAAI;QAChB,CAAC,EAAE,QAAQ,CAAC,IAAI;QAChB,KAAK,EAAE,QAAQ,CAAC,KAAK;QACrB,MAAM,EAAE,QAAQ,CAAC;MAClB;KACF,CAAC;EACJ,CAAC;EAEO,sBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAxB,UAAyB,IAAgB,EAAA;IACvC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;IAC/B,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK;IACnC;IACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK;EACxC,CAAC;EACH,OAAA,sBAAC;AAAD,CAAC,CA9DoC,cAAc,CAAA;AAgEnD,eAAe,sBAAsB","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { clone, each } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { regionToBBox } from '../util/util';\nvar RegionFilterAnnotation = /** @class */ (function (_super) {\n    __extends(RegionFilterAnnotation, _super);\n    function RegionFilterAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    RegionFilterAnnotation.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'regionFilter', locationType: 'region', start: null, end: null, color: null, shape: [] });\n    };\n    RegionFilterAnnotation.prototype.renderInner = function (group) {\n        var _this = this;\n        var start = this.get('start');\n        var end = this.get('end');\n        // 1. add region layer\n        var layer = this.addGroup(group, {\n            id: this.getElementId('region-filter'),\n            capture: false,\n        });\n        // 2. clone shape & color it\n        each(this.get('shapes'), function (shape, shapeIdx) {\n            var type = shape.get('type');\n            var attrs = clone(shape.attr());\n            _this.adjustShapeAttrs(attrs);\n            _this.addShape(layer, {\n                id: _this.getElementId(\"shape-\" + type + \"-\" + shapeIdx),\n                capture: false,\n                type: type,\n                attrs: attrs,\n            });\n        });\n        // 3. clip\n        var clipBBox = regionToBBox({ start: start, end: end });\n        layer.setClip({\n            type: 'rect',\n            attrs: {\n                x: clipBBox.minX,\n                y: clipBBox.minY,\n                width: clipBBox.width,\n                height: clipBBox.height,\n            },\n        });\n    };\n    RegionFilterAnnotation.prototype.adjustShapeAttrs = function (attr) {\n        var color = this.get('color');\n        if (attr.fill) {\n            attr.fill = attr.fillStyle = color;\n        }\n        attr.stroke = attr.strokeStyle = color;\n    };\n    return RegionFilterAnnotation;\n}(GroupComponent));\nexport default RegionFilterAnnotation;\n//# sourceMappingURL=region-filter.js.map"]},"metadata":{},"sourceType":"module"}