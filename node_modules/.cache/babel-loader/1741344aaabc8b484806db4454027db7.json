{"ast":null,"code":"import { arcToCubic } from './arc-2-cubic';\nimport { quadToCubic } from './quad-2-cubic';\nimport { lineToCubic } from './line-2-cubic';\nexport function segmentToCubic(segment, params) {\n  if ('TQ'.indexOf(segment[0]) < 0) {\n    params.qx = null;\n    params.qy = null;\n  }\n  var _a = segment.slice(1),\n    s1 = _a[0],\n    s2 = _a[1];\n  switch (segment[0]) {\n    case 'M':\n      params.x = s1;\n      params.y = s2;\n      return segment;\n    case 'A':\n      return ['C'].concat(arcToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n    case 'Q':\n      params.qx = s1;\n      params.qy = s2;\n      return ['C'].concat(quadToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n    case 'L':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], segment[2]));\n    case 'H':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], params.y1));\n    case 'V':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, params.x1, segment[1]));\n    case 'Z':\n      // @ts-ignore\n      return ['C'].concat(lineToCubic(params.x1, params.y1, params.x, params.y));\n    default:\n  }\n  return segment;\n}","map":{"version":3,"sources":["../../src/process/segment-2-cubic.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,WAAW,QAAQ,gBAAgB;AAC5C,SAAS,WAAW,QAAQ,gBAAgB;AAG5C,OAAM,SAAU,cAAc,CAAC,OAAoB,EAAE,MAAqB,EAAA;EACxE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IAChC,MAAM,CAAC,EAAE,GAAG,IAAI;IAChB,MAAM,CAAC,EAAE,GAAG,IAAI;EACjB;EAEK,IAAA,EAAA,GAAW,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IAA1B,EAAE,GAAA,EAAA,CAAA,CAAA,CAAA;IAAE,EAAE,GAAA,EAAA,CAAA,CAAA,CAAoB;EAEjC,QAAQ,OAAO,CAAC,CAAC,CAAC;IAChB,KAAK,GAAG;MACN,MAAM,CAAC,CAAC,GAAG,EAAY;MACvB,MAAM,CAAC,CAAC,GAAG,EAAY;MACvB,OAAO,OAAO;IAChB,KAAK,GAAG;MACN,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAa,CAAC,CAAC,CAAgB;IACtH,KAAK,GAAG;MACN,MAAM,CAAC,EAAE,GAAG,EAAY;MACxB,MAAM,CAAC,EAAE,GAAG,EAAY;MACxB,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAa,CAAC,CAAC,CAAgB;IACvH,KAAK,GAAG;MACN;MACA,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAgB;IAC/F,KAAK,GAAG;MACN;MACA,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAgB;IAC9F,KAAK,GAAG;MACN;MACA,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAgB;IAC9F,KAAK,GAAG;MACN;MACA,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAgB;IAC3F;EAAQ;EAEV,OAAO,OAAO;AAChB","sourceRoot":"","sourcesContent":["import { arcToCubic } from './arc-2-cubic';\nimport { quadToCubic } from './quad-2-cubic';\nimport { lineToCubic } from './line-2-cubic';\nexport function segmentToCubic(segment, params) {\n    if ('TQ'.indexOf(segment[0]) < 0) {\n        params.qx = null;\n        params.qy = null;\n    }\n    var _a = segment.slice(1), s1 = _a[0], s2 = _a[1];\n    switch (segment[0]) {\n        case 'M':\n            params.x = s1;\n            params.y = s2;\n            return segment;\n        case 'A':\n            return ['C'].concat(arcToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n        case 'Q':\n            params.qx = s1;\n            params.qy = s2;\n            return ['C'].concat(quadToCubic.apply(0, [params.x1, params.y1].concat(segment.slice(1))));\n        case 'L':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], segment[2]));\n        case 'H':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, segment[1], params.y1));\n        case 'V':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, params.x1, segment[1]));\n        case 'Z':\n            // @ts-ignore\n            return ['C'].concat(lineToCubic(params.x1, params.y1, params.x, params.y));\n        default:\n    }\n    return segment;\n}\n//# sourceMappingURL=segment-2-cubic.js.map"]},"metadata":{},"sourceType":"module"}