{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport colorUtil from '@antv/color-util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { each, hasKey, isElement, substitute } from '@antv/util';\nimport HtmlComponent from '../abstract/html-component';\nimport { clearDom, regionToBBox, toPx } from '../util/util';\nimport * as CssConst from './css-const';\nimport TooltipTheme from './html-theme';\nimport { getAlignPoint } from '../util/align';\nfunction hasOneKey(obj, keys) {\n  var result = false;\n  each(keys, function (key) {\n    if (hasKey(obj, key)) {\n      result = true;\n      return false;\n    }\n  });\n  return result;\n}\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Tooltip.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'tooltip',\n      type: 'html',\n      x: 0,\n      y: 0,\n      items: [],\n      customContent: null,\n      containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"><div class=\\\"\" + CssConst.TITLE_CLASS + \"\\\"></div><ul class=\\\"\" + CssConst.LIST_CLASS + \"\\\"></ul></div>\",\n      itemTpl: \"<li class=\\\"\" + CssConst.LIST_ITEM_CLASS + \"\\\" data-index={index}>\\n          <span class=\\\"\" + CssConst.MARKER_CLASS + \"\\\" style=\\\"background:{color}\\\"></span>\\n          <span class=\\\"\" + CssConst.NAME_CLASS + \"\\\">{name}</span>:\\n          <span class=\\\"\" + CssConst.VALUE_CLASS + \"\\\">{value}</span>\\n        </li>\",\n      xCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_X + \"\\\"></div>\",\n      yCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_Y + \"\\\"></div>\",\n      title: null,\n      showTitle: true,\n      /**\n       * tooltip 限制的区域\n       * @type {Region}\n       */\n      region: null,\n      // crosshair 的限制区域\n      crosshairsRegion: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      // x, y, xy\n      crosshairs: null,\n      offset: 10,\n      position: 'right',\n      domStyles: null,\n      defaultStyles: TooltipTheme\n    });\n  };\n  // tooltip 渲染时，渲染 title，items 和 corosshairs\n  Tooltip.prototype.render = function () {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      this.resetTitle();\n      this.renderItems();\n    }\n    // 绘制完成后，再定位\n    this.resetPosition();\n  };\n  // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n  Tooltip.prototype.clear = function () {\n    // 由于 crosshair 没有在 container 内，所以需要单独清理\n    this.clearCrosshairs();\n    this.setTitle(''); // 清空标题\n    this.clearItemDoms();\n  };\n  Tooltip.prototype.show = function () {\n    var container = this.getContainer();\n    if (!container || this.destroyed) {\n      // 防止容器不存在或者被销毁时报错\n      return;\n    }\n    this.set('visible', true);\n    modifyCSS(container, {\n      visibility: 'visible'\n    });\n    this.setCrossHairsVisible(true);\n  };\n  Tooltip.prototype.hide = function () {\n    var container = this.getContainer();\n    // relative: https://github.com/antvis/g2/issues/1221\n    if (!container || this.destroyed) {\n      return;\n    }\n    this.set('visible', false);\n    modifyCSS(container, {\n      visibility: 'hidden'\n    });\n    this.setCrossHairsVisible(false);\n  };\n  // 实现 IPointLocation 的接口\n  Tooltip.prototype.getLocation = function () {\n    return {\n      x: this.get('x'),\n      y: this.get('y')\n    };\n  };\n  // 实现 IPointLocation 的接口\n  Tooltip.prototype.setLocation = function (point) {\n    this.set('x', point.x);\n    this.set('y', point.y);\n    this.resetPosition();\n  };\n  Tooltip.prototype.setCrossHairsVisible = function (visible) {\n    var display = visible ? '' : 'none';\n    var xCrosshairDom = this.get('xCrosshairDom');\n    var yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && modifyCSS(xCrosshairDom, {\n      display: display\n    });\n    yCrosshairDom && modifyCSS(yCrosshairDom, {\n      display: display\n    });\n  };\n  // 如有 customContent 则根据 customContent 设置 container\n  Tooltip.prototype.initContainer = function () {\n    _super.prototype.initContainer.call(this);\n    if (this.get('customContent')) {\n      if (this.get('container')) {\n        this.get('container').remove();\n      }\n      var container = this.getHtmlContentNode();\n      this.get('parent').appendChild(container);\n      this.set('container', container);\n      this.resetStyles();\n      this.applyStyles();\n    }\n  };\n  // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n  Tooltip.prototype.updateInner = function (cfg) {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      // 更新标题\n      if (hasOneKey(cfg, ['title', 'showTitle'])) {\n        this.resetTitle();\n      }\n      // 更新内容\n      if (hasKey(cfg, 'items')) {\n        this.renderItems();\n      }\n    }\n    _super.prototype.updateInner.call(this, cfg);\n  };\n  Tooltip.prototype.initDom = function () {\n    this.cacheDoms();\n  };\n  // 清理 DOM\n  Tooltip.prototype.removeDom = function () {\n    _super.prototype.removeDom.call(this);\n    this.clearCrosshairs();\n  };\n  // 调整位置\n  Tooltip.prototype.resetPosition = function () {\n    var x = this.get('x');\n    var y = this.get('y');\n    var offset = this.get('offset');\n    var _a = this.getOffset(),\n      offsetX = _a.offsetX,\n      offsetY = _a.offsetY;\n    var position = this.get('position');\n    var region = this.get('region');\n    var container = this.getContainer();\n    var bbox = this.getBBox();\n    var width = bbox.width,\n      height = bbox.height;\n    var limitBox;\n    if (region) {\n      // 不限制位置\n      limitBox = regionToBBox(region);\n    }\n    var point = getAlignPoint(x, y, offset, width, height, position, limitBox);\n    modifyCSS(container, {\n      left: toPx(point.x + offsetX),\n      top: toPx(point.y + offsetY)\n    });\n    this.resetCrosshairs();\n  };\n  // 根据 customContent 渲染\n  Tooltip.prototype.renderCustomContent = function () {\n    var node = this.getHtmlContentNode();\n    var parent = this.get('parent');\n    var curContainer = this.get('container');\n    if (curContainer && curContainer.parentNode === parent) {\n      parent.replaceChild(node, curContainer);\n    } else {\n      parent.appendChild(node);\n    }\n    this.set('container', node);\n    this.resetStyles();\n    this.applyStyles();\n  };\n  Tooltip.prototype.getHtmlContentNode = function () {\n    var node;\n    var customContent = this.get('customContent');\n    if (customContent) {\n      var elem = customContent(this.get('title'), this.get('items'));\n      if (isElement(elem)) {\n        node = elem;\n      } else {\n        node = createDom(elem);\n      }\n    }\n    return node;\n  };\n  // 缓存模板设置的各种 DOM\n  Tooltip.prototype.cacheDoms = function () {\n    var container = this.getContainer();\n    var titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n    var listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n    this.set('titleDom', titleDom);\n    this.set('listDom', listDom);\n  };\n  // 重置 title\n  Tooltip.prototype.resetTitle = function () {\n    var title = this.get('title');\n    var showTitle = this.get('showTitle');\n    if (showTitle && title) {\n      this.setTitle(title);\n    } else {\n      this.setTitle('');\n    }\n  };\n  // 设置 title 文本\n  Tooltip.prototype.setTitle = function (text) {\n    var titleDom = this.get('titleDom');\n    if (titleDom) {\n      titleDom.innerText = text;\n    }\n  };\n  // 终止 crosshair\n  Tooltip.prototype.resetCrosshairs = function () {\n    var crosshairsRegion = this.get('crosshairsRegion');\n    var crosshairs = this.get('crosshairs');\n    if (!crosshairsRegion || !crosshairs) {\n      // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n      this.clearCrosshairs();\n    } else {\n      var crosshairBox = regionToBBox(crosshairsRegion);\n      var xCrosshairDom = this.get('xCrosshairDom');\n      var yCrosshairDom = this.get('yCrosshairDom');\n      if (crosshairs === 'x') {\n        this.resetCrosshair('x', crosshairBox);\n        // 仅显示 x 的 crosshair，y 移除\n        if (yCrosshairDom) {\n          yCrosshairDom.remove();\n          this.set('yCrosshairDom', null);\n        }\n      } else if (crosshairs === 'y') {\n        this.resetCrosshair('y', crosshairBox);\n        // 仅显示 y 的 crosshair，x 移除\n        if (xCrosshairDom) {\n          xCrosshairDom.remove();\n          this.set('xCrosshairDom', null);\n        }\n      } else {\n        this.resetCrosshair('x', crosshairBox);\n        this.resetCrosshair('y', crosshairBox);\n      }\n      this.setCrossHairsVisible(this.get('visible'));\n    }\n  };\n  // 设定 crosshair 的位置，需要区分 x,y\n  Tooltip.prototype.resetCrosshair = function (name, bbox) {\n    var croshairDom = this.checkCrosshair(name);\n    var value = this.get(name);\n    if (name === 'x') {\n      modifyCSS(croshairDom, {\n        left: toPx(value),\n        top: toPx(bbox.y),\n        height: toPx(bbox.height)\n      });\n    } else {\n      modifyCSS(croshairDom, {\n        top: toPx(value),\n        left: toPx(bbox.x),\n        width: toPx(bbox.width)\n      });\n    }\n  };\n  // 如果 crosshair 对应的 dom 不存在，则创建\n  Tooltip.prototype.checkCrosshair = function (name) {\n    var domName = name + \"CrosshairDom\";\n    var tplName = name + \"CrosshairTpl\";\n    var constName = \"CROSSHAIR_\" + name.toUpperCase();\n    var styleName = CssConst[constName];\n    var croshairDom = this.get(domName);\n    var parent = this.get('parent');\n    if (!croshairDom) {\n      croshairDom = createDom(this.get(tplName)); // 创建\n      this.applyStyle(styleName, croshairDom); // 设置初始样式\n      parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n      this.set(domName, croshairDom);\n    }\n    return croshairDom;\n  };\n  Tooltip.prototype.renderItems = function () {\n    this.clearItemDoms();\n    var items = this.get('items');\n    var itemTpl = this.get('itemTpl');\n    var listDom = this.get('listDom');\n    if (listDom) {\n      each(items, function (item) {\n        var color = colorUtil.toCSSGradient(item.color);\n        var substituteObj = __assign(__assign({}, item), {\n          color: color\n        });\n        var domStr = substitute(itemTpl, substituteObj);\n        var itemDom = createDom(domStr);\n        listDom.appendChild(itemDom);\n      });\n      this.applyChildrenStyles(listDom, this.get('domStyles'));\n    }\n  };\n  Tooltip.prototype.clearItemDoms = function () {\n    if (this.get('listDom')) {\n      clearDom(this.get('listDom'));\n    }\n  };\n  Tooltip.prototype.clearCrosshairs = function () {\n    var xCrosshairDom = this.get('xCrosshairDom');\n    var yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && xCrosshairDom.remove();\n    yCrosshairDom && yCrosshairDom.remove();\n    this.set('xCrosshairDom', null);\n    this.set('yCrosshairDom', null);\n  };\n  return Tooltip;\n}(HtmlComponent);\nexport default Tooltip;","map":{"version":3,"sources":["../../src/tooltip/html.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport colorUtil from '@antv/color-util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { each, hasKey, isElement, substitute } from '@antv/util';\nimport HtmlComponent from '../abstract/html-component';\nimport { clearDom, regionToBBox, toPx } from '../util/util';\nimport * as CssConst from './css-const';\nimport TooltipTheme from './html-theme';\nimport { getAlignPoint } from '../util/align';\nfunction hasOneKey(obj, keys) {\n    var result = false;\n    each(keys, function (key) {\n        if (hasKey(obj, key)) {\n            result = true;\n            return false;\n        }\n    });\n    return result;\n}\nvar Tooltip = /** @class */ (function (_super) {\n    __extends(Tooltip, _super);\n    function Tooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Tooltip.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'tooltip', type: 'html', x: 0, y: 0, items: [], customContent: null, containerTpl: \"<div class=\\\"\" + CssConst.CONTAINER_CLASS + \"\\\"><div class=\\\"\" + CssConst.TITLE_CLASS + \"\\\"></div><ul class=\\\"\" + CssConst.LIST_CLASS + \"\\\"></ul></div>\", itemTpl: \"<li class=\\\"\" + CssConst.LIST_ITEM_CLASS + \"\\\" data-index={index}>\\n          <span class=\\\"\" + CssConst.MARKER_CLASS + \"\\\" style=\\\"background:{color}\\\"></span>\\n          <span class=\\\"\" + CssConst.NAME_CLASS + \"\\\">{name}</span>:\\n          <span class=\\\"\" + CssConst.VALUE_CLASS + \"\\\">{value}</span>\\n        </li>\", xCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_X + \"\\\"></div>\", yCrosshairTpl: \"<div class=\\\"\" + CssConst.CROSSHAIR_Y + \"\\\"></div>\", title: null, showTitle: true, \n            /**\n             * tooltip 限制的区域\n             * @type {Region}\n             */\n            region: null, \n            // crosshair 的限制区域\n            crosshairsRegion: null, containerClassName: CssConst.CONTAINER_CLASS, \n            // x, y, xy\n            crosshairs: null, offset: 10, position: 'right', domStyles: null, defaultStyles: TooltipTheme });\n    };\n    // tooltip 渲染时，渲染 title，items 和 corosshairs\n    Tooltip.prototype.render = function () {\n        if (this.get('customContent')) {\n            this.renderCustomContent();\n        }\n        else {\n            this.resetTitle();\n            this.renderItems();\n        }\n        // 绘制完成后，再定位\n        this.resetPosition();\n    };\n    // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n    Tooltip.prototype.clear = function () {\n        // 由于 crosshair 没有在 container 内，所以需要单独清理\n        this.clearCrosshairs();\n        this.setTitle(''); // 清空标题\n        this.clearItemDoms();\n    };\n    Tooltip.prototype.show = function () {\n        var container = this.getContainer();\n        if (!container || this.destroyed) {\n            // 防止容器不存在或者被销毁时报错\n            return;\n        }\n        this.set('visible', true);\n        modifyCSS(container, {\n            visibility: 'visible',\n        });\n        this.setCrossHairsVisible(true);\n    };\n    Tooltip.prototype.hide = function () {\n        var container = this.getContainer();\n        // relative: https://github.com/antvis/g2/issues/1221\n        if (!container || this.destroyed) {\n            return;\n        }\n        this.set('visible', false);\n        modifyCSS(container, {\n            visibility: 'hidden',\n        });\n        this.setCrossHairsVisible(false);\n    };\n    // 实现 IPointLocation 的接口\n    Tooltip.prototype.getLocation = function () {\n        return { x: this.get('x'), y: this.get('y') };\n    };\n    // 实现 IPointLocation 的接口\n    Tooltip.prototype.setLocation = function (point) {\n        this.set('x', point.x);\n        this.set('y', point.y);\n        this.resetPosition();\n    };\n    Tooltip.prototype.setCrossHairsVisible = function (visible) {\n        var display = visible ? '' : 'none';\n        var xCrosshairDom = this.get('xCrosshairDom');\n        var yCrosshairDom = this.get('yCrosshairDom');\n        xCrosshairDom &&\n            modifyCSS(xCrosshairDom, {\n                display: display,\n            });\n        yCrosshairDom &&\n            modifyCSS(yCrosshairDom, {\n                display: display,\n            });\n    };\n    // 如有 customContent 则根据 customContent 设置 container\n    Tooltip.prototype.initContainer = function () {\n        _super.prototype.initContainer.call(this);\n        if (this.get('customContent')) {\n            if (this.get('container')) {\n                this.get('container').remove();\n            }\n            var container = this.getHtmlContentNode();\n            this.get('parent').appendChild(container);\n            this.set('container', container);\n            this.resetStyles();\n            this.applyStyles();\n        }\n    };\n    // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n    Tooltip.prototype.updateInner = function (cfg) {\n        if (this.get('customContent')) {\n            this.renderCustomContent();\n        }\n        else {\n            // 更新标题\n            if (hasOneKey(cfg, ['title', 'showTitle'])) {\n                this.resetTitle();\n            }\n            // 更新内容\n            if (hasKey(cfg, 'items')) {\n                this.renderItems();\n            }\n        }\n        _super.prototype.updateInner.call(this, cfg);\n    };\n    Tooltip.prototype.initDom = function () {\n        this.cacheDoms();\n    };\n    // 清理 DOM\n    Tooltip.prototype.removeDom = function () {\n        _super.prototype.removeDom.call(this);\n        this.clearCrosshairs();\n    };\n    // 调整位置\n    Tooltip.prototype.resetPosition = function () {\n        var x = this.get('x');\n        var y = this.get('y');\n        var offset = this.get('offset');\n        var _a = this.getOffset(), offsetX = _a.offsetX, offsetY = _a.offsetY;\n        var position = this.get('position');\n        var region = this.get('region');\n        var container = this.getContainer();\n        var bbox = this.getBBox();\n        var width = bbox.width, height = bbox.height;\n        var limitBox;\n        if (region) {\n            // 不限制位置\n            limitBox = regionToBBox(region);\n        }\n        var point = getAlignPoint(x, y, offset, width, height, position, limitBox);\n        modifyCSS(container, {\n            left: toPx(point.x + offsetX),\n            top: toPx(point.y + offsetY),\n        });\n        this.resetCrosshairs();\n    };\n    // 根据 customContent 渲染\n    Tooltip.prototype.renderCustomContent = function () {\n        var node = this.getHtmlContentNode();\n        var parent = this.get('parent');\n        var curContainer = this.get('container');\n        if (curContainer && curContainer.parentNode === parent) {\n            parent.replaceChild(node, curContainer);\n        }\n        else {\n            parent.appendChild(node);\n        }\n        this.set('container', node);\n        this.resetStyles();\n        this.applyStyles();\n    };\n    Tooltip.prototype.getHtmlContentNode = function () {\n        var node;\n        var customContent = this.get('customContent');\n        if (customContent) {\n            var elem = customContent(this.get('title'), this.get('items'));\n            if (isElement(elem)) {\n                node = elem;\n            }\n            else {\n                node = createDom(elem);\n            }\n        }\n        return node;\n    };\n    // 缓存模板设置的各种 DOM\n    Tooltip.prototype.cacheDoms = function () {\n        var container = this.getContainer();\n        var titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n        var listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n        this.set('titleDom', titleDom);\n        this.set('listDom', listDom);\n    };\n    // 重置 title\n    Tooltip.prototype.resetTitle = function () {\n        var title = this.get('title');\n        var showTitle = this.get('showTitle');\n        if (showTitle && title) {\n            this.setTitle(title);\n        }\n        else {\n            this.setTitle('');\n        }\n    };\n    // 设置 title 文本\n    Tooltip.prototype.setTitle = function (text) {\n        var titleDom = this.get('titleDom');\n        if (titleDom) {\n            titleDom.innerText = text;\n        }\n    };\n    // 终止 crosshair\n    Tooltip.prototype.resetCrosshairs = function () {\n        var crosshairsRegion = this.get('crosshairsRegion');\n        var crosshairs = this.get('crosshairs');\n        if (!crosshairsRegion || !crosshairs) {\n            // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n            this.clearCrosshairs();\n        }\n        else {\n            var crosshairBox = regionToBBox(crosshairsRegion);\n            var xCrosshairDom = this.get('xCrosshairDom');\n            var yCrosshairDom = this.get('yCrosshairDom');\n            if (crosshairs === 'x') {\n                this.resetCrosshair('x', crosshairBox);\n                // 仅显示 x 的 crosshair，y 移除\n                if (yCrosshairDom) {\n                    yCrosshairDom.remove();\n                    this.set('yCrosshairDom', null);\n                }\n            }\n            else if (crosshairs === 'y') {\n                this.resetCrosshair('y', crosshairBox);\n                // 仅显示 y 的 crosshair，x 移除\n                if (xCrosshairDom) {\n                    xCrosshairDom.remove();\n                    this.set('xCrosshairDom', null);\n                }\n            }\n            else {\n                this.resetCrosshair('x', crosshairBox);\n                this.resetCrosshair('y', crosshairBox);\n            }\n            this.setCrossHairsVisible(this.get('visible'));\n        }\n    };\n    // 设定 crosshair 的位置，需要区分 x,y\n    Tooltip.prototype.resetCrosshair = function (name, bbox) {\n        var croshairDom = this.checkCrosshair(name);\n        var value = this.get(name);\n        if (name === 'x') {\n            modifyCSS(croshairDom, {\n                left: toPx(value),\n                top: toPx(bbox.y),\n                height: toPx(bbox.height),\n            });\n        }\n        else {\n            modifyCSS(croshairDom, {\n                top: toPx(value),\n                left: toPx(bbox.x),\n                width: toPx(bbox.width),\n            });\n        }\n    };\n    // 如果 crosshair 对应的 dom 不存在，则创建\n    Tooltip.prototype.checkCrosshair = function (name) {\n        var domName = name + \"CrosshairDom\";\n        var tplName = name + \"CrosshairTpl\";\n        var constName = \"CROSSHAIR_\" + name.toUpperCase();\n        var styleName = CssConst[constName];\n        var croshairDom = this.get(domName);\n        var parent = this.get('parent');\n        if (!croshairDom) {\n            croshairDom = createDom(this.get(tplName)); // 创建\n            this.applyStyle(styleName, croshairDom); // 设置初始样式\n            parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n            this.set(domName, croshairDom);\n        }\n        return croshairDom;\n    };\n    Tooltip.prototype.renderItems = function () {\n        this.clearItemDoms();\n        var items = this.get('items');\n        var itemTpl = this.get('itemTpl');\n        var listDom = this.get('listDom');\n        if (listDom) {\n            each(items, function (item) {\n                var color = colorUtil.toCSSGradient(item.color);\n                var substituteObj = __assign(__assign({}, item), { color: color });\n                var domStr = substitute(itemTpl, substituteObj);\n                var itemDom = createDom(domStr);\n                listDom.appendChild(itemDom);\n            });\n            this.applyChildrenStyles(listDom, this.get('domStyles'));\n        }\n    };\n    Tooltip.prototype.clearItemDoms = function () {\n        if (this.get('listDom')) {\n            clearDom(this.get('listDom'));\n        }\n    };\n    Tooltip.prototype.clearCrosshairs = function () {\n        var xCrosshairDom = this.get('xCrosshairDom');\n        var yCrosshairDom = this.get('yCrosshairDom');\n        xCrosshairDom && xCrosshairDom.remove();\n        yCrosshairDom && yCrosshairDom.remove();\n        this.set('xCrosshairDom', null);\n        this.set('yCrosshairDom', null);\n    };\n    return Tooltip;\n}(HtmlComponent));\nexport default Tooltip;\n//# sourceMappingURL=html.js.map"]},"metadata":{},"sourceType":"module"}