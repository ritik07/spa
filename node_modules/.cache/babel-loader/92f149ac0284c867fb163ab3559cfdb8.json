{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { FIELD_ORIGIN } from '../constant';\nimport Path from './path';\nimport './shape/area';\n/**\n * Area 几何标记类。\n * 常用于绘制面积图。\n */\nvar Area = /** @class */function (_super) {\n  __extends(Area, _super);\n  function Area(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.type = 'area';\n    _this.shapeType = 'area';\n    /** 生成图形关键点 */\n    _this.generatePoints = true;\n    /**\n     * 面积图是否从 0 基准线开始填充。\n     * 1. 默认值为 `true`，表现如下：\n     * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n     * 2. 当值为 `false` 时，表现如下：\n     * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n     */\n    _this.startOnZero = true;\n    var _a = cfg.startOnZero,\n      startOnZero = _a === void 0 ? true : _a,\n      _b = cfg.sortable,\n      sortable = _b === void 0 ? false : _b,\n      _c = cfg.showSinglePoint,\n      showSinglePoint = _c === void 0 ? false : _c;\n    _this.startOnZero = startOnZero; // 默认为 true\n    _this.sortable = sortable; // 关闭默认的 X 轴数据排序\n    _this.showSinglePoint = showSinglePoint;\n    return _this;\n  }\n  /**\n   * 获取图形绘制的关键点以及数据\n   * @param mappingData 映射后的数据\n   */\n  Area.prototype.getPointsAndData = function (mappingData) {\n    var points = [];\n    var data = [];\n    for (var i = 0, len = mappingData.length; i < len; i++) {\n      var obj = mappingData[i];\n      points.push(obj.points);\n      data.push(obj[FIELD_ORIGIN]);\n    }\n    return {\n      points: points,\n      data: data\n    };\n  };\n  /**\n   * 获取 Y 轴上的最小值\n   * @returns y 字段最小值\n   */\n  Area.prototype.getYMinValue = function () {\n    if (this.startOnZero) {\n      return _super.prototype.getYMinValue.call(this);\n    }\n    var yScale = this.getYScale();\n    return yScale.min;\n  };\n  return Area;\n}(Path);\nexport default Area;","map":{"version":3,"sources":["../../src/geometry/area.ts"],"names":[],"mappings":";AAAA,SAAS,YAAY,QAAQ,aAAa;AAE1C,OAAO,IAAiB,MAAM,QAAQ;AACtC,OAAO,cAAc;AAcrB;;;AAGG;AACH,IAAA,IAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAkC,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;EAchC,SAAA,IAAA,CAAY,GAAY,EAAA;IAAxB,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,GAAG,CAAC,IAAA,IAAA;IAdI,KAAA,CAAA,IAAI,GAAW,MAAM;IACrB,KAAA,CAAA,SAAS,GAAW,MAAM;IAC1C;IACgB,KAAA,CAAA,cAAc,GAAY,IAAI;IAC9C;;;;;;AAMG;IACa,KAAA,CAAA,WAAW,GAAY,IAAI;IAKjC,IAAA,EAAA,GAAkE,GAAG,CAAA,WAAnD;MAAlB,WAAW,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAI,GAAA,EAAA;MAAE,EAAA,GAA8C,GAAG,CAAA,QAAjC;MAAhB,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAK,GAAA,EAAA;MAAE,EAAA,GAA4B,GAAG,CAAA,eAAR;MAAvB,eAAe,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAK,GAAA,EAAA;IACrE,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC;IAChC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;IAC1B,KAAI,CAAC,eAAe,GAAG,eAAe;;EACxC;EAEA;;;AAGG;EACO,IAAA,CAAA,SAAA,CAAA,gBAAgB,GAA1B,UAA2B,WAA2B,EAAA;IACpD,IAAM,MAAM,GAAG,EAAE;IACjB,IAAM,IAAI,GAAG,EAAE;IAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;MACtD,IAAM,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC;MAC1B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;MACvB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC7B;IAED,OAAO;MACL,MAAM,EAAA,MAAA;MACN,IAAI,EAAA;KACL;EACH,CAAC;EAED;;;AAGG;EACO,IAAA,CAAA,SAAA,CAAA,YAAY,GAAtB,YAAA;IACE,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,OAAO,MAAA,CAAA,SAAA,CAAM,YAAY,CAAA,IAAA,CAAA,IAAA,CAAE;IAC5B;IACD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;IAC/B,OAAO,MAAM,CAAC,GAAG;EACnB,CAAC;EACH,OAAA,IAAC;AAAD,CAAC,CAtDiC,IAAI,CAAA","sourcesContent":["import { FIELD_ORIGIN } from '../constant';\nimport { MappingDatum } from '../interface';\nimport Path, { PathCfg } from './path';\nimport './shape/area';\n\n/** Area 几何标记构造函数参数 */\nexport interface AreaCfg extends PathCfg {\n  /**\n   * 面积图是否从 0 基准线开始填充。\n   * 1. 默认值为 `true`，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n   * 2. 当值为 `false` 时，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n   */\n  startOnZero?: boolean;\n}\n\n/**\n * Area 几何标记类。\n * 常用于绘制面积图。\n */\nexport default class Area extends Path {\n  public readonly type: string = 'area';\n  public readonly shapeType: string = 'area';\n  /** 生成图形关键点 */\n  public readonly generatePoints: boolean = true;\n  /**\n   * 面积图是否从 0 基准线开始填充。\n   * 1. 默认值为 `true`，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n   * 2. 当值为 `false` 时，表现如下：\n   * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n   */\n  public readonly startOnZero: boolean = true;\n\n  constructor(cfg: AreaCfg) {\n    super(cfg);\n\n    const { startOnZero = true, sortable = false, showSinglePoint = false } = cfg;\n    this.startOnZero = startOnZero; // 默认为 true\n    this.sortable = sortable; // 关闭默认的 X 轴数据排序\n    this.showSinglePoint = showSinglePoint;\n  }\n\n  /**\n   * 获取图形绘制的关键点以及数据\n   * @param mappingData 映射后的数据\n   */\n  protected getPointsAndData(mappingData: MappingDatum[]) {\n    const points = [];\n    const data = [];\n\n    for (let i = 0, len = mappingData.length; i < len; i++) {\n      const obj = mappingData[i];\n      points.push(obj.points);\n      data.push(obj[FIELD_ORIGIN]);\n    }\n\n    return {\n      points,\n      data,\n    };\n  }\n\n  /**\n   * 获取 Y 轴上的最小值\n   * @returns y 字段最小值\n   */\n  protected getYMinValue(): number {\n    if (this.startOnZero) {\n      return super.getYMinValue();\n    }\n    const yScale = this.getYScale();\n    return yScale.min;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}