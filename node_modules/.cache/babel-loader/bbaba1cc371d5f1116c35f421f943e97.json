{"ast":null,"code":"/**\n * 默认的 syncViewPadding 逻辑\n * @param chart\n * @param views\n * @param PC: PaddingCalCtor\n */\nexport function defaultSyncViewPadding(chart, views, PC) {\n  var syncPadding = PC.instance();\n  // 所有的 view 的 autoPadding 指向同一个引用\n  views.forEach(function (v) {\n    v.autoPadding = syncPadding.max(v.autoPadding.getPadding());\n  });\n}","map":{"version":3,"sources":["../../../src/chart/util/sync-view-padding.ts"],"names":[],"mappings":"AAGA;;;;;AAKG;AACH,OAAM,SAAU,sBAAsB,CAAC,KAAW,EAAE,KAAa,EAAE,EAAkB,EAAA;EACnF,IAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,EAAE;EAEjC;EACA,KAAK,CAAC,OAAO,CAAC,UAAC,CAAO,EAAA;IACpB,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;EAC7D,CAAC,CAAC;AACJ","sourcesContent":["import { PaddingCalCtor } from '../layout/padding-cal';\nimport { View } from '../view';\n\n/**\n * 默认的 syncViewPadding 逻辑\n * @param chart\n * @param views\n * @param PC: PaddingCalCtor\n */\nexport function defaultSyncViewPadding(chart: View, views: View[], PC: PaddingCalCtor) {\n  const syncPadding = PC.instance();\n\n  // 所有的 view 的 autoPadding 指向同一个引用\n  views.forEach((v: View) => {\n    v.autoPadding = syncPadding.max(v.autoPadding.getPadding());\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}