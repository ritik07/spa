{"ast":null,"code":"/**\n * @fileoverview marker\n * @author dengfuping_develop@163.com\n */\nimport { __extends } from \"tslib\";\nimport { isArray, isFunction } from '@antv/util';\nimport ShapeBase from '../base';\nimport symbolsFactory from './symbols';\nvar Marker = /** @class */function (_super) {\n  __extends(Marker, _super);\n  function Marker() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'marker';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n  Marker.prototype.createPath = function (context) {\n    var el = this.get('el');\n    el.setAttribute('d', this._assembleMarker());\n  };\n  Marker.prototype._assembleMarker = function () {\n    var d = this._getPath();\n    if (isArray(d)) {\n      return d.map(function (path) {\n        return path.join(' ');\n      }).join('');\n    }\n    return d;\n  };\n  Marker.prototype._getPath = function () {\n    var attrs = this.attr();\n    var x = attrs.x,\n      y = attrs.y;\n    // 兼容 r 和 radius 两种写法，推荐使用 r\n    var r = attrs.r || attrs.radius;\n    var symbol = attrs.symbol || 'circle';\n    var method;\n    if (isFunction(symbol)) {\n      method = symbol;\n    } else {\n      method = symbolsFactory.get(symbol);\n    }\n    if (!method) {\n      console.warn(method + \" symbol is not exist.\");\n      return null;\n    }\n    return method(x, y, r);\n  };\n  // 作为其静态属性\n  Marker.symbolsFactory = symbolsFactory;\n  return Marker;\n}(ShapeBase);\nexport default Marker;","map":{"version":3,"sources":["../../../src/shape/marker/index.ts"],"names":[],"mappings":"AAAA;;;AAGG;;AAEH,SAAS,OAAO,EAAE,UAAU,QAAQ,YAAY;AAChD,OAAO,SAAS,MAAM,SAAS;AAC/B,OAAO,cAAc,MAAM,WAAW;AAEtC,IAAA,MAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAqB,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;EAArB,SAAA,MAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACE,KAAA,CAAA,IAAI,GAAW,QAAQ;IACvB,KAAA,CAAA,OAAO,GAAY,IAAI;IACvB,KAAA,CAAA,SAAS,GAAY,IAAI;;EAyC3B;EApCE,MAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,OAAO,EAAA;IAChB,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IACzB,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC;EAC9C,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE;IACzB,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;MACd,OAAO,CAAC,CACL,GAAG,CAAC,UAAC,IAAI,EAAA;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;MACvB,CAAC,CAAC,CACD,IAAI,CAAC,EAAE,CAAC;IACZ;IACD,OAAO,CAAC;EACV,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE;IACjB,IAAA,CAAC,GAAQ,KAAK,CAAA,CAAb;MAAE,CAAC,GAAK,KAAK,CAAA,CAAV;IACZ;IACA,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM;IACjC,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,QAAQ;IACvC,IAAI,MAAM;IACV,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE;MACtB,MAAM,GAAG,MAAM;KAChB,MAAM;MACL,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC;IACpC;IAED,IAAI,CAAC,MAAM,EAAE;MACX,OAAO,CAAC,IAAI,CAAI,MAAM,GAAA,uBAAuB,CAAC;MAC9C,OAAO,IAAI;IACZ;IACD,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxB,CAAC;EAtCD;EACc,MAAA,CAAA,cAAc,GAAG,cAAc;EAsC/C,OAAA,MAAC;CAAA,CA5CoB,SAAS,CAAA;AA8C9B,eAAe,MAAM","sourceRoot":"","sourcesContent":["/**\n * @fileoverview marker\n * @author dengfuping_develop@163.com\n */\nimport { __extends } from \"tslib\";\nimport { isArray, isFunction } from '@antv/util';\nimport ShapeBase from '../base';\nimport symbolsFactory from './symbols';\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'marker';\n        _this.canFill = true;\n        _this.canStroke = true;\n        return _this;\n    }\n    Marker.prototype.createPath = function (context) {\n        var el = this.get('el');\n        el.setAttribute('d', this._assembleMarker());\n    };\n    Marker.prototype._assembleMarker = function () {\n        var d = this._getPath();\n        if (isArray(d)) {\n            return d\n                .map(function (path) {\n                return path.join(' ');\n            })\n                .join('');\n        }\n        return d;\n    };\n    Marker.prototype._getPath = function () {\n        var attrs = this.attr();\n        var x = attrs.x, y = attrs.y;\n        // 兼容 r 和 radius 两种写法，推荐使用 r\n        var r = attrs.r || attrs.radius;\n        var symbol = attrs.symbol || 'circle';\n        var method;\n        if (isFunction(symbol)) {\n            method = symbol;\n        }\n        else {\n            method = symbolsFactory.get(symbol);\n        }\n        if (!method) {\n            console.warn(method + \" symbol is not exist.\");\n            return null;\n        }\n        return method(x, y, r);\n    };\n    // 作为其静态属性\n    Marker.symbolsFactory = symbolsFactory;\n    return Marker;\n}(ShapeBase));\nexport default Marker;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}