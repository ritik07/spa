{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, each, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar Matrix = /** @class */function (_super) {\n  __extends(Matrix, _super);\n  function Matrix() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Matrix.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'matrix',\n      showTitle: false,\n      columnTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this)),\n      rowTitle: __assign({}, _super.prototype.getDefaultTitleCfg.call(this))\n    });\n  };\n  Matrix.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  Matrix.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Matrix.prototype.beforeEachView = function (view, facet) {};\n  Matrix.prototype.generateFacets = function (data) {\n    var _a = this.cfg,\n      fields = _a.fields,\n      type = _a.type;\n    // 矩阵中行列相等，等于指定的字段个数\n    var rowValuesLength = fields.length;\n    var columnValuesLength = rowValuesLength;\n    var rst = [];\n    for (var i = 0; i < columnValuesLength; i++) {\n      var columnField = fields[i];\n      for (var j = 0; j < rowValuesLength; j++) {\n        var rowField = fields[j];\n        var facet = {\n          type: type,\n          data: data,\n          region: this.getRegion(rowValuesLength, columnValuesLength, i, j),\n          columnValue: columnField,\n          rowValue: rowField,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: i,\n          rowIndex: j,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      }\n    }\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Matrix.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 最后一行显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Matrix.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // 第一列显示\n    if (facet.columnIndex !== 0) {\n      return __assign(__assign({}, option), {\n        title: null,\n        label: null\n      });\n    }\n    return option;\n  };\n  /**\n   * facet title\n   */\n  Matrix.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnIndex = facet.columnIndex,\n        rowIndex = facet.rowIndex,\n        columnValuesLength = facet.columnValuesLength,\n        rowValuesLength = facet.rowValuesLength,\n        columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      // top\n      if (rowIndex === 0) {\n        var formatter = get(_this.cfg.columnTitle, 'formatter');\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.columnTitle);\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        var formatter = get(_this.cfg.rowTitle, 'formatter');\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.rowTitle);\n        view.annotation().text(config);\n      }\n    });\n  };\n  return Matrix;\n}(Facet);\nexport default Matrix;","map":{"version":3,"sources":["../../src/facet/matrix.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepMix, each, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { AxisCfg, Datum, MatrixCfg, MatrixData } from '../interface';\n\nimport View from '../chart/view';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n\n/**\n * @ignore\n * 镜像分面\n */\nexport default class Matrix extends Facet<MatrixCfg, MatrixData> {\n  protected getDefaultCfg() {\n    return deepMix({}, super.getDefaultCfg(), {\n      type: 'matrix',\n      showTitle: false,\n      columnTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n      rowTitle: {\n        ...super.getDefaultTitleCfg(),\n      },\n    });\n  }\n\n  public render() {\n    super.render();\n\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  }\n\n  protected afterEachView(view: View, facet: MatrixData) {\n    this.processAxis(view, facet);\n  }\n\n  protected beforeEachView(view: View, facet: MatrixData) {}\n\n  protected generateFacets(data: Datum[]): MatrixData[] {\n    const { fields, type } = this.cfg;\n\n    // 矩阵中行列相等，等于指定的字段个数\n    const rowValuesLength = fields.length;\n    const columnValuesLength = rowValuesLength;\n\n    const rst = [];\n    for (let i = 0; i < columnValuesLength; i++) {\n      const columnField = fields[i];\n      for (let j = 0; j < rowValuesLength; j++) {\n        const rowField = fields[j];\n\n        const facet: MatrixData = {\n          type,\n          data,\n          region: this.getRegion(rowValuesLength, columnValuesLength, i, j),\n\n          columnValue: columnField,\n          rowValue: rowField,\n          columnField,\n          rowField,\n          columnIndex: i,\n          rowIndex: j,\n          columnValuesLength,\n          rowValuesLength,\n        };\n        rst.push(facet);\n      }\n    }\n    return rst;\n  }\n\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getXAxisOption(x: string, axes: any, option: AxisCfg, facet: MatrixData): object {\n    // 最后一行显示\n    if (facet.rowIndex !== facet.rowValuesLength - 1) {\n      return {\n        ...option,\n        label: null,\n        title: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  protected getYAxisOption(y: string, axes: any, option: AxisCfg, facet: MatrixData): object {\n    // 第一列显示\n    if (facet.columnIndex !== 0) {\n      return {\n        ...option,\n        title: null,\n        label: null,\n      };\n    }\n    return option;\n  }\n\n  /**\n   * facet title\n   */\n  private renderTitle() {\n    each(this.facets, (facet: MatrixData, facetIndex: number) => {\n      const { columnIndex, rowIndex, columnValuesLength, rowValuesLength, columnValue, rowValue, view } = facet;\n\n      // top\n      if (rowIndex === 0) {\n        const formatter = get(this.cfg.columnTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['50%', '0%'] as [string, string],\n            content: formatter ? formatter(columnValue) : columnValue,\n          },\n          getFactTitleConfig(DIRECTION.TOP),\n          this.cfg.columnTitle\n        );\n\n        view.annotation().text(config);\n      }\n      // right\n      if (columnIndex === columnValuesLength - 1) {\n        const formatter = get(this.cfg.rowTitle, 'formatter');\n        const config = deepMix(\n          {\n            position: ['100%', '50%'] as [string, string],\n            content: formatter ? formatter(rowValue) : rowValue,\n          },\n          getFactTitleConfig(DIRECTION.RIGHT),\n          this.cfg.rowTitle\n        );\n\n        view.annotation().text(config);\n      }\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}