{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, isNumber } from '@antv/util';\nimport { timeFormat, toTimeStamp } from '../util/time';\nimport Category from './base';\n/**\n * 时间分类度量\n * @class\n */\nvar TimeCat = /** @class */function (_super) {\n  __extends(TimeCat, _super);\n  function TimeCat() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'timeCat';\n    return _this;\n  }\n  /**\n   * @override\n   */\n  TimeCat.prototype.translate = function (value) {\n    value = toTimeStamp(value);\n    var index = this.values.indexOf(value);\n    if (index === -1) {\n      if (isNumber(value) && value < this.values.length) {\n        index = value;\n      } else {\n        index = NaN;\n      }\n    }\n    return index;\n  };\n  /**\n   * 由于时间类型数据需要转换一下，所以复写 getText\n   * @override\n   */\n  TimeCat.prototype.getText = function (value, tickIndex) {\n    var index = this.translate(value);\n    if (index > -1) {\n      var result = this.values[index];\n      var formatter = this.formatter;\n      result = formatter ? formatter(result, tickIndex) : timeFormat(result, this.mask);\n      return result;\n    }\n    return value;\n  };\n  TimeCat.prototype.initCfg = function () {\n    this.tickMethod = 'time-cat';\n    this.mask = 'YYYY-MM-DD';\n    this.tickCount = 7; // 一般时间数据会显示 7， 14， 30 天的数字\n  };\n\n  TimeCat.prototype.setDomain = function () {\n    var values = this.values;\n    // 针对时间分类类型，会将时间统一转换为时间戳\n    each(values, function (v, i) {\n      values[i] = toTimeStamp(v);\n    });\n    values.sort(function (v1, v2) {\n      return v1 - v2;\n    });\n    _super.prototype.setDomain.call(this);\n  };\n  return TimeCat;\n}(Category);\nexport default TimeCat;","map":{"version":3,"sources":["../../src/category/time.ts"],"names":[],"mappings":";AAAA,SAAS,IAAI,EAAE,QAAQ,QAAQ,YAAY;AAC3C,SAAS,UAAU,EAAE,WAAW,QAAQ,cAAc;AACtD,OAAO,QAAQ,MAAM,QAAQ;AAE7B;;;AAGG;AACH,IAAA,OAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAsB,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;EAAtB,SAAA,OAAA,GAAA;IAAA,IAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;IACkB,KAAA,CAAA,IAAI,GAAW,SAAS;;EAiD1C;EA/CE;;AAEG;EACI,OAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,KAAK,EAAA;IACpB,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;IAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;IACtC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QACjD,KAAK,GAAG,KAAK;OACd,MAAM;QACL,KAAK,GAAG,GAAG;MACZ;IACF;IACD,OAAO,KAAK;EACd,CAAC;EAED;;;AAGG;EACI,OAAA,CAAA,SAAA,CAAA,OAAO,GAAd,UAAe,KAAsB,EAAE,SAAkB,EAAA;IACvD,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACnC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;MAC/B,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS;MAChC,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;MACjF,OAAO,MAAM;IACd;IACD,OAAO,KAAK;EACd,CAAC;EACS,OAAA,CAAA,SAAA,CAAA,OAAO,GAAjB,YAAA;IACE,IAAI,CAAC,UAAU,GAAG,UAAU;IAC5B,IAAI,CAAC,IAAI,GAAG,YAAY;IACxB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;EACtB,CAAC;;EAES,OAAA,CAAA,SAAA,CAAA,SAAS,GAAnB,YAAA;IACE,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM;IAC1B;IACA,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,EAAA;MAChB,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE,EAAA;MACjB,OAAO,EAAE,GAAG,EAAE;IAChB,CAAC,CAAC;IACF,MAAA,CAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,CAAE;EACnB,CAAC;EACH,OAAA,OAAC;AAAD,CAAC,CAlDqB,QAAQ,CAAA;AAoD9B,eAAe,OAAO","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { each, isNumber } from '@antv/util';\nimport { timeFormat, toTimeStamp } from '../util/time';\nimport Category from './base';\n/**\n * 时间分类度量\n * @class\n */\nvar TimeCat = /** @class */ (function (_super) {\n    __extends(TimeCat, _super);\n    function TimeCat() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'timeCat';\n        return _this;\n    }\n    /**\n     * @override\n     */\n    TimeCat.prototype.translate = function (value) {\n        value = toTimeStamp(value);\n        var index = this.values.indexOf(value);\n        if (index === -1) {\n            if (isNumber(value) && value < this.values.length) {\n                index = value;\n            }\n            else {\n                index = NaN;\n            }\n        }\n        return index;\n    };\n    /**\n     * 由于时间类型数据需要转换一下，所以复写 getText\n     * @override\n     */\n    TimeCat.prototype.getText = function (value, tickIndex) {\n        var index = this.translate(value);\n        if (index > -1) {\n            var result = this.values[index];\n            var formatter = this.formatter;\n            result = formatter ? formatter(result, tickIndex) : timeFormat(result, this.mask);\n            return result;\n        }\n        return value;\n    };\n    TimeCat.prototype.initCfg = function () {\n        this.tickMethod = 'time-cat';\n        this.mask = 'YYYY-MM-DD';\n        this.tickCount = 7; // 一般时间数据会显示 7， 14， 30 天的数字\n    };\n    TimeCat.prototype.setDomain = function () {\n        var values = this.values;\n        // 针对时间分类类型，会将时间统一转换为时间戳\n        each(values, function (v, i) {\n            values[i] = toTimeStamp(v);\n        });\n        values.sort(function (v1, v2) {\n            return v1 - v2;\n        });\n        _super.prototype.setDomain.call(this);\n    };\n    return TimeCat;\n}(Category));\nexport default TimeCat;\n//# sourceMappingURL=time.js.map"]},"metadata":{},"sourceType":"module"}