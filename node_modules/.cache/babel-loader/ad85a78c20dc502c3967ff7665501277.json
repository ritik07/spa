{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getCoordinateClipCfg } from '../../util/coordinate';\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element, animateCfg, cfg) {\n  var _a = getCoordinateClipCfg(cfg.coordinate, 20),\n    type = _a.type,\n    startState = _a.startState,\n    endState = _a.endState; // 根据坐标系类型获取整体的剪切区域配置信息\n  var clipShape = element.setClip({\n    type: type,\n    attrs: startState\n  }); // 为 shape 设置剪切区域\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n  // 对剪切图形做动画\n  clipShape.animate(endState, __assign(__assign({}, animateCfg), {\n    callback: function () {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    }\n  }));\n}","map":{"version":3,"sources":["../../../src/animate/animation/wave-in.ts"],"names":[],"mappings":";AAEA,SAAS,oBAAoB,QAAQ,uBAAuB;AAG5D;;;;;;;;AAQG;AACH,OAAM,SAAU,MAAM,CAAC,OAAwB,EAAE,UAAuB,EAAE,GAAoB,EAAA;EACtF,IAAA,EAAA,GAAiC,oBAAoB,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,CAAC;IAAvE,IAAI,GAAA,EAAA,CAAA,IAAA;IAAE,UAAU,GAAA,EAAA,CAAA,UAAA;IAAE,QAAQ,GAAA,EAAA,CAAA,QAA6C,CAAC,CAAC;EACjF,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC;IAChC,IAAI,EAAA,IAAA;IACJ,KAAK,EAAE;GACR,CAAW,CAAC,CAAC;EAEd;EACA,IAAI,GAAG,CAAC,OAAO,EAAE;IACf,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;EAC1B;EAED;EACA,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACrB,UAAU,CAAA,EAAA;IACb,QAAQ,EAAE,YAAA;MACR,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;QACxC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;MAC/B;MACD,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B;EAAC,CAAA,CAAA,CACD;AACJ","sourcesContent":["import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { type, startState, endState } = getCoordinateClipCfg(cfg.coordinate, 20); // 根据坐标系类型获取整体的剪切区域配置信息\n  const clipShape = element.setClip({\n    type,\n    attrs: startState,\n  }) as IShape; // 为 shape 设置剪切区域\n\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n\n  // 对剪切图形做动画\n  clipShape.animate(endState, {\n    ...animateCfg,\n    callback: () => {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n    },\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}