{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport { applyTranslate } from '../util/matrix';\nimport Theme from '../util/theme';\nvar DataMarkerAnnotation = /** @class */function (_super) {\n  __extends(DataMarkerAnnotation, _super);\n  function DataMarkerAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  DataMarkerAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'dataMarker',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      point: {},\n      line: {},\n      text: {},\n      direction: 'upward',\n      autoAdjust: true,\n      coordinateBBox: null,\n      defaultCfg: {\n        point: {\n          display: true,\n          style: {\n            r: 3,\n            fill: '#FFFFFF',\n            stroke: '#1890FF',\n            lineWidth: 2\n          }\n        },\n        line: {\n          display: true,\n          length: 20,\n          style: {\n            stroke: Theme.lineColor,\n            lineWidth: 1\n          }\n        },\n        text: {\n          content: '',\n          display: true,\n          style: {\n            fill: Theme.textColor,\n            opacity: 0.65,\n            fontSize: 12,\n            textAlign: 'start',\n            fontFamily: Theme.fontFamily\n          }\n        }\n      }\n    });\n  };\n  DataMarkerAnnotation.prototype.renderInner = function (group) {\n    if (get(this.get('line'), 'display')) {\n      this.renderLine(group);\n    }\n    if (get(this.get('text'), 'display')) {\n      this.renderText(group);\n    }\n    if (get(this.get('point'), 'display')) {\n      this.renderPoint(group);\n    }\n    if (this.get('autoAdjust')) {\n      this.autoAdjust(group);\n    }\n  };\n  DataMarkerAnnotation.prototype.applyOffset = function () {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x') + this.get('offsetX'),\n      y: this.get('y') + this.get('offsetY')\n    });\n  };\n  DataMarkerAnnotation.prototype.renderPoint = function (group) {\n    var point = this.getShapeAttrs().point;\n    this.addShape(group, {\n      type: 'circle',\n      id: this.getElementId('point'),\n      name: 'annotation-point',\n      attrs: point\n    });\n  };\n  DataMarkerAnnotation.prototype.renderLine = function (group) {\n    var line = this.getShapeAttrs().line;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('line'),\n      name: 'annotation-line',\n      attrs: line\n    });\n  };\n  DataMarkerAnnotation.prototype.renderText = function (group) {\n    var textAttrs = this.getShapeAttrs().text;\n    var x = textAttrs.x,\n      y = textAttrs.y,\n      text = textAttrs.text,\n      style = __rest(textAttrs, [\"x\", \"y\", \"text\"]);\n    var _a = this.get('text'),\n      background = _a.background,\n      maxLength = _a.maxLength,\n      autoEllipsis = _a.autoEllipsis,\n      isVertival = _a.isVertival,\n      ellipsisPosition = _a.ellipsisPosition;\n    var tagCfg = {\n      x: x,\n      y: y,\n      id: this.getElementId('text'),\n      name: 'annotation-text',\n      content: text,\n      style: style,\n      background: background,\n      maxLength: maxLength,\n      autoEllipsis: autoEllipsis,\n      isVertival: isVertival,\n      ellipsisPosition: ellipsisPosition\n    };\n    renderTag(group, tagCfg);\n  };\n  DataMarkerAnnotation.prototype.autoAdjust = function (group) {\n    var direction = this.get('direction');\n    var x = this.get('x');\n    var y = this.get('y');\n    var lineLength = get(this.get('line'), 'length', 0);\n    var coordinateBBox = this.get('coordinateBBox');\n    var _a = group.getBBox(),\n      minX = _a.minX,\n      maxX = _a.maxX,\n      minY = _a.minY,\n      maxY = _a.maxY;\n    var textGroup = group.findById(this.getElementId('text-group'));\n    var textShape = group.findById(this.getElementId('text'));\n    var lineShape = group.findById(this.getElementId('line'));\n    if (!coordinateBBox) {\n      return;\n    }\n    if (textGroup) {\n      if (x + minX <= coordinateBBox.minX) {\n        // 左侧超出\n        var overflow = coordinateBBox.minX - (x + minX);\n        applyTranslate(textGroup, textGroup.attr('x') + overflow, textGroup.attr('y'));\n      }\n      if (x + maxX >= coordinateBBox.maxX) {\n        // 右侧超出\n        var overflow = x + maxX - coordinateBBox.maxX;\n        applyTranslate(textGroup, textGroup.attr('x') - overflow, textGroup.attr('y'));\n      }\n    }\n    if (direction === 'upward' && y + minY <= coordinateBBox.minY || direction !== 'upward' && y + maxY >= coordinateBBox.maxY) {\n      // 上方或者下方超出\n      var textBaseline = void 0;\n      var factor = void 0;\n      if (direction === 'upward' && y + minY <= coordinateBBox.minY) {\n        textBaseline = 'top';\n        factor = 1;\n      } else {\n        textBaseline = 'bottom';\n        factor = -1;\n      }\n      textShape.attr('textBaseline', textBaseline);\n      if (lineShape) {\n        lineShape.attr('path', [['M', 0, 0], ['L', 0, lineLength * factor]]);\n      }\n      applyTranslate(textGroup, textGroup.attr('x'), (lineLength + 2) * factor);\n    }\n  };\n  DataMarkerAnnotation.prototype.getShapeAttrs = function () {\n    var lineDisplay = get(this.get('line'), 'display');\n    var pointStyle = get(this.get('point'), 'style', {});\n    var lineStyle = get(this.get('line'), 'style', {});\n    var textStyle = get(this.get('text'), 'style', {});\n    var direction = this.get('direction');\n    var lineLength = lineDisplay ? get(this.get('line'), 'length', 0) : 0;\n    var factor = direction === 'upward' ? -1 : 1;\n    return {\n      point: __assign({\n        x: 0,\n        y: 0\n      }, pointStyle),\n      line: __assign({\n        path: [['M', 0, 0], ['L', 0, lineLength * factor]]\n      }, lineStyle),\n      text: __assign({\n        x: 0,\n        y: (lineLength + 2) * factor,\n        text: get(this.get('text'), 'content', ''),\n        textBaseline: direction === 'upward' ? 'bottom' : 'top'\n      }, textStyle)\n    };\n  };\n  return DataMarkerAnnotation;\n}(GroupComponent);\nexport default DataMarkerAnnotation;","map":{"version":3,"sources":["../../src/annotation/data-marker.ts"],"names":[],"mappings":";AACA,SAAS,GAAG,QAAQ,YAAY;AAChC,OAAO,cAAc,MAAM,6BAA6B;AAGxD,SAAS,SAAS,QAAQ,iBAAiB;AAC3C,SAAS,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,KAAK,MAAM,eAAe;AAEjC,IAAA,oBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAmC,SAAA,CAAA,oBAAA,EAAA,MAAA,CAAA;EAAnC,SAAA,oBAAA,GAAA;;EA4MA;EA3ME;;;AAGG;EACI,oBAAA,CAAA,SAAA,CAAA,aAAa,GAApB,YAAA;IACE,IAAM,GAAG,GAAG,MAAA,CAAA,SAAA,CAAM,aAAa,CAAA,IAAA,CAAA,IAAA,CAAE;IACjC,OAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACK,GAAG,CAAA,EAAA;MACN,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,YAAY;MAClB,YAAY,EAAE,OAAO;MACrB,CAAC,EAAE,CAAC;MACJ,CAAC,EAAE,CAAC;MACJ,KAAK,EAAE,CAAA,CAAE;MACT,IAAI,EAAE,CAAA,CAAE;MACR,IAAI,EAAE,CAAA,CAAE;MACR,SAAS,EAAE,QAAQ;MACnB,UAAU,EAAE,IAAI;MAChB,cAAc,EAAE,IAAI;MACpB,UAAU,EAAE;QACV,KAAK,EAAE;UACL,OAAO,EAAE,IAAI;UACb,KAAK,EAAE;YACL,CAAC,EAAE,CAAC;YACJ,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE;UACZ;SACF;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,IAAI;UACb,MAAM,EAAE,EAAE;UACV,KAAK,EAAE;YACL,MAAM,EAAE,KAAK,CAAC,SAAS;YACvB,SAAS,EAAE;UACZ;SACF;QACD,IAAI,EAAE;UACJ,OAAO,EAAE,EAAE;UACX,OAAO,EAAE,IAAI;UACb,KAAK,EAAE;YACL,IAAI,EAAE,KAAK,CAAC,SAAS;YACrB,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,OAAO;YAClB,UAAU,EAAE,KAAK,CAAC;UACnB;QACF;MACF;IAAA,CAAA,CAAA;EAEL,CAAC;EAES,oBAAA,CAAA,SAAA,CAAA,WAAW,GAArB,UAAsB,KAAa,EAAA;IACjC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE;MACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IACvB;IACD,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE;MACpC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IACvB;IACD,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC,EAAE;MACrC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACxB;IAED,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;MAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IACvB;EACH,CAAC;EAES,oBAAA,CAAA,SAAA,CAAA,WAAW,GAArB,YAAA;IACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;MACpC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS;KACtC,CAAC;EACJ,CAAC;EAEO,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAnB,UAAoB,KAAa,EAAA;IACvB,IAAA,KAAK,GAAK,IAAI,CAAC,aAAa,EAAE,CAAA,KAAzB;IAEb,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MACnB,IAAI,EAAE,QAAQ;MACd,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;MAC9B,IAAI,EAAE,kBAAkB;MACxB,KAAK,EAAE;KACR,CAAC;EACJ,CAAC;EAEO,oBAAA,CAAA,SAAA,CAAA,UAAU,GAAlB,UAAmB,KAAa,EAAA;IACtB,IAAA,IAAI,GAAK,IAAI,CAAC,aAAa,EAAE,CAAA,IAAzB;IAEZ,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;MACnB,IAAI,EAAE,MAAM;MACZ,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;MAC7B,IAAI,EAAE,iBAAiB;MACvB,KAAK,EAAE;KACR,CAAC;EACJ,CAAC;EAEO,oBAAA,CAAA,SAAA,CAAA,UAAU,GAAlB,UAAmB,KAAa,EAAA;IACtB,IAAM,SAAS,GAAK,IAAI,CAAC,aAAa,EAAE,CAAA,IAAzB;IAEf,IAAA,CAAC,GAAwB,SAAS,CAAA,CAAjC;MAAE,CAAC,GAAqB,SAAS,CAAA,CAA9B;MAAE,IAAI,GAAe,SAAS,CAAA,IAAxB;MAAK,KAAK,GAAA,MAAA,CAAK,SAAS,EAApC,CAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAwB,CAAF;IACtB,IAAA,EAAA,GAAwE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;MAAtF,UAAU,GAAA,EAAA,CAAA,UAAA;MAAE,SAAS,GAAA,EAAA,CAAA,SAAA;MAAE,YAAY,GAAA,EAAA,CAAA,YAAA;MAAE,UAAU,GAAA,EAAA,CAAA,UAAA;MAAE,gBAAgB,GAAA,EAAA,CAAA,gBAAqB;IAC9F,IAAM,MAAM,GAAG;MACb,CAAC,EAAA,CAAA;MACD,CAAC,EAAA,CAAA;MACD,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;MAC7B,IAAI,EAAE,iBAAiB;MACvB,OAAO,EAAE,IAAI;MACb,KAAK,EAAA,KAAA;MACL,UAAU,EAAA,UAAA;MACV,SAAS,EAAA,SAAA;MACT,YAAY,EAAA,YAAA;MACZ,UAAU,EAAA,UAAA;MACV,gBAAgB,EAAA;KACjB;IAED,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC;EAC1B,CAAC;EAEO,oBAAA,CAAA,SAAA,CAAA,UAAU,GAAlB,UAAmB,KAAa,EAAA;IAC9B,IAAM,SAAS,GAAW,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;IAC/C,IAAM,CAAC,GAAW,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAC/B,IAAM,CAAC,GAAW,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IAC/B,IAAM,UAAU,GAAW,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IAC7D,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;IAC3C,IAAA,EAAA,GAA6B,KAAK,CAAC,OAAO,EAAE;MAA1C,IAAI,GAAA,EAAA,CAAA,IAAA;MAAE,IAAI,GAAA,EAAA,CAAA,IAAA;MAAE,IAAI,GAAA,EAAA,CAAA,IAAA;MAAE,IAAI,GAAA,EAAA,CAAA,IAAoB;IAElD,IAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;IACjE,IAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAM,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAE3D,IAAI,CAAC,cAAc,EAAE;MACnB;IACD;IAED,IAAI,SAAS,EAAE;MACb,IAAI,CAAC,GAAG,IAAI,IAAI,cAAc,CAAC,IAAI,EAAE;QACnC;QACA,IAAM,QAAQ,GAAG,cAAc,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;QACjD,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC/E;MACD,IAAI,CAAC,GAAG,IAAI,IAAI,cAAc,CAAC,IAAI,EAAE;QACnC;QACA,IAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,GAAG,cAAc,CAAC,IAAI;QAC/C,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC/E;IACF;IAED,IACG,SAAS,KAAK,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,cAAc,CAAC,IAAI,IACzD,SAAS,KAAK,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,cAAc,CAAC,IAAK,EAC3D;MACA;MACA,IAAI,YAAY,GAAA,KAAA,CAAA;MAChB,IAAI,MAAM,GAAA,KAAA,CAAA;MACV,IAAI,SAAS,KAAK,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,cAAc,CAAC,IAAI,EAAE;QAC7D,YAAY,GAAG,KAAK;QACpB,MAAM,GAAG,CAAC;OACX,MAAM;QACL,YAAY,GAAG,QAAQ;QACvB,MAAM,GAAG,CAAC,CAAC;MACZ;MACD,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC;MAC5C,IAAI,SAAS,EAAE;QACb,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CACrB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EACX,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,CAC9B,CAAC;MACH;MACD,cAAc,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,IAAI,MAAM,CAAC;IAC1E;EACH,CAAC;EAEO,oBAAA,CAAA,SAAA,CAAA,aAAa,GAArB,YAAA;IACE,IAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC;IACpD,IAAM,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,CAAA,CAAE,CAAC;IACtD,IAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAA,CAAE,CAAC;IACpD,IAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAA,CAAE,CAAC;IACpD,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;IACvC,IAAM,UAAU,GAAG,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC;IACvE,IAAM,MAAM,GAAG,SAAS,KAAK,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;IAC9C,OAAO;MACL,KAAK,EAAA,QAAA,CAAA;QACH,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE;MAAC,CAAA,EACD,UAAU,CACd;MACD,IAAI,EAAA,QAAA,CAAA;QACF,IAAI,EAAE,CACJ,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EACX,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC;MAC9B,CAAA,EACE,SAAS,CACb;MACD,IAAI,EAAA,QAAA,CAAA;QACF,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,IAAI,MAAM;QAC5B,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,CAAC;QAC1C,YAAY,EAAE,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG;MAAK,CAAA,EACpD,SAAS;KAEf;EACH,CAAC;EACH,OAAA,oBAAC;AAAD,CAAC,CA5MkC,cAAc,CAAA;AA8MjD,eAAe,oBAAoB","sourceRoot":"","sourcesContent":["import { __assign, __extends, __rest } from \"tslib\";\nimport { get } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { renderTag } from '../util/graphic';\nimport { applyTranslate } from '../util/matrix';\nimport Theme from '../util/theme';\nvar DataMarkerAnnotation = /** @class */ (function (_super) {\n    __extends(DataMarkerAnnotation, _super);\n    function DataMarkerAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 默认的配置项\n     * @returns {object} 默认的配置项\n     */\n    DataMarkerAnnotation.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { name: 'annotation', type: 'dataMarker', locationType: 'point', x: 0, y: 0, point: {}, line: {}, text: {}, direction: 'upward', autoAdjust: true, coordinateBBox: null, defaultCfg: {\n                point: {\n                    display: true,\n                    style: {\n                        r: 3,\n                        fill: '#FFFFFF',\n                        stroke: '#1890FF',\n                        lineWidth: 2,\n                    },\n                },\n                line: {\n                    display: true,\n                    length: 20,\n                    style: {\n                        stroke: Theme.lineColor,\n                        lineWidth: 1,\n                    },\n                },\n                text: {\n                    content: '',\n                    display: true,\n                    style: {\n                        fill: Theme.textColor,\n                        opacity: 0.65,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        fontFamily: Theme.fontFamily,\n                    },\n                },\n            } });\n    };\n    DataMarkerAnnotation.prototype.renderInner = function (group) {\n        if (get(this.get('line'), 'display')) {\n            this.renderLine(group);\n        }\n        if (get(this.get('text'), 'display')) {\n            this.renderText(group);\n        }\n        if (get(this.get('point'), 'display')) {\n            this.renderPoint(group);\n        }\n        if (this.get('autoAdjust')) {\n            this.autoAdjust(group);\n        }\n    };\n    DataMarkerAnnotation.prototype.applyOffset = function () {\n        this.moveElementTo(this.get('group'), {\n            x: this.get('x') + this.get('offsetX'),\n            y: this.get('y') + this.get('offsetY'),\n        });\n    };\n    DataMarkerAnnotation.prototype.renderPoint = function (group) {\n        var point = this.getShapeAttrs().point;\n        this.addShape(group, {\n            type: 'circle',\n            id: this.getElementId('point'),\n            name: 'annotation-point',\n            attrs: point,\n        });\n    };\n    DataMarkerAnnotation.prototype.renderLine = function (group) {\n        var line = this.getShapeAttrs().line;\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('line'),\n            name: 'annotation-line',\n            attrs: line,\n        });\n    };\n    DataMarkerAnnotation.prototype.renderText = function (group) {\n        var textAttrs = this.getShapeAttrs().text;\n        var x = textAttrs.x, y = textAttrs.y, text = textAttrs.text, style = __rest(textAttrs, [\"x\", \"y\", \"text\"]);\n        var _a = this.get('text'), background = _a.background, maxLength = _a.maxLength, autoEllipsis = _a.autoEllipsis, isVertival = _a.isVertival, ellipsisPosition = _a.ellipsisPosition;\n        var tagCfg = {\n            x: x,\n            y: y,\n            id: this.getElementId('text'),\n            name: 'annotation-text',\n            content: text,\n            style: style,\n            background: background,\n            maxLength: maxLength,\n            autoEllipsis: autoEllipsis,\n            isVertival: isVertival,\n            ellipsisPosition: ellipsisPosition,\n        };\n        renderTag(group, tagCfg);\n    };\n    DataMarkerAnnotation.prototype.autoAdjust = function (group) {\n        var direction = this.get('direction');\n        var x = this.get('x');\n        var y = this.get('y');\n        var lineLength = get(this.get('line'), 'length', 0);\n        var coordinateBBox = this.get('coordinateBBox');\n        var _a = group.getBBox(), minX = _a.minX, maxX = _a.maxX, minY = _a.minY, maxY = _a.maxY;\n        var textGroup = group.findById(this.getElementId('text-group'));\n        var textShape = group.findById(this.getElementId('text'));\n        var lineShape = group.findById(this.getElementId('line'));\n        if (!coordinateBBox) {\n            return;\n        }\n        if (textGroup) {\n            if (x + minX <= coordinateBBox.minX) {\n                // 左侧超出\n                var overflow = coordinateBBox.minX - (x + minX);\n                applyTranslate(textGroup, textGroup.attr('x') + overflow, textGroup.attr('y'));\n            }\n            if (x + maxX >= coordinateBBox.maxX) {\n                // 右侧超出\n                var overflow = x + maxX - coordinateBBox.maxX;\n                applyTranslate(textGroup, textGroup.attr('x') - overflow, textGroup.attr('y'));\n            }\n        }\n        if ((direction === 'upward' && y + minY <= coordinateBBox.minY) ||\n            (direction !== 'upward' && y + maxY >= coordinateBBox.maxY)) {\n            // 上方或者下方超出\n            var textBaseline = void 0;\n            var factor = void 0;\n            if (direction === 'upward' && y + minY <= coordinateBBox.minY) {\n                textBaseline = 'top';\n                factor = 1;\n            }\n            else {\n                textBaseline = 'bottom';\n                factor = -1;\n            }\n            textShape.attr('textBaseline', textBaseline);\n            if (lineShape) {\n                lineShape.attr('path', [\n                    ['M', 0, 0],\n                    ['L', 0, lineLength * factor],\n                ]);\n            }\n            applyTranslate(textGroup, textGroup.attr('x'), (lineLength + 2) * factor);\n        }\n    };\n    DataMarkerAnnotation.prototype.getShapeAttrs = function () {\n        var lineDisplay = get(this.get('line'), 'display');\n        var pointStyle = get(this.get('point'), 'style', {});\n        var lineStyle = get(this.get('line'), 'style', {});\n        var textStyle = get(this.get('text'), 'style', {});\n        var direction = this.get('direction');\n        var lineLength = lineDisplay ? get(this.get('line'), 'length', 0) : 0;\n        var factor = direction === 'upward' ? -1 : 1;\n        return {\n            point: __assign({ x: 0, y: 0 }, pointStyle),\n            line: __assign({ path: [\n                    ['M', 0, 0],\n                    ['L', 0, lineLength * factor],\n                ] }, lineStyle),\n            text: __assign({ x: 0, y: (lineLength + 2) * factor, text: get(this.get('text'), 'content', ''), textBaseline: direction === 'upward' ? 'bottom' : 'top' }, textStyle),\n        };\n    };\n    return DataMarkerAnnotation;\n}(GroupComponent));\nexport default DataMarkerAnnotation;\n//# sourceMappingURL=data-marker.js.map"]},"metadata":{},"sourceType":"module"}