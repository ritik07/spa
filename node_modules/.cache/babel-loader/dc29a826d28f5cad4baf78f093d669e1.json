{"ast":null,"code":"import { __assign, __extends, __spreadArrays } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\nvar ContinueLegend = /** @class */function (_super) {\n  __extends(ContinueLegend, _super);\n  function ContinueLegend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ContinueLegend.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      type: 'continue',\n      min: 0,\n      max: 100,\n      value: null,\n      colors: [],\n      track: {},\n      rail: {},\n      label: {},\n      handler: {},\n      slidable: true,\n      tip: null,\n      step: null,\n      maxWidth: null,\n      maxHeight: null,\n      defaultCfg: {\n        label: {\n          align: 'rail',\n          spacing: 5,\n          formatter: null,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily\n          }\n        },\n        handler: {\n          size: 10,\n          style: {\n            fill: '#fff',\n            stroke: '#333'\n          }\n        },\n        track: {},\n        rail: {\n          type: 'color',\n          size: 20,\n          defaultLength: 100,\n          style: {\n            fill: '#DCDEE2'\n          }\n        },\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top'\n          }\n        }\n      }\n    });\n  };\n  ContinueLegend.prototype.isSlider = function () {\n    return true;\n  };\n  // 实现 IList 接口\n  ContinueLegend.prototype.getValue = function () {\n    return this.getCurrentValue();\n  };\n  ContinueLegend.prototype.getRange = function () {\n    return {\n      min: this.get('min'),\n      max: this.get('max')\n    };\n  };\n  // 改变 range\n  ContinueLegend.prototype.setRange = function (min, max) {\n    this.update({\n      min: min,\n      max: max\n    });\n  };\n  ContinueLegend.prototype.setValue = function (value) {\n    var originValue = this.getValue();\n    this.set('value', value);\n    var group = this.get('group');\n    this.resetTrackClip();\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n    this.delegateEmit('valuechanged', {\n      originValue: originValue,\n      value: value\n    });\n  };\n  ContinueLegend.prototype.initEvent = function () {\n    var group = this.get('group');\n    this.bindSliderEvent(group);\n    this.bindRailEvent(group);\n    this.bindTrackEvent(group);\n  };\n  ContinueLegend.prototype.drawLegendContent = function (group) {\n    this.drawRail(group);\n    this.drawLabels(group);\n    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n    this.resetTrack(group);\n    this.resetTrackClip(group);\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n  };\n  ContinueLegend.prototype.bindSliderEvent = function (group) {\n    this.bindHandlersEvent(group);\n  };\n  ContinueLegend.prototype.bindHandlersEvent = function (group) {\n    var _this = this;\n    group.on('legend-handler-min:drag', function (ev) {\n      var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var maxValue = currentValue[1];\n      if (maxValue < minValue) {\n        // 如果小于最小值，则调整最小值\n        maxValue = minValue;\n      }\n      _this.setValue([minValue, maxValue]);\n    });\n    group.on('legend-handler-max:drag', function (ev) {\n      var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var minValue = currentValue[0];\n      if (minValue > maxValue) {\n        // 如果小于最小值，则调整最小值\n        minValue = maxValue;\n      }\n      _this.setValue([minValue, maxValue]);\n    });\n  };\n  ContinueLegend.prototype.bindRailEvent = function (group) {};\n  ContinueLegend.prototype.bindTrackEvent = function (group) {\n    var _this = this;\n    var prePoint = null;\n    group.on('legend-track:dragstart', function (ev) {\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:drag', function (ev) {\n      if (!prePoint) {\n        return;\n      }\n      var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n      var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n      var currentValue = _this.getCurrentValue();\n      var curDiff = currentValue[1] - currentValue[0];\n      var range = _this.getRange();\n      var dValue = curValue - preValue;\n      if (dValue < 0) {\n        // 减小, 同时未出边界\n        if (currentValue[0] + dValue > range.min) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.min, range.min + curDiff]);\n        }\n        //  && ||\n      } else if (dValue > 0) {\n        if (dValue > 0 && currentValue[1] + dValue < range.max) {\n          _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          _this.setValue([range.max - curDiff, range.max]);\n        }\n      }\n      prePoint = {\n        x: ev.x,\n        y: ev.y\n      };\n    });\n    group.on('legend-track:dragend', function (ev) {\n      prePoint = null;\n    });\n  };\n  ContinueLegend.prototype.drawLabels = function (group) {\n    this.drawLabel('min', group);\n    this.drawLabel('max', group);\n  };\n  ContinueLegend.prototype.drawLabel = function (name, group) {\n    var labelCfg = this.get('label');\n    var style = labelCfg.style;\n    var labelAlign = labelCfg.align;\n    var labelFormatter = labelCfg.formatter;\n    var value = this.get(name);\n    var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n    var localId = \"label-\" + name;\n    this.addShape(group, {\n      type: 'text',\n      id: this.getElementId(localId),\n      name: \"legend-label-\" + name,\n      attrs: __assign(__assign({\n        x: 0,\n        y: 0,\n        text: isFunction(labelFormatter) ? labelFormatter(value) : value\n      }, style), alignAttrs)\n    });\n  };\n  // 获取文本的对齐方式，为了自适应真实操碎了心\n  ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n    var isVertical = this.isVertical();\n    var textAlign = 'center';\n    var textBaseline = 'middle';\n    if (isVertical) {\n      // 垂直布局的所有的文本都左对齐\n      textAlign = 'start';\n      if (align !== 'rail') {\n        if (name === 'min') {\n          textBaseline = 'top';\n        } else {\n          textBaseline = 'bottom';\n        }\n      } else {\n        textBaseline = 'top';\n      }\n    } else {\n      if (align !== 'rail') {\n        textBaseline = 'top';\n        if (name === 'min') {\n          textAlign = 'start';\n        } else {\n          textAlign = 'end';\n        }\n      } else {\n        textAlign = 'start';\n        textBaseline = 'middle';\n      }\n    }\n    return {\n      textAlign: textAlign,\n      textBaseline: textBaseline\n    };\n  };\n  ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n    var railCfg = this.get('rail');\n    var size = railCfg.size,\n      defaultLength = railCfg.defaultLength,\n      type = railCfg.type;\n    var isVertical = this.isVertical();\n    var length = defaultLength;\n    var width = w;\n    var height = h;\n    if (!width) {\n      width = isVertical ? size : length;\n    }\n    if (!height) {\n      height = isVertical ? length : size;\n    }\n    var path = [];\n    if (type === 'color') {\n      path.push(['M', x, y]);\n      path.push(['L', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    } else {\n      path.push(['M', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    }\n    return path;\n  };\n  ContinueLegend.prototype.drawRail = function (group) {\n    var railCfg = this.get('rail');\n    var style = railCfg.style;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('rail'),\n      name: 'legend-rail',\n      attrs: __assign({\n        path: this.getRailPath(0, 0)\n      }, style)\n    });\n  };\n  // 将传入的颜色转换成渐变色\n  ContinueLegend.prototype.getTrackColor = function (colors) {\n    var count = colors.length;\n    if (!count) {\n      return null;\n    }\n    if (count === 1) {\n      return colors[0];\n    }\n    var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n    if (this.isVertical()) {\n      // 根据方向设置渐变方向\n      color = 'l(90)';\n    } else {\n      color = 'l(0)';\n    }\n    for (var i = 0; i < count; i++) {\n      var percent = i / (count - 1);\n      color += \" \" + percent + \":\" + colors[i];\n    }\n    return color;\n  };\n  ContinueLegend.prototype.getTrackPath = function (group) {\n    var railShape = this.getRailShape(group);\n    var path = railShape.attr('path');\n    return clone(path);\n  };\n  ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n    var value = this.getCurrentValue();\n    var min = value[0],\n      max = value[1];\n    var railBBox = this.getRailBBox(group);\n    var startPoint = this.getPointByValue(min, group);\n    var endPoint = this.getPointByValue(max, group);\n    var isVertical = this.isVertical();\n    var x;\n    var y;\n    var width;\n    var height;\n    if (isVertical) {\n      x = railBBox.minX;\n      y = startPoint.y;\n      width = railBBox.width;\n      height = endPoint.y - startPoint.y;\n    } else {\n      x = startPoint.x;\n      y = railBBox.minY;\n      width = endPoint.x - startPoint.x;\n      height = railBBox.height;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  // 获取 track 的属性，由 path 和 颜色构成\n  ContinueLegend.prototype.getTrackAttrs = function (group) {\n    var trackCfg = this.get('track');\n    var colors = this.get('colors');\n    var path = this.getTrackPath(group);\n    return mix({\n      path: path,\n      fill: this.getTrackColor(colors)\n    }, trackCfg.style);\n  };\n  ContinueLegend.prototype.resetTrackClip = function (group) {\n    var container = group || this.get('group');\n    var trackId = this.getElementId('track');\n    var trackShape = container.findById(trackId);\n    var clipShape = trackShape.getClip();\n    var attrs = this.getClipTrackAttrs(group);\n    if (!clipShape) {\n      trackShape.setClip({\n        type: 'rect',\n        attrs: attrs\n      });\n    } else {\n      clipShape.attr(attrs);\n    }\n  };\n  ContinueLegend.prototype.resetTrack = function (group) {\n    var trackId = this.getElementId('track');\n    var trackShape = group.findById(trackId);\n    var trackAttrs = this.getTrackAttrs(group);\n    if (trackShape) {\n      trackShape.attr(trackAttrs);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        id: trackId,\n        draggable: this.get('slidable'),\n        name: 'legend-track',\n        attrs: trackAttrs\n      });\n    }\n  };\n  ContinueLegend.prototype.getPointByValue = function (value, group) {\n    var _a = this.getRange(),\n      min = _a.min,\n      max = _a.max;\n    var percent = (value - min) / (max - min);\n    var bbox = this.getRailBBox(group);\n    var isVertcal = this.isVertical();\n    var point = {\n      x: 0,\n      y: 0\n    };\n    if (isVertcal) {\n      point.x = bbox.minX + bbox.width / 2;\n      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n    } else {\n      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n      point.y = bbox.minY + bbox.height / 2;\n    }\n    return point;\n  };\n  ContinueLegend.prototype.getRailShape = function (group) {\n    var container = group || this.get('group');\n    return container.findById(this.getElementId('rail'));\n  };\n  // 获取滑轨的宽高信息\n  ContinueLegend.prototype.getRailBBox = function (group) {\n    var railShape = this.getRailShape(group);\n    var bbox = railShape.getBBox();\n    return bbox;\n  };\n  ContinueLegend.prototype.getRailCanvasBBox = function () {\n    var container = this.get('group');\n    var railShape = container.findById(this.getElementId('rail'));\n    var bbox = railShape.getCanvasBBox();\n    return bbox;\n  };\n  // 是否垂直\n  ContinueLegend.prototype.isVertical = function () {\n    return this.get('layout') === 'vertical';\n  };\n  // 用于交互时\n  ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n    var _a = this.getRange(),\n      min = _a.min,\n      max = _a.max;\n    var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n    var isVertcal = this.isVertical();\n    var step = this.get('step');\n    var percent;\n    if (isVertcal) {\n      // 垂直时计算 y\n      percent = (y - bbox.minY) / bbox.height;\n    } else {\n      // 水平时计算 x\n      percent = (x - bbox.minX) / bbox.width;\n    }\n    var value = getValueByPercent(min, max, percent);\n    if (step) {\n      var count = Math.round((value - min) / step);\n      value = min + count * step; // 移动到最近的\n    }\n\n    if (value > max) {\n      value = max;\n    }\n    if (value < min) {\n      value = min;\n    }\n    return value;\n  };\n  // 当前选中的范围\n  ContinueLegend.prototype.getCurrentValue = function () {\n    var value = this.get('value');\n    if (!value) {\n      var values = this.get('values');\n      if (!values) {\n        return [this.get('min'), this.get('max')];\n      }\n      // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n      return [Math.max(Math.min.apply(Math, __spreadArrays(values, [this.get('max')])), this.get('min')), Math.min(Math.max.apply(Math, __spreadArrays(values, [this.get('min')])), this.get('max'))];\n    }\n    return value;\n  };\n  // 重置滑块 handler\n  ContinueLegend.prototype.resetHandlers = function (group) {\n    var currentValue = this.getCurrentValue();\n    var min = currentValue[0],\n      max = currentValue[1];\n    this.resetHandler(group, 'min', min);\n    this.resetHandler(group, 'max', max);\n  };\n  // 获取滑块的 path\n  ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n    var isVertical = this.isVertical();\n    var path = [];\n    var width = handlerCfg.size;\n    var x = point.x,\n      y = point.y;\n    var height = width * HANDLER_HEIGHT_RATIO;\n    var halfWidth = width / 2;\n    var oneSixthWidth = width / 6;\n    if (isVertical) {\n      /**\n       * 竖直情况下的滑块 handler，左侧顶点是 x,y\n       *  /----|\n       *    -- |\n       *    -- |\n       *  \\----|\n       */\n      var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', triangleX, y + halfWidth]);\n      path.push(['L', x + height, y + halfWidth]);\n      path.push(['L', x + height, y - halfWidth]);\n      path.push(['L', triangleX, y - halfWidth]);\n      path.push(['Z']);\n      // 绘制两条横线\n      path.push(['M', triangleX, y + oneSixthWidth]);\n      path.push(['L', x + height - 2, y + oneSixthWidth]);\n      path.push(['M', triangleX, y - oneSixthWidth]);\n      path.push(['L', x + height - 2, y - oneSixthWidth]);\n    } else {\n      /**\n       * 水平情况下的滑块，上面顶点处是 x,y\n       *  /   \\\n       * | | | |\n       * | | | |\n       *  -----\n       */\n      var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', x - halfWidth, triangleY]);\n      path.push(['L', x - halfWidth, y + height]);\n      path.push(['L', x + halfWidth, y + height]);\n      path.push(['L', x + halfWidth, triangleY]);\n      path.push(['Z']);\n      // 绘制两条竖线\n      path.push(['M', x - oneSixthWidth, triangleY]);\n      path.push(['L', x - oneSixthWidth, y + height - 2]);\n      path.push(['M', x + oneSixthWidth, triangleY]);\n      path.push(['L', x + oneSixthWidth, y + height - 2]);\n    }\n    return path;\n  };\n  // 调整 handler 的位置，如果未存在则绘制\n  ContinueLegend.prototype.resetHandler = function (group, name, value) {\n    var point = this.getPointByValue(value, group);\n    var handlerCfg = this.get('handler');\n    var path = this.getHandlerPath(handlerCfg, point);\n    var id = this.getElementId(\"handler-\" + name);\n    var handlerShape = group.findById(id);\n    var isVertical = this.isVertical();\n    if (handlerShape) {\n      handlerShape.attr('path', path);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        name: \"legend-handler-\" + name,\n        draggable: true,\n        id: id,\n        attrs: __assign(__assign({\n          path: path\n        }, handlerCfg.style), {\n          cursor: isVertical ? 'ns-resize' : 'ew-resize'\n        })\n      });\n    }\n  };\n  // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n  // 文本的位置\n  ContinueLegend.prototype.fixedElements = function (group) {\n    var railShape = group.findById(this.getElementId('rail'));\n    var minLabel = group.findById(this.getElementId('label-min'));\n    var maxLabel = group.findById(this.getElementId('label-max'));\n    var startPoint = this.getDrawPoint();\n    if (this.isVertical()) {\n      // 横向布局\n      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n    } else {\n      // 水平布局\n      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n    }\n  };\n  ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n    var isVertical = this.isVertical();\n    var lengthField = isVertical ? 'height' : 'width';\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n    if (maxLength) {\n      var elementsLength = labelAlign === 'rail' ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2 : railBBox[lengthField];\n      var diff = elementsLength - maxLength;\n      if (diff > 0) {\n        // 大于限制的长度\n        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n      }\n    }\n  };\n  ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n    var bbox = railShape.getBBox();\n    var path;\n    if (lengthField === 'height') {\n      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n    } else {\n      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n    }\n    railShape.attr('path', path);\n  };\n  ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n    var bbox = railShape.getBBox();\n    var path = this.getRailPath(x, y, bbox.width, bbox.height);\n    railShape.attr('path', path);\n  };\n  ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railHeight / 2\n      });\n      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n        y: startPoint.y + railHeight / 2\n      });\n    } else if (labelAlign === 'top') {\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n    } else {\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height + spacing\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y + railBBox.height + spacing\n      });\n    }\n  };\n  ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n    var labelCfg = this.get('label');\n    var labelAlign = labelCfg.align;\n    var spacing = labelCfg.spacing;\n    var railBBox = railShape.getBBox();\n    var minLabelBBox = minLabel.getBBox();\n    var maxLabelBBox = maxLabel.getBBox();\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2\n      });\n    } else if (labelAlign === 'right') {\n      minLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y + railBBox.height\n      });\n    } else {\n      // left\n      var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y\n      });\n      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height\n      });\n    }\n  };\n  return ContinueLegend;\n}(LegendBase);\nexport default ContinueLegend;","map":{"version":3,"sources":["../../src/legend/continuous.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __spreadArrays } from \"tslib\";\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nvar HANDLER_HEIGHT_RATIO = 1.4;\nvar HANDLER_TRIANGLE_RATIO = 0.4;\nvar ContinueLegend = /** @class */ (function (_super) {\n    __extends(ContinueLegend, _super);\n    function ContinueLegend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContinueLegend.prototype.getDefaultCfg = function () {\n        var cfg = _super.prototype.getDefaultCfg.call(this);\n        return __assign(__assign({}, cfg), { type: 'continue', min: 0, max: 100, value: null, colors: [], track: {}, rail: {}, label: {}, handler: {}, slidable: true, tip: null, step: null, maxWidth: null, maxHeight: null, defaultCfg: {\n                label: {\n                    align: 'rail',\n                    spacing: 5,\n                    formatter: null,\n                    style: {\n                        fontSize: 12,\n                        fill: Theme.textColor,\n                        textBaseline: 'middle',\n                        fontFamily: Theme.fontFamily,\n                    },\n                },\n                handler: {\n                    size: 10,\n                    style: {\n                        fill: '#fff',\n                        stroke: '#333',\n                    },\n                },\n                track: {},\n                rail: {\n                    type: 'color',\n                    size: 20,\n                    defaultLength: 100,\n                    style: {\n                        fill: '#DCDEE2',\n                    },\n                },\n                title: {\n                    spacing: 5,\n                    style: {\n                        fill: Theme.textColor,\n                        fontSize: 12,\n                        textAlign: 'start',\n                        textBaseline: 'top',\n                    },\n                },\n            } });\n    };\n    ContinueLegend.prototype.isSlider = function () {\n        return true;\n    };\n    // 实现 IList 接口\n    ContinueLegend.prototype.getValue = function () {\n        return this.getCurrentValue();\n    };\n    ContinueLegend.prototype.getRange = function () {\n        return {\n            min: this.get('min'),\n            max: this.get('max'),\n        };\n    };\n    // 改变 range\n    ContinueLegend.prototype.setRange = function (min, max) {\n        this.update({\n            min: min,\n            max: max,\n        });\n    };\n    ContinueLegend.prototype.setValue = function (value) {\n        var originValue = this.getValue();\n        this.set('value', value);\n        var group = this.get('group');\n        this.resetTrackClip();\n        if (this.get('slidable')) {\n            this.resetHandlers(group);\n        }\n        this.delegateEmit('valuechanged', {\n            originValue: originValue,\n            value: value,\n        });\n    };\n    ContinueLegend.prototype.initEvent = function () {\n        var group = this.get('group');\n        this.bindSliderEvent(group);\n        this.bindRailEvent(group);\n        this.bindTrackEvent(group);\n    };\n    ContinueLegend.prototype.drawLegendContent = function (group) {\n        this.drawRail(group);\n        this.drawLabels(group);\n        this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n        this.resetTrack(group);\n        this.resetTrackClip(group);\n        if (this.get('slidable')) {\n            this.resetHandlers(group);\n        }\n    };\n    ContinueLegend.prototype.bindSliderEvent = function (group) {\n        this.bindHandlersEvent(group);\n    };\n    ContinueLegend.prototype.bindHandlersEvent = function (group) {\n        var _this = this;\n        group.on('legend-handler-min:drag', function (ev) {\n            var minValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var maxValue = currentValue[1];\n            if (maxValue < minValue) {\n                // 如果小于最小值，则调整最小值\n                maxValue = minValue;\n            }\n            _this.setValue([minValue, maxValue]);\n        });\n        group.on('legend-handler-max:drag', function (ev) {\n            var maxValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var minValue = currentValue[0];\n            if (minValue > maxValue) {\n                // 如果小于最小值，则调整最小值\n                minValue = maxValue;\n            }\n            _this.setValue([minValue, maxValue]);\n        });\n    };\n    ContinueLegend.prototype.bindRailEvent = function (group) { };\n    ContinueLegend.prototype.bindTrackEvent = function (group) {\n        var _this = this;\n        var prePoint = null;\n        group.on('legend-track:dragstart', function (ev) {\n            prePoint = {\n                x: ev.x,\n                y: ev.y,\n            };\n        });\n        group.on('legend-track:drag', function (ev) {\n            if (!prePoint) {\n                return;\n            }\n            var preValue = _this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n            var curValue = _this.getValueByCanvasPoint(ev.x, ev.y);\n            var currentValue = _this.getCurrentValue();\n            var curDiff = currentValue[1] - currentValue[0];\n            var range = _this.getRange();\n            var dValue = curValue - preValue;\n            if (dValue < 0) {\n                // 减小, 同时未出边界\n                if (currentValue[0] + dValue > range.min) {\n                    _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n                }\n                else {\n                    _this.setValue([range.min, range.min + curDiff]);\n                }\n                //  && ||\n            }\n            else if (dValue > 0) {\n                if (dValue > 0 && currentValue[1] + dValue < range.max) {\n                    _this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n                }\n                else {\n                    _this.setValue([range.max - curDiff, range.max]);\n                }\n            }\n            prePoint = {\n                x: ev.x,\n                y: ev.y,\n            };\n        });\n        group.on('legend-track:dragend', function (ev) {\n            prePoint = null;\n        });\n    };\n    ContinueLegend.prototype.drawLabels = function (group) {\n        this.drawLabel('min', group);\n        this.drawLabel('max', group);\n    };\n    ContinueLegend.prototype.drawLabel = function (name, group) {\n        var labelCfg = this.get('label');\n        var style = labelCfg.style;\n        var labelAlign = labelCfg.align;\n        var labelFormatter = labelCfg.formatter;\n        var value = this.get(name);\n        var alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n        var localId = \"label-\" + name;\n        this.addShape(group, {\n            type: 'text',\n            id: this.getElementId(localId),\n            name: \"legend-label-\" + name,\n            attrs: __assign(__assign({ x: 0, y: 0, text: isFunction(labelFormatter) ? labelFormatter(value) : value }, style), alignAttrs),\n        });\n    };\n    // 获取文本的对齐方式，为了自适应真实操碎了心\n    ContinueLegend.prototype.getLabelAlignAttrs = function (name, align) {\n        var isVertical = this.isVertical();\n        var textAlign = 'center';\n        var textBaseline = 'middle';\n        if (isVertical) {\n            // 垂直布局的所有的文本都左对齐\n            textAlign = 'start';\n            if (align !== 'rail') {\n                if (name === 'min') {\n                    textBaseline = 'top';\n                }\n                else {\n                    textBaseline = 'bottom';\n                }\n            }\n            else {\n                textBaseline = 'top';\n            }\n        }\n        else {\n            if (align !== 'rail') {\n                textBaseline = 'top';\n                if (name === 'min') {\n                    textAlign = 'start';\n                }\n                else {\n                    textAlign = 'end';\n                }\n            }\n            else {\n                textAlign = 'start';\n                textBaseline = 'middle';\n            }\n        }\n        return {\n            textAlign: textAlign,\n            textBaseline: textBaseline,\n        };\n    };\n    ContinueLegend.prototype.getRailPath = function (x, y, w, h) {\n        var railCfg = this.get('rail');\n        var size = railCfg.size, defaultLength = railCfg.defaultLength, type = railCfg.type;\n        var isVertical = this.isVertical();\n        var length = defaultLength;\n        var width = w;\n        var height = h;\n        if (!width) {\n            width = isVertical ? size : length;\n        }\n        if (!height) {\n            height = isVertical ? length : size;\n        }\n        var path = [];\n        if (type === 'color') {\n            path.push(['M', x, y]);\n            path.push(['L', x + width, y]);\n            path.push(['L', x + width, y + height]);\n            path.push(['L', x, y + height]);\n            path.push(['Z']);\n        }\n        else {\n            path.push(['M', x + width, y]);\n            path.push(['L', x + width, y + height]);\n            path.push(['L', x, y + height]);\n            path.push(['Z']);\n        }\n        return path;\n    };\n    ContinueLegend.prototype.drawRail = function (group) {\n        var railCfg = this.get('rail');\n        var style = railCfg.style;\n        this.addShape(group, {\n            type: 'path',\n            id: this.getElementId('rail'),\n            name: 'legend-rail',\n            attrs: __assign({ path: this.getRailPath(0, 0) }, style),\n        });\n    };\n    // 将传入的颜色转换成渐变色\n    ContinueLegend.prototype.getTrackColor = function (colors) {\n        var count = colors.length;\n        if (!count) {\n            return null;\n        }\n        if (count === 1) {\n            return colors[0];\n        }\n        var color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n        if (this.isVertical()) {\n            // 根据方向设置渐变方向\n            color = 'l(90)';\n        }\n        else {\n            color = 'l(0)';\n        }\n        for (var i = 0; i < count; i++) {\n            var percent = i / (count - 1);\n            color += \" \" + percent + \":\" + colors[i];\n        }\n        return color;\n    };\n    ContinueLegend.prototype.getTrackPath = function (group) {\n        var railShape = this.getRailShape(group);\n        var path = railShape.attr('path');\n        return clone(path);\n    };\n    ContinueLegend.prototype.getClipTrackAttrs = function (group) {\n        var value = this.getCurrentValue();\n        var min = value[0], max = value[1];\n        var railBBox = this.getRailBBox(group);\n        var startPoint = this.getPointByValue(min, group);\n        var endPoint = this.getPointByValue(max, group);\n        var isVertical = this.isVertical();\n        var x;\n        var y;\n        var width;\n        var height;\n        if (isVertical) {\n            x = railBBox.minX;\n            y = startPoint.y;\n            width = railBBox.width;\n            height = endPoint.y - startPoint.y;\n        }\n        else {\n            x = startPoint.x;\n            y = railBBox.minY;\n            width = endPoint.x - startPoint.x;\n            height = railBBox.height;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    };\n    // 获取 track 的属性，由 path 和 颜色构成\n    ContinueLegend.prototype.getTrackAttrs = function (group) {\n        var trackCfg = this.get('track');\n        var colors = this.get('colors');\n        var path = this.getTrackPath(group);\n        return mix({\n            path: path,\n            fill: this.getTrackColor(colors),\n        }, trackCfg.style);\n    };\n    ContinueLegend.prototype.resetTrackClip = function (group) {\n        var container = group || this.get('group');\n        var trackId = this.getElementId('track');\n        var trackShape = container.findById(trackId);\n        var clipShape = trackShape.getClip();\n        var attrs = this.getClipTrackAttrs(group);\n        if (!clipShape) {\n            trackShape.setClip({\n                type: 'rect',\n                attrs: attrs,\n            });\n        }\n        else {\n            clipShape.attr(attrs);\n        }\n    };\n    ContinueLegend.prototype.resetTrack = function (group) {\n        var trackId = this.getElementId('track');\n        var trackShape = group.findById(trackId);\n        var trackAttrs = this.getTrackAttrs(group);\n        if (trackShape) {\n            trackShape.attr(trackAttrs);\n        }\n        else {\n            this.addShape(group, {\n                type: 'path',\n                id: trackId,\n                draggable: this.get('slidable'),\n                name: 'legend-track',\n                attrs: trackAttrs,\n            });\n        }\n    };\n    ContinueLegend.prototype.getPointByValue = function (value, group) {\n        var _a = this.getRange(), min = _a.min, max = _a.max;\n        var percent = (value - min) / (max - min);\n        var bbox = this.getRailBBox(group);\n        var isVertcal = this.isVertical();\n        var point = { x: 0, y: 0 };\n        if (isVertcal) {\n            point.x = bbox.minX + bbox.width / 2;\n            point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n        }\n        else {\n            point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n            point.y = bbox.minY + bbox.height / 2;\n        }\n        return point;\n    };\n    ContinueLegend.prototype.getRailShape = function (group) {\n        var container = group || this.get('group');\n        return container.findById(this.getElementId('rail'));\n    };\n    // 获取滑轨的宽高信息\n    ContinueLegend.prototype.getRailBBox = function (group) {\n        var railShape = this.getRailShape(group);\n        var bbox = railShape.getBBox();\n        return bbox;\n    };\n    ContinueLegend.prototype.getRailCanvasBBox = function () {\n        var container = this.get('group');\n        var railShape = container.findById(this.getElementId('rail'));\n        var bbox = railShape.getCanvasBBox();\n        return bbox;\n    };\n    // 是否垂直\n    ContinueLegend.prototype.isVertical = function () {\n        return this.get('layout') === 'vertical';\n    };\n    // 用于交互时\n    ContinueLegend.prototype.getValueByCanvasPoint = function (x, y) {\n        var _a = this.getRange(), min = _a.min, max = _a.max;\n        var bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n        var isVertcal = this.isVertical();\n        var step = this.get('step');\n        var percent;\n        if (isVertcal) {\n            // 垂直时计算 y\n            percent = (y - bbox.minY) / bbox.height;\n        }\n        else {\n            // 水平时计算 x\n            percent = (x - bbox.minX) / bbox.width;\n        }\n        var value = getValueByPercent(min, max, percent);\n        if (step) {\n            var count = Math.round((value - min) / step);\n            value = min + count * step; // 移动到最近的\n        }\n        if (value > max) {\n            value = max;\n        }\n        if (value < min) {\n            value = min;\n        }\n        return value;\n    };\n    // 当前选中的范围\n    ContinueLegend.prototype.getCurrentValue = function () {\n        var value = this.get('value');\n        if (!value) {\n            var values = this.get('values');\n            if (!values) {\n                return [this.get('min'), this.get('max')];\n            }\n            // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n            return [Math.max(Math.min.apply(Math, __spreadArrays(values, [this.get('max')])), this.get('min')), Math.min(Math.max.apply(Math, __spreadArrays(values, [this.get('min')])), this.get('max'))];\n        }\n        return value;\n    };\n    // 重置滑块 handler\n    ContinueLegend.prototype.resetHandlers = function (group) {\n        var currentValue = this.getCurrentValue();\n        var min = currentValue[0], max = currentValue[1];\n        this.resetHandler(group, 'min', min);\n        this.resetHandler(group, 'max', max);\n    };\n    // 获取滑块的 path\n    ContinueLegend.prototype.getHandlerPath = function (handlerCfg, point) {\n        var isVertical = this.isVertical();\n        var path = [];\n        var width = handlerCfg.size;\n        var x = point.x, y = point.y;\n        var height = width * HANDLER_HEIGHT_RATIO;\n        var halfWidth = width / 2;\n        var oneSixthWidth = width / 6;\n        if (isVertical) {\n            /**\n             * 竖直情况下的滑块 handler，左侧顶点是 x,y\n             *  /----|\n             *    -- |\n             *    -- |\n             *  \\----|\n             */\n            var triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n            path.push(['M', x, y]);\n            path.push(['L', triangleX, y + halfWidth]);\n            path.push(['L', x + height, y + halfWidth]);\n            path.push(['L', x + height, y - halfWidth]);\n            path.push(['L', triangleX, y - halfWidth]);\n            path.push(['Z']);\n            // 绘制两条横线\n            path.push(['M', triangleX, y + oneSixthWidth]);\n            path.push(['L', x + height - 2, y + oneSixthWidth]);\n            path.push(['M', triangleX, y - oneSixthWidth]);\n            path.push(['L', x + height - 2, y - oneSixthWidth]);\n        }\n        else {\n            /**\n             * 水平情况下的滑块，上面顶点处是 x,y\n             *  /   \\\n             * | | | |\n             * | | | |\n             *  -----\n             */\n            var triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n            path.push(['M', x, y]);\n            path.push(['L', x - halfWidth, triangleY]);\n            path.push(['L', x - halfWidth, y + height]);\n            path.push(['L', x + halfWidth, y + height]);\n            path.push(['L', x + halfWidth, triangleY]);\n            path.push(['Z']);\n            // 绘制两条竖线\n            path.push(['M', x - oneSixthWidth, triangleY]);\n            path.push(['L', x - oneSixthWidth, y + height - 2]);\n            path.push(['M', x + oneSixthWidth, triangleY]);\n            path.push(['L', x + oneSixthWidth, y + height - 2]);\n        }\n        return path;\n    };\n    // 调整 handler 的位置，如果未存在则绘制\n    ContinueLegend.prototype.resetHandler = function (group, name, value) {\n        var point = this.getPointByValue(value, group);\n        var handlerCfg = this.get('handler');\n        var path = this.getHandlerPath(handlerCfg, point);\n        var id = this.getElementId(\"handler-\" + name);\n        var handlerShape = group.findById(id);\n        var isVertical = this.isVertical();\n        if (handlerShape) {\n            handlerShape.attr('path', path);\n        }\n        else {\n            this.addShape(group, {\n                type: 'path',\n                name: \"legend-handler-\" + name,\n                draggable: true,\n                id: id,\n                attrs: __assign(__assign({ path: path }, handlerCfg.style), { cursor: isVertical ? 'ns-resize' : 'ew-resize' }),\n            });\n        }\n    };\n    // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n    // 文本的位置\n    ContinueLegend.prototype.fixedElements = function (group) {\n        var railShape = group.findById(this.getElementId('rail'));\n        var minLabel = group.findById(this.getElementId('label-min'));\n        var maxLabel = group.findById(this.getElementId('label-max'));\n        var startPoint = this.getDrawPoint();\n        if (this.isVertical()) {\n            // 横向布局\n            this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n        }\n        else {\n            // 水平布局\n            this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n        }\n    };\n    ContinueLegend.prototype.fitRailLength = function (minLabelBBox, maxLabelBBox, railBBox, railShape) {\n        var isVertical = this.isVertical();\n        var lengthField = isVertical ? 'height' : 'width';\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var maxLength = this.get(\"max\" + upperFirst(lengthField)); // get('maxWidth')\n        if (maxLength) {\n            var elementsLength = labelAlign === 'rail'\n                ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2\n                : railBBox[lengthField];\n            var diff = elementsLength - maxLength;\n            if (diff > 0) {\n                // 大于限制的长度\n                this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n            }\n        }\n    };\n    ContinueLegend.prototype.changeRailLength = function (railShape, lengthField, length) {\n        var bbox = railShape.getBBox();\n        var path;\n        if (lengthField === 'height') {\n            path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n        }\n        else {\n            path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n        }\n        railShape.attr('path', path);\n    };\n    ContinueLegend.prototype.changeRailPosition = function (railShape, x, y) {\n        var bbox = railShape.getBBox();\n        var path = this.getRailPath(x, y, bbox.width, bbox.height);\n        railShape.attr('path', path);\n    };\n    ContinueLegend.prototype.fixedHorizontal = function (minLabel, maxLabel, railShape, startPoint) {\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var railBBox = railShape.getBBox();\n        var minLabelBBox = minLabel.getBBox();\n        var maxLabelBBox = maxLabel.getBBox();\n        var railHeight = railBBox.height; // 取 rail 的高度，作为高度\n        this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n        railBBox = railShape.getBBox();\n        if (labelAlign === 'rail') {\n            // 沿着 rail 方向\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railHeight / 2,\n            });\n            this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n                y: startPoint.y + railHeight / 2,\n            });\n        }\n        else if (labelAlign === 'top') {\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n        }\n        else {\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railBBox.height + spacing,\n            });\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width,\n                y: startPoint.y + railBBox.height + spacing,\n            });\n        }\n    };\n    ContinueLegend.prototype.fixedVertail = function (minLabel, maxLabel, railShape, startPoint) {\n        var labelCfg = this.get('label');\n        var labelAlign = labelCfg.align;\n        var spacing = labelCfg.spacing;\n        var railBBox = railShape.getBBox();\n        var minLabelBBox = minLabel.getBBox();\n        var maxLabelBBox = maxLabel.getBBox();\n        this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n        railBBox = railShape.getBBox();\n        if (labelAlign === 'rail') {\n            // 沿着 rail 方向\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n            maxLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2,\n            });\n        }\n        else if (labelAlign === 'right') {\n            minLabel.attr({\n                x: startPoint.x + railBBox.width + spacing,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x + railBBox.width + spacing,\n                y: startPoint.y + railBBox.height,\n            });\n        }\n        else {\n            // left\n            var maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n            minLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y,\n            });\n            this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n            maxLabel.attr({\n                x: startPoint.x,\n                y: startPoint.y + railBBox.height,\n            });\n        }\n    };\n    return ContinueLegend;\n}(LegendBase));\nexport default ContinueLegend;\n//# sourceMappingURL=continuous.js.map"]},"metadata":{},"sourceType":"module"}