{"ast":null,"code":"import isNil from './is-nil';\nimport isArrayLike from './is-array-like';\nimport getType from './get-type';\nimport isPrototype from './is-prototype';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmpty(value) {\n  /**\n   * isEmpty(null) => true\n   * isEmpty() => true\n   * isEmpty(true) => true\n   * isEmpty(1) => true\n   * isEmpty([1, 2, 3]) => false\n   * isEmpty('abc') => false\n   * isEmpty({ a: 1 }) => false\n   */\n  if (isNil(value)) {\n    return true;\n  }\n  if (isArrayLike(value)) {\n    return !value.length;\n  }\n  var type = getType(value);\n  if (type === 'Map' || type === 'Set') {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !Object.keys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport default isEmpty;","map":{"version":3,"sources":["../src/is-empty.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,UAAU;AAC5B,OAAO,WAAW,MAAM,iBAAiB;AACzC,OAAO,OAAO,MAAM,YAAY;AAChC,OAAO,WAAW,MAAM,gBAAgB;AAExC,IAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc;AAEtD,SAAS,OAAO,CAAC,KAAU,EAAA;EACzB;;;;;;;;AAQG;EACH,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;IAChB,OAAO,IAAI;EACZ;EACD,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;IACtB,OAAO,CAAC,KAAK,CAAC,MAAM;EACrB;EACD,IAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;EAC3B,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,EAAE;IACpC,OAAO,CAAC,KAAK,CAAC,IAAI;EACnB;EACD,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;IACtB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM;EAClC;EACD,KAAK,IAAM,GAAG,IAAI,KAAK,EAAE;IACvB,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;MACnC,OAAO,KAAK;IACb;EACF;EACD,OAAO,IAAI;AACb;AAEA,eAAe,OAAO","sourceRoot":"","sourcesContent":["import isNil from './is-nil';\nimport isArrayLike from './is-array-like';\nimport getType from './get-type';\nimport isPrototype from './is-prototype';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmpty(value) {\n    /**\n     * isEmpty(null) => true\n     * isEmpty() => true\n     * isEmpty(true) => true\n     * isEmpty(1) => true\n     * isEmpty([1, 2, 3]) => false\n     * isEmpty('abc') => false\n     * isEmpty({ a: 1 }) => false\n     */\n    if (isNil(value)) {\n        return true;\n    }\n    if (isArrayLike(value)) {\n        return !value.length;\n    }\n    var type = getType(value);\n    if (type === 'Map' || type === 'Set') {\n        return !value.size;\n    }\n    if (isPrototype(value)) {\n        return !Object.keys(value).length;\n    }\n    for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport default isEmpty;\n//# sourceMappingURL=is-empty.js.map"]},"metadata":{},"sourceType":"module"}